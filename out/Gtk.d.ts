/**
 * Gtk-3.0
 */

import * as Gjs from './Gjs'
import * as xlib from './xlib'
import * as Gdk from './Gdk'
import * as cairo from './cairo'
import * as Pango from './Pango'
import * as GObject from './GObject'
import * as GLib from './GLib'
import * as Gio from './Gio'
import * as GdkPixbuf from './GdkPixbuf'
import * as GModule from './GModule'
import * as Atk from './Atk'
export enum Align {
    FILL,
    START,
    END,
    CENTER,
    BASELINE,
}
export enum ArrowPlacement {
    BOTH,
    START,
    END,
}
export enum ArrowType {
    UP,
    DOWN,
    LEFT,
    RIGHT,
    NONE,
}
export enum AssistantPageType {
    CONTENT,
    INTRO,
    CONFIRM,
    SUMMARY,
    PROGRESS,
    CUSTOM,
}
export enum BaselinePosition {
    TOP,
    CENTER,
    BOTTOM,
}
export enum BorderStyle {
    NONE,
    SOLID,
    INSET,
    OUTSET,
    HIDDEN,
    DOTTED,
    DASHED,
    DOUBLE,
    GROOVE,
    RIDGE,
}
export enum BuilderError {
    INVALID_TYPE_FUNCTION,
    UNHANDLED_TAG,
    MISSING_ATTRIBUTE,
    INVALID_ATTRIBUTE,
    INVALID_TAG,
    MISSING_PROPERTY_VALUE,
    INVALID_VALUE,
    VERSION_MISMATCH,
    DUPLICATE_ID,
    OBJECT_TYPE_REFUSED,
    TEMPLATE_MISMATCH,
    INVALID_PROPERTY,
    INVALID_SIGNAL,
    INVALID_ID,
}
export enum ButtonBoxStyle {
    SPREAD,
    EDGE,
    START,
    END,
    CENTER,
    EXPAND,
}
export enum ButtonRole {
    NORMAL,
    CHECK,
    RADIO,
}
export enum ButtonsType {
    NONE,
    OK,
    CLOSE,
    CANCEL,
    YES_NO,
    OK_CANCEL,
}
export enum CellRendererAccelMode {
    GTK,
    OTHER,
    MODIFIER_TAP,
}
export enum CellRendererMode {
    INERT,
    ACTIVATABLE,
    EDITABLE,
}
export enum CornerType {
    TOP_LEFT,
    BOTTOM_LEFT,
    TOP_RIGHT,
    BOTTOM_RIGHT,
}
export enum CssProviderError {
    FAILED,
    SYNTAX,
    IMPORT,
    NAME,
    DEPRECATED,
    UNKNOWN_VALUE,
}
export enum CssSectionType {
    DOCUMENT,
    IMPORT,
    COLOR_DEFINITION,
    BINDING_SET,
    RULESET,
    SELECTOR,
    DECLARATION,
    VALUE,
    KEYFRAMES,
}
export enum DeleteType {
    CHARS,
    WORD_ENDS,
    WORDS,
    DISPLAY_LINES,
    DISPLAY_LINE_ENDS,
    PARAGRAPH_ENDS,
    PARAGRAPHS,
    WHITESPACE,
}
export enum DirectionType {
    TAB_FORWARD,
    TAB_BACKWARD,
    UP,
    DOWN,
    LEFT,
    RIGHT,
}
export enum DragResult {
    SUCCESS,
    NO_TARGET,
    USER_CANCELLED,
    TIMEOUT_EXPIRED,
    GRAB_BROKEN,
    ERROR,
}
export enum EntryIconPosition {
    PRIMARY,
    SECONDARY,
}
export enum EventSequenceState {
    NONE,
    CLAIMED,
    DENIED,
}
export enum ExpanderStyle {
    COLLAPSED,
    SEMI_COLLAPSED,
    SEMI_EXPANDED,
    EXPANDED,
}
export enum FileChooserAction {
    OPEN,
    SAVE,
    SELECT_FOLDER,
    CREATE_FOLDER,
}
export enum FileChooserConfirmation {
    CONFIRM,
    ACCEPT_FILENAME,
    SELECT_AGAIN,
}
export enum FileChooserError {
    NONEXISTENT,
    BAD_FILENAME,
    ALREADY_EXISTS,
    INCOMPLETE_HOSTNAME,
}
export enum IMPreeditStyle {
    NOTHING,
    CALLBACK,
    NONE,
}
export enum IMStatusStyle {
    NOTHING,
    CALLBACK,
    NONE,
}
export enum IconSize {
    INVALID,
    MENU,
    SMALL_TOOLBAR,
    LARGE_TOOLBAR,
    BUTTON,
    DND,
    DIALOG,
}
export enum IconThemeError {
    NOT_FOUND,
    FAILED,
}
export enum IconViewDropPosition {
    NO_DROP,
    DROP_INTO,
    DROP_LEFT,
    DROP_RIGHT,
    DROP_ABOVE,
    DROP_BELOW,
}
export enum ImageType {
    EMPTY,
    PIXBUF,
    STOCK,
    ICON_SET,
    ANIMATION,
    ICON_NAME,
    GICON,
    SURFACE,
}
export enum InputPurpose {
    FREE_FORM,
    ALPHA,
    DIGITS,
    NUMBER,
    PHONE,
    URL,
    EMAIL,
    NAME,
    PASSWORD,
    PIN,
}
export enum Justification {
    LEFT,
    RIGHT,
    CENTER,
    FILL,
}
export enum LevelBarMode {
    CONTINUOUS,
    DISCRETE,
}
export enum License {
    UNKNOWN,
    CUSTOM,
    GPL_2_0,
    GPL_3_0,
    LGPL_2_1,
    LGPL_3_0,
    BSD,
    MIT_X11,
    ARTISTIC,
    GPL_2_0_ONLY,
    GPL_3_0_ONLY,
    LGPL_2_1_ONLY,
    LGPL_3_0_ONLY,
    AGPL_3_0,
}
export enum MenuDirectionType {
    PARENT,
    CHILD,
    NEXT,
    PREV,
}
export enum MessageType {
    INFO,
    WARNING,
    QUESTION,
    ERROR,
    OTHER,
}
export enum MovementStep {
    LOGICAL_POSITIONS,
    VISUAL_POSITIONS,
    WORDS,
    DISPLAY_LINES,
    DISPLAY_LINE_ENDS,
    PARAGRAPHS,
    PARAGRAPH_ENDS,
    PAGES,
    BUFFER_ENDS,
    HORIZONTAL_PAGES,
}
export enum NotebookTab {
    FIRST,
    LAST,
}
export enum NumberUpLayout {
    LRTB,
    LRBT,
    RLTB,
    RLBT,
    TBLR,
    TBRL,
    BTLR,
    BTRL,
}
export enum Orientation {
    HORIZONTAL,
    VERTICAL,
}
export enum PackDirection {
    LTR,
    RTL,
    TTB,
    BTT,
}
export enum PackType {
    START,
    END,
}
export enum PadActionType {
    BUTTON,
    RING,
    STRIP,
}
export enum PageOrientation {
    PORTRAIT,
    LANDSCAPE,
    REVERSE_PORTRAIT,
    REVERSE_LANDSCAPE,
}
export enum PageSet {
    ALL,
    EVEN,
    ODD,
}
export enum PanDirection {
    LEFT,
    RIGHT,
    UP,
    DOWN,
}
export enum PathPriorityType {
    LOWEST,
    GTK,
    APPLICATION,
    THEME,
    RC,
    HIGHEST,
}
export enum PathType {
    WIDGET,
    WIDGET_CLASS,
    CLASS,
}
export enum PolicyType {
    ALWAYS,
    AUTOMATIC,
    NEVER,
    EXTERNAL,
}
export enum PopoverConstraint {
    NONE,
    WINDOW,
}
export enum PositionType {
    LEFT,
    RIGHT,
    TOP,
    BOTTOM,
}
export enum PrintDuplex {
    SIMPLEX,
    HORIZONTAL,
    VERTICAL,
}
export enum PrintError {
    GENERAL,
    INTERNAL_ERROR,
    NOMEM,
    INVALID_FILE,
}
export enum PrintOperationAction {
    PRINT_DIALOG,
    PRINT,
    PREVIEW,
    EXPORT,
}
export enum PrintOperationResult {
    ERROR,
    APPLY,
    CANCEL,
    IN_PROGRESS,
}
export enum PrintPages {
    ALL,
    CURRENT,
    RANGES,
    SELECTION,
}
export enum PrintQuality {
    LOW,
    NORMAL,
    HIGH,
    DRAFT,
}
export enum PrintStatus {
    INITIAL,
    PREPARING,
    GENERATING_DATA,
    SENDING_DATA,
    PENDING,
    PENDING_ISSUE,
    PRINTING,
    FINISHED,
    FINISHED_ABORTED,
}
export enum PropagationPhase {
    NONE,
    CAPTURE,
    BUBBLE,
    TARGET,
}
export enum RcTokenType {
    INVALID,
    INCLUDE,
    NORMAL,
    ACTIVE,
    PRELIGHT,
    SELECTED,
    INSENSITIVE,
    FG,
    BG,
    TEXT,
    BASE,
    XTHICKNESS,
    YTHICKNESS,
    FONT,
    FONTSET,
    FONT_NAME,
    BG_PIXMAP,
    PIXMAP_PATH,
    STYLE,
    BINDING,
    BIND,
    WIDGET,
    WIDGET_CLASS,
    CLASS,
    LOWEST,
    GTK,
    APPLICATION,
    THEME,
    RC,
    HIGHEST,
    ENGINE,
    MODULE_PATH,
    IM_MODULE_PATH,
    IM_MODULE_FILE,
    STOCK,
    LTR,
    RTL,
    COLOR,
    UNBIND,
    LAST,
}
export enum RecentChooserError {
    NOT_FOUND,
    INVALID_URI,
}
export enum RecentManagerError {
    NOT_FOUND,
    INVALID_URI,
    INVALID_ENCODING,
    NOT_REGISTERED,
    READ,
    WRITE,
    UNKNOWN,
}
export enum RecentSortType {
    NONE,
    MRU,
    LRU,
    CUSTOM,
}
export enum ReliefStyle {
    NORMAL,
    HALF,
    NONE,
}
export enum ResizeMode {
    PARENT,
    QUEUE,
    IMMEDIATE,
}
export enum ResponseType {
    NONE,
    REJECT,
    ACCEPT,
    DELETE_EVENT,
    OK,
    CANCEL,
    CLOSE,
    YES,
    NO,
    APPLY,
    HELP,
}
export enum RevealerTransitionType {
    NONE,
    CROSSFADE,
    SLIDE_RIGHT,
    SLIDE_LEFT,
    SLIDE_UP,
    SLIDE_DOWN,
}
export enum ScrollStep {
    STEPS,
    PAGES,
    ENDS,
    HORIZONTAL_STEPS,
    HORIZONTAL_PAGES,
    HORIZONTAL_ENDS,
}
export enum ScrollType {
    NONE,
    JUMP,
    STEP_BACKWARD,
    STEP_FORWARD,
    PAGE_BACKWARD,
    PAGE_FORWARD,
    STEP_UP,
    STEP_DOWN,
    PAGE_UP,
    PAGE_DOWN,
    STEP_LEFT,
    STEP_RIGHT,
    PAGE_LEFT,
    PAGE_RIGHT,
    START,
    END,
}
export enum ScrollablePolicy {
    MINIMUM,
    NATURAL,
}
export enum SelectionMode {
    NONE,
    SINGLE,
    BROWSE,
    MULTIPLE,
}
export enum SensitivityType {
    AUTO,
    ON,
    OFF,
}
export enum ShadowType {
    NONE,
    IN,
    OUT,
    ETCHED_IN,
    ETCHED_OUT,
}
export enum ShortcutType {
    ACCELERATOR,
    GESTURE_PINCH,
    GESTURE_STRETCH,
    GESTURE_ROTATE_CLOCKWISE,
    GESTURE_ROTATE_COUNTERCLOCKWISE,
    GESTURE_TWO_FINGER_SWIPE_LEFT,
    GESTURE_TWO_FINGER_SWIPE_RIGHT,
    GESTURE,
}
export enum SizeGroupMode {
    NONE,
    HORIZONTAL,
    VERTICAL,
    BOTH,
}
export enum SizeRequestMode {
    HEIGHT_FOR_WIDTH,
    WIDTH_FOR_HEIGHT,
    CONSTANT_SIZE,
}
export enum SortType {
    ASCENDING,
    DESCENDING,
}
export enum SpinButtonUpdatePolicy {
    ALWAYS,
    IF_VALID,
}
export enum SpinType {
    STEP_FORWARD,
    STEP_BACKWARD,
    PAGE_FORWARD,
    PAGE_BACKWARD,
    HOME,
    END,
    USER_DEFINED,
}
export enum StackTransitionType {
    NONE,
    CROSSFADE,
    SLIDE_RIGHT,
    SLIDE_LEFT,
    SLIDE_UP,
    SLIDE_DOWN,
    SLIDE_LEFT_RIGHT,
    SLIDE_UP_DOWN,
    OVER_UP,
    OVER_DOWN,
    OVER_LEFT,
    OVER_RIGHT,
    UNDER_UP,
    UNDER_DOWN,
    UNDER_LEFT,
    UNDER_RIGHT,
    OVER_UP_DOWN,
    OVER_DOWN_UP,
    OVER_LEFT_RIGHT,
    OVER_RIGHT_LEFT,
}
export enum StateType {
    NORMAL,
    ACTIVE,
    PRELIGHT,
    SELECTED,
    INSENSITIVE,
    INCONSISTENT,
    FOCUSED,
}
export enum TextBufferTargetInfo {
    BUFFER_CONTENTS,
    RICH_TEXT,
    TEXT,
}
export enum TextDirection {
    NONE,
    LTR,
    RTL,
}
export enum TextExtendSelection {
    WORD,
    LINE,
}
export enum TextViewLayer {
    BELOW,
    ABOVE,
    BELOW_TEXT,
    ABOVE_TEXT,
}
export enum TextWindowType {
    PRIVATE,
    WIDGET,
    TEXT,
    LEFT,
    RIGHT,
    TOP,
    BOTTOM,
}
export enum ToolbarSpaceStyle {
    EMPTY,
    LINE,
}
export enum ToolbarStyle {
    ICONS,
    TEXT,
    BOTH,
    BOTH_HORIZ,
}
export enum TreeViewColumnSizing {
    GROW_ONLY,
    AUTOSIZE,
    FIXED,
}
export enum TreeViewDropPosition {
    BEFORE,
    AFTER,
    INTO_OR_BEFORE,
    INTO_OR_AFTER,
}
export enum TreeViewGridLines {
    NONE,
    HORIZONTAL,
    VERTICAL,
    BOTH,
}
export enum Unit {
    NONE,
    POINTS,
    INCH,
    MM,
}
export enum WidgetHelpType {
    TOOLTIP,
    WHATS_THIS,
}
export enum WindowPosition {
    NONE,
    CENTER,
    MOUSE,
    CENTER_ALWAYS,
    CENTER_ON_PARENT,
}
export enum WindowType {
    TOPLEVEL,
    POPUP,
}
export enum WrapMode {
    NONE,
    CHAR,
    WORD,
    WORD_CHAR,
}
export enum AccelFlags {
    VISIBLE,
    LOCKED,
    MASK,
}
export enum ApplicationInhibitFlags {
    LOGOUT,
    SWITCH,
    SUSPEND,
    IDLE,
}
export enum AttachOptions {
    EXPAND,
    SHRINK,
    FILL,
}
export enum CalendarDisplayOptions {
    SHOW_HEADING,
    SHOW_DAY_NAMES,
    NO_MONTH_CHANGE,
    SHOW_WEEK_NUMBERS,
    SHOW_DETAILS,
}
export enum CellRendererState {
    SELECTED,
    PRELIT,
    INSENSITIVE,
    SORTED,
    FOCUSED,
    EXPANDABLE,
    EXPANDED,
}
export enum DebugFlag {
    MISC,
    PLUGSOCKET,
    TEXT,
    TREE,
    UPDATES,
    KEYBINDINGS,
    MULTIHEAD,
    MODULES,
    GEOMETRY,
    ICONTHEME,
    PRINTING,
    BUILDER,
    SIZE_REQUEST,
    NO_CSS_CACHE,
    BASELINES,
    PIXEL_CACHE,
    NO_PIXEL_CACHE,
    INTERACTIVE,
    TOUCHSCREEN,
    ACTIONS,
    RESIZE,
    LAYOUT,
}
export enum DestDefaults {
    MOTION,
    HIGHLIGHT,
    DROP,
    ALL,
}
export enum DialogFlags {
    MODAL,
    DESTROY_WITH_PARENT,
    USE_HEADER_BAR,
}
export enum FileFilterFlags {
    FILENAME,
    URI,
    DISPLAY_NAME,
    MIME_TYPE,
}
export enum IconLookupFlags {
    NO_SVG,
    FORCE_SVG,
    USE_BUILTIN,
    GENERIC_FALLBACK,
    FORCE_SIZE,
    FORCE_REGULAR,
    FORCE_SYMBOLIC,
    DIR_LTR,
    DIR_RTL,
}
export enum InputHints {
    NONE,
    SPELLCHECK,
    NO_SPELLCHECK,
    WORD_COMPLETION,
    LOWERCASE,
    UPPERCASE_CHARS,
    UPPERCASE_WORDS,
    UPPERCASE_SENTENCES,
    INHIBIT_OSK,
    VERTICAL_WRITING,
    EMOJI,
    NO_EMOJI,
}
export enum JunctionSides {
    NONE,
    CORNER_TOPLEFT,
    CORNER_TOPRIGHT,
    CORNER_BOTTOMLEFT,
    CORNER_BOTTOMRIGHT,
    TOP,
    BOTTOM,
    LEFT,
    RIGHT,
}
export enum PlacesOpenFlags {
    NORMAL,
    NEW_TAB,
    NEW_WINDOW,
}
export enum RcFlags {
    FG,
    BG,
    TEXT,
    BASE,
}
export enum RecentFilterFlags {
    URI,
    DISPLAY_NAME,
    MIME_TYPE,
    APPLICATION,
    GROUP,
    AGE,
}
export enum RegionFlags {
    EVEN,
    ODD,
    FIRST,
    LAST,
    ONLY,
    SORTED,
}
export enum StateFlags {
    NORMAL,
    ACTIVE,
    PRELIGHT,
    SELECTED,
    INSENSITIVE,
    INCONSISTENT,
    FOCUSED,
    BACKDROP,
    DIR_LTR,
    DIR_RTL,
    LINK,
    VISITED,
    CHECKED,
    DROP_ACTIVE,
}
export enum StyleContextPrintFlags {
    NONE,
    RECURSE,
    SHOW_STYLE,
}
export enum TargetFlags {
    SAME_APP,
    SAME_WIDGET,
    OTHER_APP,
    OTHER_WIDGET,
}
export enum TextSearchFlags {
    VISIBLE_ONLY,
    TEXT_ONLY,
    CASE_INSENSITIVE,
}
export enum ToolPaletteDragTargets {
    ITEMS,
    GROUPS,
}
export enum TreeModelFlags {
    ITERS_PERSIST,
    LIST_ONLY,
}
export enum UIManagerItemType {
    AUTO,
    MENUBAR,
    MENU,
    TOOLBAR,
    PLACEHOLDER,
    POPUP,
    MENUITEM,
    TOOLITEM,
    SEPARATOR,
    ACCELERATOR,
    POPUP_WITH_ACCELS,
}
export const BINARY_AGE:number
export const INPUT_ERROR:number
export const INTERFACE_AGE:number
export const LEVEL_BAR_OFFSET_FULL:string
export const LEVEL_BAR_OFFSET_HIGH:string
export const LEVEL_BAR_OFFSET_LOW:string
export const MAJOR_VERSION:number
export const MAX_COMPOSE_LEN:number
export const MICRO_VERSION:number
export const MINOR_VERSION:number
export const PAPER_NAME_A3:string
export const PAPER_NAME_A4:string
export const PAPER_NAME_A5:string
export const PAPER_NAME_B5:string
export const PAPER_NAME_EXECUTIVE:string
export const PAPER_NAME_LEGAL:string
export const PAPER_NAME_LETTER:string
export const PATH_PRIO_MASK:number
export const PRINT_SETTINGS_COLLATE:string
export const PRINT_SETTINGS_DEFAULT_SOURCE:string
export const PRINT_SETTINGS_DITHER:string
export const PRINT_SETTINGS_DUPLEX:string
export const PRINT_SETTINGS_FINISHINGS:string
export const PRINT_SETTINGS_MEDIA_TYPE:string
export const PRINT_SETTINGS_NUMBER_UP:string
export const PRINT_SETTINGS_NUMBER_UP_LAYOUT:string
export const PRINT_SETTINGS_N_COPIES:string
export const PRINT_SETTINGS_ORIENTATION:string
export const PRINT_SETTINGS_OUTPUT_BASENAME:string
export const PRINT_SETTINGS_OUTPUT_BIN:string
export const PRINT_SETTINGS_OUTPUT_DIR:string
export const PRINT_SETTINGS_OUTPUT_FILE_FORMAT:string
export const PRINT_SETTINGS_OUTPUT_URI:string
export const PRINT_SETTINGS_PAGE_RANGES:string
export const PRINT_SETTINGS_PAGE_SET:string
export const PRINT_SETTINGS_PAPER_FORMAT:string
export const PRINT_SETTINGS_PAPER_HEIGHT:string
export const PRINT_SETTINGS_PAPER_WIDTH:string
export const PRINT_SETTINGS_PRINTER:string
export const PRINT_SETTINGS_PRINTER_LPI:string
export const PRINT_SETTINGS_PRINT_PAGES:string
export const PRINT_SETTINGS_QUALITY:string
export const PRINT_SETTINGS_RESOLUTION:string
export const PRINT_SETTINGS_RESOLUTION_X:string
export const PRINT_SETTINGS_RESOLUTION_Y:string
export const PRINT_SETTINGS_REVERSE:string
export const PRINT_SETTINGS_SCALE:string
export const PRINT_SETTINGS_USE_COLOR:string
export const PRINT_SETTINGS_WIN32_DRIVER_EXTRA:string
export const PRINT_SETTINGS_WIN32_DRIVER_VERSION:string
export const PRIORITY_RESIZE:number
export const STOCK_ABOUT:string
export const STOCK_ADD:string
export const STOCK_APPLY:string
export const STOCK_BOLD:string
export const STOCK_CANCEL:string
export const STOCK_CAPS_LOCK_WARNING:string
export const STOCK_CDROM:string
export const STOCK_CLEAR:string
export const STOCK_CLOSE:string
export const STOCK_COLOR_PICKER:string
export const STOCK_CONNECT:string
export const STOCK_CONVERT:string
export const STOCK_COPY:string
export const STOCK_CUT:string
export const STOCK_DELETE:string
export const STOCK_DIALOG_AUTHENTICATION:string
export const STOCK_DIALOG_ERROR:string
export const STOCK_DIALOG_INFO:string
export const STOCK_DIALOG_QUESTION:string
export const STOCK_DIALOG_WARNING:string
export const STOCK_DIRECTORY:string
export const STOCK_DISCARD:string
export const STOCK_DISCONNECT:string
export const STOCK_DND:string
export const STOCK_DND_MULTIPLE:string
export const STOCK_EDIT:string
export const STOCK_EXECUTE:string
export const STOCK_FILE:string
export const STOCK_FIND:string
export const STOCK_FIND_AND_REPLACE:string
export const STOCK_FLOPPY:string
export const STOCK_FULLSCREEN:string
export const STOCK_GOTO_BOTTOM:string
export const STOCK_GOTO_FIRST:string
export const STOCK_GOTO_LAST:string
export const STOCK_GOTO_TOP:string
export const STOCK_GO_BACK:string
export const STOCK_GO_DOWN:string
export const STOCK_GO_FORWARD:string
export const STOCK_GO_UP:string
export const STOCK_HARDDISK:string
export const STOCK_HELP:string
export const STOCK_HOME:string
export const STOCK_INDENT:string
export const STOCK_INDEX:string
export const STOCK_INFO:string
export const STOCK_ITALIC:string
export const STOCK_JUMP_TO:string
export const STOCK_JUSTIFY_CENTER:string
export const STOCK_JUSTIFY_FILL:string
export const STOCK_JUSTIFY_LEFT:string
export const STOCK_JUSTIFY_RIGHT:string
export const STOCK_LEAVE_FULLSCREEN:string
export const STOCK_MEDIA_FORWARD:string
export const STOCK_MEDIA_NEXT:string
export const STOCK_MEDIA_PAUSE:string
export const STOCK_MEDIA_PLAY:string
export const STOCK_MEDIA_PREVIOUS:string
export const STOCK_MEDIA_RECORD:string
export const STOCK_MEDIA_REWIND:string
export const STOCK_MEDIA_STOP:string
export const STOCK_MISSING_IMAGE:string
export const STOCK_NETWORK:string
export const STOCK_NEW:string
export const STOCK_NO:string
export const STOCK_OK:string
export const STOCK_OPEN:string
export const STOCK_ORIENTATION_LANDSCAPE:string
export const STOCK_ORIENTATION_PORTRAIT:string
export const STOCK_ORIENTATION_REVERSE_LANDSCAPE:string
export const STOCK_ORIENTATION_REVERSE_PORTRAIT:string
export const STOCK_PAGE_SETUP:string
export const STOCK_PASTE:string
export const STOCK_PREFERENCES:string
export const STOCK_PRINT:string
export const STOCK_PRINT_ERROR:string
export const STOCK_PRINT_PAUSED:string
export const STOCK_PRINT_PREVIEW:string
export const STOCK_PRINT_REPORT:string
export const STOCK_PRINT_WARNING:string
export const STOCK_PROPERTIES:string
export const STOCK_QUIT:string
export const STOCK_REDO:string
export const STOCK_REFRESH:string
export const STOCK_REMOVE:string
export const STOCK_REVERT_TO_SAVED:string
export const STOCK_SAVE:string
export const STOCK_SAVE_AS:string
export const STOCK_SELECT_ALL:string
export const STOCK_SELECT_COLOR:string
export const STOCK_SELECT_FONT:string
export const STOCK_SORT_ASCENDING:string
export const STOCK_SORT_DESCENDING:string
export const STOCK_SPELL_CHECK:string
export const STOCK_STOP:string
export const STOCK_STRIKETHROUGH:string
export const STOCK_UNDELETE:string
export const STOCK_UNDERLINE:string
export const STOCK_UNDO:string
export const STOCK_UNINDENT:string
export const STOCK_YES:string
export const STOCK_ZOOM_100:string
export const STOCK_ZOOM_FIT:string
export const STOCK_ZOOM_IN:string
export const STOCK_ZOOM_OUT:string
export const STYLE_CLASS_ACCELERATOR:string
export const STYLE_CLASS_ARROW:string
export const STYLE_CLASS_BACKGROUND:string
export const STYLE_CLASS_BOTTOM:string
export const STYLE_CLASS_BUTTON:string
export const STYLE_CLASS_CALENDAR:string
export const STYLE_CLASS_CELL:string
export const STYLE_CLASS_CHECK:string
export const STYLE_CLASS_COMBOBOX_ENTRY:string
export const STYLE_CLASS_CONTEXT_MENU:string
export const STYLE_CLASS_CSD:string
export const STYLE_CLASS_CURSOR_HANDLE:string
export const STYLE_CLASS_DEFAULT:string
export const STYLE_CLASS_DESTRUCTIVE_ACTION:string
export const STYLE_CLASS_DIM_LABEL:string
export const STYLE_CLASS_DND:string
export const STYLE_CLASS_DOCK:string
export const STYLE_CLASS_ENTRY:string
export const STYLE_CLASS_ERROR:string
export const STYLE_CLASS_EXPANDER:string
export const STYLE_CLASS_FLAT:string
export const STYLE_CLASS_FRAME:string
export const STYLE_CLASS_GRIP:string
export const STYLE_CLASS_HEADER:string
export const STYLE_CLASS_HIGHLIGHT:string
export const STYLE_CLASS_HORIZONTAL:string
export const STYLE_CLASS_IMAGE:string
export const STYLE_CLASS_INFO:string
export const STYLE_CLASS_INLINE_TOOLBAR:string
export const STYLE_CLASS_INSERTION_CURSOR:string
export const STYLE_CLASS_LABEL:string
export const STYLE_CLASS_LEFT:string
export const STYLE_CLASS_LEVEL_BAR:string
export const STYLE_CLASS_LINKED:string
export const STYLE_CLASS_LIST:string
export const STYLE_CLASS_LIST_ROW:string
export const STYLE_CLASS_MARK:string
export const STYLE_CLASS_MENU:string
export const STYLE_CLASS_MENUBAR:string
export const STYLE_CLASS_MENUITEM:string
export const STYLE_CLASS_MESSAGE_DIALOG:string
export const STYLE_CLASS_MONOSPACE:string
export const STYLE_CLASS_NEEDS_ATTENTION:string
export const STYLE_CLASS_NOTEBOOK:string
export const STYLE_CLASS_OSD:string
export const STYLE_CLASS_OVERSHOOT:string
export const STYLE_CLASS_PANE_SEPARATOR:string
export const STYLE_CLASS_PAPER:string
export const STYLE_CLASS_POPOVER:string
export const STYLE_CLASS_POPUP:string
export const STYLE_CLASS_PRIMARY_TOOLBAR:string
export const STYLE_CLASS_PROGRESSBAR:string
export const STYLE_CLASS_PULSE:string
export const STYLE_CLASS_QUESTION:string
export const STYLE_CLASS_RADIO:string
export const STYLE_CLASS_RAISED:string
export const STYLE_CLASS_READ_ONLY:string
export const STYLE_CLASS_RIGHT:string
export const STYLE_CLASS_RUBBERBAND:string
export const STYLE_CLASS_SCALE:string
export const STYLE_CLASS_SCALE_HAS_MARKS_ABOVE:string
export const STYLE_CLASS_SCALE_HAS_MARKS_BELOW:string
export const STYLE_CLASS_SCROLLBAR:string
export const STYLE_CLASS_SCROLLBARS_JUNCTION:string
export const STYLE_CLASS_SEPARATOR:string
export const STYLE_CLASS_SIDEBAR:string
export const STYLE_CLASS_SLIDER:string
export const STYLE_CLASS_SPINBUTTON:string
export const STYLE_CLASS_SPINNER:string
export const STYLE_CLASS_STATUSBAR:string
export const STYLE_CLASS_SUBTITLE:string
export const STYLE_CLASS_SUGGESTED_ACTION:string
export const STYLE_CLASS_TITLE:string
export const STYLE_CLASS_TITLEBAR:string
export const STYLE_CLASS_TOOLBAR:string
export const STYLE_CLASS_TOOLTIP:string
export const STYLE_CLASS_TOP:string
export const STYLE_CLASS_TOUCH_SELECTION:string
export const STYLE_CLASS_TROUGH:string
export const STYLE_CLASS_UNDERSHOOT:string
export const STYLE_CLASS_VERTICAL:string
export const STYLE_CLASS_VIEW:string
export const STYLE_CLASS_WARNING:string
export const STYLE_CLASS_WIDE:string
export const STYLE_PROPERTY_BACKGROUND_COLOR:string
export const STYLE_PROPERTY_BACKGROUND_IMAGE:string
export const STYLE_PROPERTY_BORDER_COLOR:string
export const STYLE_PROPERTY_BORDER_RADIUS:string
export const STYLE_PROPERTY_BORDER_STYLE:string
export const STYLE_PROPERTY_BORDER_WIDTH:string
export const STYLE_PROPERTY_COLOR:string
export const STYLE_PROPERTY_FONT:string
export const STYLE_PROPERTY_MARGIN:string
export const STYLE_PROPERTY_PADDING:string
export const STYLE_PROVIDER_PRIORITY_APPLICATION:number
export const STYLE_PROVIDER_PRIORITY_FALLBACK:number
export const STYLE_PROVIDER_PRIORITY_SETTINGS:number
export const STYLE_PROVIDER_PRIORITY_THEME:number
export const STYLE_PROVIDER_PRIORITY_USER:number
export const STYLE_REGION_COLUMN:string
export const STYLE_REGION_COLUMN_HEADER:string
export const STYLE_REGION_ROW:string
export const STYLE_REGION_TAB:string
export const TEXT_VIEW_PRIORITY_VALIDATE:number
export const TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID:number
export const TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID:number
export function accel_groups_activate(object: GObject.Object, accel_key: number, accel_mods: Gdk.ModifierType): boolean
export function accel_groups_from_object(object: GObject.Object): GLib.SList
export function accelerator_get_default_mod_mask(): Gdk.ModifierType
export function accelerator_get_label(accelerator_key: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_get_label_with_keycode(display: Gdk.Display | null, accelerator_key: number, keycode: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_name(accelerator_key: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_name_with_keycode(display: Gdk.Display | null, accelerator_key: number, keycode: number, accelerator_mods: Gdk.ModifierType): string
export function accelerator_parse(accelerator: string): [ /* accelerator_key */ number | null, /* accelerator_mods */ Gdk.ModifierType | null ]
export function accelerator_parse_with_keycode(accelerator: string): [ /* accelerator_key */ number | null, /* accelerator_codes */ number[] | null, /* accelerator_mods */ Gdk.ModifierType | null ]
export function accelerator_set_default_mod_mask(default_mod_mask: Gdk.ModifierType): void
export function accelerator_valid(keyval: number, modifiers: Gdk.ModifierType): boolean
export function alternative_dialog_button_order(screen?: Gdk.Screen | null): boolean
export function binding_entry_add_signal_from_string(binding_set: BindingSet, signal_desc: string): GLib.TokenType
export function binding_entry_add_signall(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType, signal_name: string, binding_args: GLib.SList): void
export function binding_entry_remove(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType): void
export function binding_entry_skip(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType): void
export function binding_set_find(set_name: string): BindingSet | null
export function bindings_activate(object: GObject.Object, keyval: number, modifiers: Gdk.ModifierType): boolean
export function bindings_activate_event(object: GObject.Object, event: Gdk.EventKey): boolean
export function builder_error_quark(): GLib.Quark
export function cairo_should_draw_window(cr: cairo.Context, window: Gdk.Window): boolean
export function cairo_transform_to_window(cr: cairo.Context, widget: Widget, window: Gdk.Window): void
export function check_version(required_major: number, required_minor: number, required_micro: number): string | null
export function css_provider_error_quark(): GLib.Quark
export function device_grab_add(widget: Widget, device: Gdk.Device, block_others: boolean): void
export function device_grab_remove(widget: Widget, device: Gdk.Device): void
export function disable_setlocale(): void
export function distribute_natural_allocation(extra_space: number, n_requested_sizes: number, sizes: RequestedSize): number
export function drag_cancel(context: Gdk.DragContext): void
export function drag_finish(context: Gdk.DragContext, success: boolean, del: boolean, time_: number): void
export function drag_get_source_widget(context: Gdk.DragContext): Widget | null
export function drag_set_icon_default(context: Gdk.DragContext): void
export function drag_set_icon_gicon(context: Gdk.DragContext, icon: Gio.Icon, hot_x: number, hot_y: number): void
export function drag_set_icon_name(context: Gdk.DragContext, icon_name: string, hot_x: number, hot_y: number): void
export function drag_set_icon_pixbuf(context: Gdk.DragContext, pixbuf: GdkPixbuf.Pixbuf, hot_x: number, hot_y: number): void
export function drag_set_icon_stock(context: Gdk.DragContext, stock_id: string, hot_x: number, hot_y: number): void
export function drag_set_icon_surface(context: Gdk.DragContext, surface: cairo.Surface): void
export function drag_set_icon_widget(context: Gdk.DragContext, widget: Widget, hot_x: number, hot_y: number): void
export function draw_insertion_cursor(widget: Widget, cr: cairo.Context, location: Gdk.Rectangle, is_primary: boolean, direction: TextDirection, draw_arrow: boolean): void
export function events_pending(): boolean
/* Function 'false' is a reserved word */
export function file_chooser_error_quark(): GLib.Quark
export function get_binary_age(): number
export function get_current_event(): Gdk.Event | null
export function get_current_event_device(): Gdk.Device | null
export function get_current_event_state(): [ /* returnType */ boolean, /* state */ Gdk.ModifierType ]
export function get_current_event_time(): number
export function get_debug_flags(): number
export function get_default_language(): Pango.Language
export function get_event_widget(event: Gdk.Event): Widget | null
export function get_interface_age(): number
export function get_locale_direction(): TextDirection
export function get_major_version(): number
export function get_micro_version(): number
export function get_minor_version(): number
export function get_option_group(open_default_display: boolean): GLib.OptionGroup
export function grab_get_current(): Widget | null
export function icon_size_from_name(name: string): number
export function icon_size_get_name(size: number): string
export function icon_size_lookup(size: number): [ /* returnType */ boolean, /* width */ number | null, /* height */ number | null ]
export function icon_size_lookup_for_settings(settings: Settings, size: number): [ /* returnType */ boolean, /* width */ number | null, /* height */ number | null ]
export function icon_size_register(name: string, width: number, height: number): number
export function icon_size_register_alias(alias: string, target: number): void
export function icon_theme_error_quark(): GLib.Quark
export function init(argv?: string[] | null): void
export function init_check(argv?: string[] | null): boolean
export function init_with_args(argv: string[] | null, parameter_string: string | null, entries: GLib.OptionEntry[], translation_domain?: string | null): boolean
export function key_snooper_remove(snooper_handler_id: number): void
export function main(): void
export function main_do_event(event: Gdk.Event): void
export function main_iteration(): boolean
export function main_iteration_do(blocking: boolean): boolean
export function main_level(): number
export function main_quit(): void
export function paint_arrow(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, arrow_type: ArrowType, fill: boolean, x: number, y: number, width: number, height: number): void
export function paint_box(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_box_gap(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number, gap_side: PositionType, gap_x: number, gap_width: number): void
export function paint_check(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_diamond(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_expander(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, x: number, y: number, expander_style: ExpanderStyle): void
export function paint_extension(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number, gap_side: PositionType): void
export function paint_flat_box(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_focus(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_handle(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number, orientation: Orientation): void
export function paint_hline(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, x1: number, x2: number, y: number): void
export function paint_layout(style: Style, cr: cairo.Context, state_type: StateType, use_text: boolean, widget: Widget | null, detail: string | null, x: number, y: number, layout: Pango.Layout): void
export function paint_option(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_resize_grip(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, edge: Gdk.WindowEdge, x: number, y: number, width: number, height: number): void
export function paint_shadow(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_shadow_gap(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number, gap_side: PositionType, gap_x: number, gap_width: number): void
export function paint_slider(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number, orientation: Orientation): void
export function paint_spinner(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, step: number, x: number, y: number, width: number, height: number): void
export function paint_tab(style: Style, cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget | null, detail: string | null, x: number, y: number, width: number, height: number): void
export function paint_vline(style: Style, cr: cairo.Context, state_type: StateType, widget: Widget | null, detail: string | null, y1_: number, y2_: number, x: number): void
export function paper_size_get_default(): string
export function paper_size_get_paper_sizes(include_custom: boolean): PaperSize[]
export function parse_args(argv: string[]): boolean
export function print_error_quark(): GLib.Quark
export function print_run_page_setup_dialog(parent: Window | null, page_setup: PageSetup | null, settings: PrintSettings): PageSetup
export function print_run_page_setup_dialog_async(parent: Window | null, page_setup: PageSetup | null, settings: PrintSettings, done_cb: PageSetupDoneFunc): void
export function propagate_event(widget: Widget, event: Gdk.Event): void
export function rc_add_default_file(filename: string): void
export function rc_find_module_in_path(module_file: string): string
export function rc_find_pixmap_in_path(settings: Settings, scanner: GLib.Scanner, pixmap_file: string): string
export function rc_get_default_files(): any
export function rc_get_im_module_file(): string
export function rc_get_im_module_path(): string
export function rc_get_module_dir(): string
export function rc_get_style(widget: Widget): Style
export function rc_get_style_by_paths(settings: Settings, widget_path: string | null, class_path: string | null, type: number): Style | null
export function rc_get_theme_dir(): string
export function rc_parse(filename: string): void
export function rc_parse_color(scanner: GLib.Scanner): [ /* returnType */ number, /* color */ Gdk.Color ]
export function rc_parse_color_full(scanner: GLib.Scanner, style?: RcStyle | null): [ /* returnType */ number, /* color */ Gdk.Color ]
export function rc_parse_priority(scanner: GLib.Scanner, priority: PathPriorityType): number
export function rc_parse_state(scanner: GLib.Scanner): [ /* returnType */ number, /* state */ StateType ]
export function rc_parse_string(rc_string: string): void
export function rc_property_parse_border(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
export function rc_property_parse_color(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
export function rc_property_parse_enum(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
export function rc_property_parse_flags(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
export function rc_property_parse_requisition(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
export function rc_reparse_all(): boolean
export function rc_reparse_all_for_settings(settings: Settings, force_load: boolean): boolean
export function rc_reset_styles(settings: Settings): void
export function rc_set_default_files(filenames: any): void
export function recent_chooser_error_quark(): GLib.Quark
export function recent_manager_error_quark(): GLib.Quark
export function render_activity(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_arrow(context: StyleContext, cr: cairo.Context, angle: number, x: number, y: number, size: number): void
export function render_background(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_background_get_clip(context: StyleContext, x: number, y: number, width: number, height: number): /* out_clip */ Gdk.Rectangle
export function render_check(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_expander(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_extension(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number, gap_side: PositionType): void
export function render_focus(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_frame(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_frame_gap(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number, gap_side: PositionType, xy0_gap: number, xy1_gap: number): void
export function render_handle(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_icon(context: StyleContext, cr: cairo.Context, pixbuf: GdkPixbuf.Pixbuf, x: number, y: number): void
export function render_icon_pixbuf(context: StyleContext, source: IconSource, size: number): GdkPixbuf.Pixbuf
export function render_icon_surface(context: StyleContext, cr: cairo.Context, surface: cairo.Surface, x: number, y: number): void
export function render_insertion_cursor(context: StyleContext, cr: cairo.Context, x: number, y: number, layout: Pango.Layout, index: number, direction: Pango.Direction): void
export function render_layout(context: StyleContext, cr: cairo.Context, x: number, y: number, layout: Pango.Layout): void
export function render_line(context: StyleContext, cr: cairo.Context, x0: number, y0: number, x1: number, y1: number): void
export function render_option(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number): void
export function render_slider(context: StyleContext, cr: cairo.Context, x: number, y: number, width: number, height: number, orientation: Orientation): void
export function rgb_to_hsv(r: number, g: number, b: number): [ /* h */ number, /* s */ number, /* v */ number ]
export function selection_add_target(widget: Widget, selection: Gdk.Atom, target: Gdk.Atom, info: number): void
export function selection_add_targets(widget: Widget, selection: Gdk.Atom, targets: TargetEntry[]): void
export function selection_clear_targets(widget: Widget, selection: Gdk.Atom): void
export function selection_convert(widget: Widget, selection: Gdk.Atom, target: Gdk.Atom, time_: number): boolean
export function selection_owner_set(widget: Widget | null, selection: Gdk.Atom, time_: number): boolean
export function selection_owner_set_for_display(display: Gdk.Display, widget: Widget | null, selection: Gdk.Atom, time_: number): boolean
export function selection_remove_all(widget: Widget): void
export function set_debug_flags(flags: number): void
export function show_uri(screen: Gdk.Screen | null, uri: string, timestamp: number): boolean
export function show_uri_on_window(parent: Window | null, uri: string, timestamp: number): boolean
export function stock_add(items: StockItem[]): void
export function stock_add_static(items: StockItem[]): void
export function stock_list_ids(): GLib.SList
export function stock_lookup(stock_id: string): [ /* returnType */ boolean, /* item */ StockItem ]
export function stock_set_translate_func(domain: string, func: TranslateFunc, notify: GLib.DestroyNotify): void
export function target_table_free(targets: TargetEntry[]): void
export function target_table_new_from_list(list: TargetList): TargetEntry[]
export function targets_include_image(targets: Gdk.Atom[], writable: boolean): boolean
export function targets_include_rich_text(targets: Gdk.Atom[], buffer: TextBuffer): boolean
export function targets_include_text(targets: Gdk.Atom[]): boolean
export function targets_include_uri(targets: Gdk.Atom[]): boolean
export function test_create_simple_window(window_title: string, dialog_text: string): Widget
export function test_find_label(widget: Widget, label_pattern: string): Widget
export function test_find_sibling(base_widget: Widget, widget_type: number): Widget
export function test_find_widget(widget: Widget, label_pattern: string, widget_type: number): Widget | null
export function test_list_all_types(): number
export function test_register_all_types(): void
export function test_slider_get_value(widget: Widget): number
export function test_slider_set_perc(widget: Widget, percentage: number): void
export function test_spin_button_click(spinner: SpinButton, button: number, upwards: boolean): boolean
export function test_text_get(widget: Widget): string
export function test_text_set(widget: Widget, string: string): void
export function test_widget_click(widget: Widget, button: number, modifiers: Gdk.ModifierType): boolean
export function test_widget_send_key(widget: Widget, keyval: number, modifiers: Gdk.ModifierType): boolean
export function test_widget_wait_for_draw(widget: Widget): void
export function tree_get_row_drag_data(selection_data: SelectionData): [ /* returnType */ boolean, /* tree_model */ TreeModel | null, /* path */ TreePath | null ]
export function tree_row_reference_deleted(proxy: GObject.Object, path: TreePath): void
export function tree_row_reference_inserted(proxy: GObject.Object, path: TreePath): void
export function tree_set_row_drag_data(selection_data: SelectionData, tree_model: TreeModel, path: TreePath): boolean
/* Function 'true' is a reserved word */
export interface AccelGroupActivate {
    (accel_group: AccelGroup, acceleratable: GObject.Object, keyval: number, modifier: Gdk.ModifierType): boolean
}
export interface AccelGroupFindFunc {
    (key: AccelKey, closure: Function): boolean
}
export interface AccelMapForeach {
    (data: object | null, accel_path: string, accel_key: number, accel_mods: Gdk.ModifierType, changed: boolean): void
}
export interface AssistantPageFunc {
    (current_page: number): number
}
export interface BuilderConnectFunc {
    (builder: Builder, object: GObject.Object, signal_name: string, handler_name: string, connect_object: GObject.Object | null, flags: GObject.ConnectFlags): void
}
export interface CalendarDetailFunc {
    (calendar: Calendar, year: number, month: number, day: number): string | null
}
export interface Callback {
    (widget: Widget): void
}
export interface CellAllocCallback {
    (renderer: CellRenderer, cell_area: Gdk.Rectangle, cell_background: Gdk.Rectangle): boolean
}
export interface CellCallback {
    (renderer: CellRenderer): boolean
}
export interface CellLayoutDataFunc {
    (cell_layout: CellLayout, cell: CellRenderer, tree_model: TreeModel, iter: TreeIter): void
}
export interface ClipboardClearFunc {
    (clipboard: Clipboard, user_data_or_owner?: object | null): void
}
export interface ClipboardGetFunc {
    (clipboard: Clipboard, selection_data: SelectionData, info: number, user_data_or_owner?: object | null): void
}
export interface ClipboardImageReceivedFunc {
    (clipboard: Clipboard, pixbuf: GdkPixbuf.Pixbuf): void
}
export interface ClipboardReceivedFunc {
    (clipboard: Clipboard, selection_data: SelectionData): void
}
export interface ClipboardRichTextReceivedFunc {
    (clipboard: Clipboard, format: Gdk.Atom, text: string | null, length: number): void
}
export interface ClipboardTargetsReceivedFunc {
    (clipboard: Clipboard, atoms: Gdk.Atom[] | null): void
}
export interface ClipboardTextReceivedFunc {
    (clipboard: Clipboard, text?: string | null): void
}
export interface ClipboardURIReceivedFunc {
    (clipboard: Clipboard, uris: string[]): void
}
export interface ColorSelectionChangePaletteFunc {
    (colors: Gdk.Color[]): void
}
export interface ColorSelectionChangePaletteWithScreenFunc {
    (screen: Gdk.Screen, colors: Gdk.Color[]): void
}
export interface EntryCompletionMatchFunc {
    (completion: EntryCompletion, key: string, iter: TreeIter): boolean
}
export interface FileFilterFunc {
    (filter_info: FileFilterInfo): boolean
}
export interface FlowBoxCreateWidgetFunc {
    (item: GObject.Object): Widget
}
export interface FlowBoxFilterFunc {
    (child: FlowBoxChild): boolean
}
export interface FlowBoxForeachFunc {
    (box: FlowBox, child: FlowBoxChild): void
}
export interface FlowBoxSortFunc {
    (child1: FlowBoxChild, child2: FlowBoxChild): number
}
export interface FontFilterFunc {
    (family: Pango.FontFamily, face: Pango.FontFace): boolean
}
export interface IconViewForeachFunc {
    (icon_view: IconView, path: TreePath): void
}
export interface KeySnoopFunc {
    (grab_widget: Widget, event: Gdk.EventKey): number
}
export interface ListBoxCreateWidgetFunc {
    (item: GObject.Object): Widget
}
export interface ListBoxFilterFunc {
    (row: ListBoxRow): boolean
}
export interface ListBoxForeachFunc {
    (box: ListBox, row: ListBoxRow): void
}
export interface ListBoxSortFunc {
    (row1: ListBoxRow, row2: ListBoxRow): number
}
export interface ListBoxUpdateHeaderFunc {
    (row: ListBoxRow, before?: ListBoxRow | null): void
}
export interface MenuDetachFunc {
    (attach_widget: Widget, menu: Menu): void
}
export interface MenuPositionFunc {
    (menu: Menu, x: number, y: number): void
}
export interface ModuleDisplayInitFunc {
    (display: Gdk.Display): void
}
export interface ModuleInitFunc {
    (argv?: string[] | null): void
}
export interface PageSetupDoneFunc {
    (page_setup: PageSetup): void
}
export interface PrintSettingsFunc {
    (key: string, value: string): void
}
export interface RcPropertyParser {
    (pspec: GObject.ParamSpec, rc_string: GLib.String, property_value: any): boolean
}
export interface RecentFilterFunc {
    (filter_info: RecentFilterInfo): boolean
}
export interface RecentSortFunc {
    (a: RecentInfo, b: RecentInfo): number
}
export interface StylePropertyParser {
    (string: string, value: any): boolean
}
export interface TextBufferDeserializeFunc {
    (register_buffer: TextBuffer, content_buffer: TextBuffer, iter: TextIter, data: Gjs.byteArray.ByteArray, create_tags: boolean): boolean
}
export interface TextBufferSerializeFunc {
    (register_buffer: TextBuffer, content_buffer: TextBuffer, start: TextIter, end: TextIter, length: number): number | null
}
export interface TextCharPredicate {
    (ch: number): boolean
}
export interface TextTagTableForeach {
    (tag: TextTag): void
}
export interface TickCallback {
    (widget: Widget, frame_clock: Gdk.FrameClock): boolean
}
export interface TranslateFunc {
    (path: string): string
}
export interface TreeCellDataFunc {
    (tree_column: TreeViewColumn, cell: CellRenderer, tree_model: TreeModel, iter: TreeIter): void
}
export interface TreeDestroyCountFunc {
    (tree_view: TreeView, path: TreePath, children: number): void
}
export interface TreeIterCompareFunc {
    (model: TreeModel, a: TreeIter, b: TreeIter): number
}
export interface TreeModelFilterModifyFunc {
    (model: TreeModel, iter: TreeIter, column: number): void
}
export interface TreeModelFilterVisibleFunc {
    (model: TreeModel, iter: TreeIter): boolean
}
export interface TreeModelForeachFunc {
    (model: TreeModel, path: TreePath, iter: TreeIter): boolean
}
export interface TreeSelectionForeachFunc {
    (model: TreeModel, path: TreePath, iter: TreeIter): void
}
export interface TreeSelectionFunc {
    (selection: TreeSelection, model: TreeModel, path: TreePath, path_currently_selected: boolean): boolean
}
export interface TreeViewColumnDropFunc {
    (tree_view: TreeView, column: TreeViewColumn, prev_column: TreeViewColumn, next_column: TreeViewColumn): boolean
}
export interface TreeViewMappingFunc {
    (tree_view: TreeView, path: TreePath): void
}
export interface TreeViewRowSeparatorFunc {
    (model: TreeModel, iter: TreeIter): boolean
}
export interface TreeViewSearchEqualFunc {
    (model: TreeModel, column: number, key: string, iter: TreeIter): boolean
}
export interface TreeViewSearchPositionFunc {
    (tree_view: TreeView, search_dialog: Widget): void
}
export class Actionable {
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Virtual methods of Gtk.Actionable */
    vfunc_get_action_name?(): string | null
    vfunc_get_action_target_value?(): GLib.Variant
    vfunc_set_action_name?(action_name?: string | null): void
    vfunc_set_action_target_value?(target_value: GLib.Variant): void
    static name: string
}
export class Activatable {
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Virtual methods of Gtk.Activatable */
    vfunc_sync_action_properties?(action?: Action | null): void
    vfunc_update?(action: Action, property_name: string): void
    static name: string
}
export class AppChooser {
    /* Properties of Gtk.AppChooser */
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    static name: string
}
export class Buildable {
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Buildable */
    vfunc_add_child?(builder: Builder, child: GObject.Object, type?: string | null): void
    vfunc_construct_child?(builder: Builder, name: string): GObject.Object
    vfunc_custom_finished?(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_end?(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    vfunc_custom_tag_start?(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    vfunc_get_internal_child?(builder: Builder, childname: string): GObject.Object
    vfunc_get_name?(): string
    vfunc_parser_finished?(builder: Builder): void
    vfunc_set_buildable_property?(builder: Builder, name: string, value: any): void
    vfunc_set_name?(name: string): void
    static name: string
}
export class CellAccessibleParent {
    /* Methods of Gtk.CellAccessibleParent */
    activate(cell: CellAccessible): void
    edit(cell: CellAccessible): void
    expand_collapse(cell: CellAccessible): void
    get_cell_area(cell: CellAccessible, cell_rect: Gdk.Rectangle): void
    get_cell_extents(cell: CellAccessible, x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): void
    get_child_index(cell: CellAccessible): number
    get_renderer_state(cell: CellAccessible): CellRendererState
    grab_focus(cell: CellAccessible): boolean
    update_relationset(cell: CellAccessible, relationset: Atk.RelationSet): void
    /* Virtual methods of Gtk.CellAccessibleParent */
    vfunc_activate?(cell: CellAccessible): void
    vfunc_edit?(cell: CellAccessible): void
    vfunc_expand_collapse?(cell: CellAccessible): void
    vfunc_get_cell_area?(cell: CellAccessible, cell_rect: Gdk.Rectangle): void
    vfunc_get_cell_extents?(cell: CellAccessible, x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): void
    vfunc_get_child_index?(cell: CellAccessible): number
    vfunc_get_renderer_state?(cell: CellAccessible): CellRendererState
    vfunc_grab_focus?(cell: CellAccessible): boolean
    vfunc_update_relationset?(cell: CellAccessible, relationset: Atk.RelationSet): void
    static name: string
}
export class CellEditable {
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Virtual methods of Gtk.CellEditable */
    vfunc_editing_done?(): void
    vfunc_remove_widget?(): void
    vfunc_start_editing?(event?: Gdk.Event | null): void
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: CellEditable) => void))
    connect(sigName: "remove-widget", callback: ((obj: CellEditable) => void))
    static name: string
}
export class CellLayout {
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.CellLayout */
    vfunc_add_attribute?(cell: CellRenderer, attribute: string, column: number): void
    vfunc_clear?(): void
    vfunc_clear_attributes?(cell: CellRenderer): void
    vfunc_get_area?(): CellArea | null
    vfunc_get_cells?(): CellRenderer[]
    vfunc_pack_end?(cell: CellRenderer, expand: boolean): void
    vfunc_pack_start?(cell: CellRenderer, expand: boolean): void
    vfunc_reorder?(cell: CellRenderer, position: number): void
    vfunc_set_cell_data_func?(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    static name: string
}
export class ColorChooser {
    /* Properties of Gtk.ColorChooser */
    rgba:Gdk.RGBA
    use_alpha:boolean
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Virtual methods of Gtk.ColorChooser */
    vfunc_add_palette?(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    vfunc_color_activated?(color: Gdk.RGBA): void
    vfunc_get_rgba?(): /* color */ Gdk.RGBA
    vfunc_set_rgba?(color: Gdk.RGBA): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: ((obj: ColorChooser, color: Gdk.RGBA) => void))
    static name: string
}
export class Editable {
    /* Methods of Gtk.Editable */
    copy_clipboard(): void
    cut_clipboard(): void
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    get_chars(start_pos: number, end_pos: number): string
    get_editable(): boolean
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    insert_text(new_text: string, new_text_length: number, position: number): void
    paste_clipboard(): void
    select_region(start_pos: number, end_pos: number): void
    set_editable(is_editable: boolean): void
    set_position(position: number): void
    /* Virtual methods of Gtk.Editable */
    vfunc_changed?(): void
    vfunc_delete_text?(start_pos: number, end_pos: number): void
    vfunc_do_delete_text?(start_pos: number, end_pos: number): void
    vfunc_do_insert_text?(new_text: string, new_text_length: number, position: number): void
    vfunc_get_chars?(start_pos: number, end_pos: number): string
    vfunc_get_position?(): number
    vfunc_get_selection_bounds?(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    vfunc_insert_text?(new_text: string, new_text_length: number, position: number): void
    vfunc_set_position?(position: number): void
    vfunc_set_selection_bounds?(start_pos: number, end_pos: number): void
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: ((obj: Editable) => void))
    connect(sigName: "delete-text", callback: ((obj: Editable, start_pos: number, end_pos: number) => void))
    connect(sigName: "insert-text", callback: ((obj: Editable, new_text: string, new_text_length: number, position: number) => void))
    static name: string
}
export class FileChooser {
    /* Properties of Gtk.FileChooser */
    action:FileChooserAction
    create_folders:boolean
    do_overwrite_confirmation:boolean
    extra_widget:Widget
    filter:FileFilter
    local_only:boolean
    preview_widget:Widget
    preview_widget_active:boolean
    select_multiple:boolean
    show_hidden:boolean
    use_preview_label:boolean
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options: string, option_labels: string): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: string): boolean
    add_shortcut_folder_uri(uri: string): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): string
    get_current_folder_file(): Gio.File
    get_current_folder_uri(): string | null
    get_current_name(): string
    get_do_overwrite_confirmation(): boolean
    get_extra_widget(): Widget | null
    get_file(): Gio.File
    get_filename(): string
    get_filenames(): GLib.SList
    get_files(): GLib.SList
    get_filter(): FileFilter | null
    get_local_only(): boolean
    get_preview_file(): Gio.File | null
    get_preview_filename(): string
    get_preview_uri(): string | null
    get_preview_widget(): Widget | null
    get_preview_widget_active(): boolean
    get_select_multiple(): boolean
    get_show_hidden(): boolean
    get_uri(): string | null
    get_uris(): GLib.SList
    get_use_preview_label(): boolean
    list_filters(): GLib.SList
    list_shortcut_folder_uris(): GLib.SList | null
    list_shortcut_folders(): GLib.SList | null
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: string): boolean
    remove_shortcut_folder_uri(uri: string): boolean
    select_all(): void
    select_file(file: Gio.File): boolean
    select_filename(filename: string): boolean
    select_uri(uri: string): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(filename: string): boolean
    set_current_folder_file(file: Gio.File): boolean
    set_current_folder_uri(uri: string): boolean
    set_current_name(name: string): void
    set_do_overwrite_confirmation(do_overwrite_confirmation: boolean): void
    set_extra_widget(extra_widget: Widget): void
    set_file(file: Gio.File): boolean
    set_filename(filename: string): boolean
    set_filter(filter: FileFilter): void
    set_local_only(local_only: boolean): void
    set_preview_widget(preview_widget: Widget): void
    set_preview_widget_active(active: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_hidden(show_hidden: boolean): void
    set_uri(uri: string): boolean
    set_use_preview_label(use_label: boolean): void
    unselect_all(): void
    unselect_file(file: Gio.File): void
    unselect_filename(filename: string): void
    unselect_uri(uri: string): void
    /* Signals of Gtk.FileChooser */
    connect(sigName: "confirm-overwrite", callback: ((obj: FileChooser) => FileChooserConfirmation))
    connect(sigName: "current-folder-changed", callback: ((obj: FileChooser) => void))
    connect(sigName: "file-activated", callback: ((obj: FileChooser) => void))
    connect(sigName: "selection-changed", callback: ((obj: FileChooser) => void))
    connect(sigName: "update-preview", callback: ((obj: FileChooser) => void))
    static name: string
}
export class FontChooser {
    /* Properties of Gtk.FontChooser */
    font:string
    font_desc:Pango.FontDescription
    preview_text:string
    show_preview_entry:boolean
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_map(): Pango.FontMap | null
    get_font_size(): number
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_font_map(fontmap?: Pango.FontMap | null): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.FontChooser */
    vfunc_font_activated?(fontname: string): void
    vfunc_get_font_face?(): Pango.FontFace | null
    vfunc_get_font_family?(): Pango.FontFamily | null
    vfunc_get_font_map?(): Pango.FontMap | null
    vfunc_get_font_size?(): number
    vfunc_set_filter_func?(filter: FontFilterFunc | null, destroy: GLib.DestroyNotify): void
    vfunc_set_font_map?(fontmap?: Pango.FontMap | null): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: ((obj: FontChooser, fontname: string) => void))
    static name: string
}
export class Orientable {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    static name: string
}
export class PrintOperationPreview {
    /* Methods of Gtk.PrintOperationPreview */
    end_preview(): void
    is_selected(page_nr: number): boolean
    render_page(page_nr: number): void
    /* Virtual methods of Gtk.PrintOperationPreview */
    vfunc_end_preview?(): void
    vfunc_got_page_size?(context: PrintContext, page_setup: PageSetup): void
    vfunc_is_selected?(page_nr: number): boolean
    vfunc_ready?(context: PrintContext): void
    vfunc_render_page?(page_nr: number): void
    /* Signals of Gtk.PrintOperationPreview */
    connect(sigName: "got-page-size", callback: ((obj: PrintOperationPreview, context: PrintContext, page_setup: PageSetup) => void))
    connect(sigName: "ready", callback: ((obj: PrintOperationPreview, context: PrintContext) => void))
    static name: string
}
export class RecentChooser {
    /* Properties of Gtk.RecentChooser */
    filter:RecentFilter
    limit:number
    local_only:boolean
    select_multiple:boolean
    show_icons:boolean
    show_not_found:boolean
    show_private:boolean
    show_tips:boolean
    sort_type:RecentSortType
    /* Methods of Gtk.RecentChooser */
    add_filter(filter: RecentFilter): void
    get_current_item(): RecentInfo
    get_current_uri(): string
    get_filter(): RecentFilter
    get_items(): RecentInfo[]
    get_limit(): number
    get_local_only(): boolean
    get_select_multiple(): boolean
    get_show_icons(): boolean
    get_show_not_found(): boolean
    get_show_private(): boolean
    get_show_tips(): boolean
    get_sort_type(): RecentSortType
    get_uris(): string[]
    list_filters(): GLib.SList
    remove_filter(filter: RecentFilter): void
    select_all(): void
    select_uri(uri: string): boolean
    set_current_uri(uri: string): boolean
    set_filter(filter?: RecentFilter | null): void
    set_limit(limit: number): void
    set_local_only(local_only: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_icons(show_icons: boolean): void
    set_show_not_found(show_not_found: boolean): void
    set_show_private(show_private: boolean): void
    set_show_tips(show_tips: boolean): void
    set_sort_func(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    set_sort_type(sort_type: RecentSortType): void
    unselect_all(): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.RecentChooser */
    vfunc_add_filter?(filter: RecentFilter): void
    vfunc_get_current_uri?(): string
    vfunc_get_items?(): RecentInfo[]
    vfunc_item_activated?(): void
    vfunc_list_filters?(): GLib.SList
    vfunc_remove_filter?(filter: RecentFilter): void
    vfunc_select_all?(): void
    vfunc_select_uri?(uri: string): boolean
    vfunc_selection_changed?(): void
    vfunc_set_current_uri?(uri: string): boolean
    vfunc_set_sort_func?(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    vfunc_unselect_all?(): void
    vfunc_unselect_uri?(uri: string): void
    /* Signals of Gtk.RecentChooser */
    connect(sigName: "item-activated", callback: ((obj: RecentChooser) => void))
    connect(sigName: "selection-changed", callback: ((obj: RecentChooser) => void))
    static name: string
}
export class Scrollable {
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Scrollable */
    vfunc_get_border?(): [ /* returnType */ boolean, /* border */ Border ]
    static name: string
}
export class StyleProvider {
    /* Methods of Gtk.StyleProvider */
    get_icon_factory(path: WidgetPath): IconFactory | null
    get_style(path: WidgetPath): StyleProperties | null
    get_style_property(path: WidgetPath, state: StateFlags, pspec: GObject.ParamSpec): [ /* returnType */ boolean, /* value */ any ]
    /* Virtual methods of Gtk.StyleProvider */
    vfunc_get_icon_factory?(path: WidgetPath): IconFactory | null
    vfunc_get_style?(path: WidgetPath): StyleProperties | null
    vfunc_get_style_property?(path: WidgetPath, state: StateFlags, pspec: GObject.ParamSpec): [ /* returnType */ boolean, /* value */ any ]
    static name: string
}
export class ToolShell {
    /* Methods of Gtk.ToolShell */
    get_ellipsize_mode(): Pango.EllipsizeMode
    get_icon_size(): number
    get_orientation(): Orientation
    get_relief_style(): ReliefStyle
    get_style(): ToolbarStyle
    get_text_alignment(): number
    get_text_orientation(): Orientation
    get_text_size_group(): SizeGroup
    rebuild_menu(): void
    /* Virtual methods of Gtk.ToolShell */
    vfunc_get_ellipsize_mode?(): Pango.EllipsizeMode
    vfunc_get_icon_size?(): IconSize
    vfunc_get_orientation?(): Orientation
    vfunc_get_relief_style?(): ReliefStyle
    vfunc_get_style?(): ToolbarStyle
    vfunc_get_text_alignment?(): number
    vfunc_get_text_orientation?(): Orientation
    vfunc_get_text_size_group?(): SizeGroup
    vfunc_rebuild_menu?(): void
    static name: string
}
export class TreeDragDest {
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, selection_data: SelectionData): boolean
    row_drop_possible(dest_path: TreePath, selection_data: SelectionData): boolean
    /* Virtual methods of Gtk.TreeDragDest */
    vfunc_drag_data_received?(dest: TreePath, selection_data: SelectionData): boolean
    vfunc_row_drop_possible?(dest_path: TreePath, selection_data: SelectionData): boolean
    static name: string
}
export class TreeDragSource {
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath, selection_data: SelectionData): boolean
    row_draggable(path: TreePath): boolean
    /* Virtual methods of Gtk.TreeDragSource */
    vfunc_drag_data_delete?(path: TreePath): boolean
    vfunc_drag_data_get?(path: TreePath, selection_data: SelectionData): boolean
    vfunc_row_draggable?(path: TreePath): boolean
    static name: string
}
export class TreeModel {
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): number
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    sort_new_with_model(): TreeModel
    unref_node(iter: TreeIter): void
    /* Virtual methods of Gtk.TreeModel */
    vfunc_get_column_type?(index_: number): number
    vfunc_get_flags?(): TreeModelFlags
    vfunc_get_iter?(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_get_n_columns?(): number
    vfunc_get_path?(iter: TreeIter): TreePath
    vfunc_get_value?(iter: TreeIter, column: number): /* value */ any
    vfunc_iter_children?(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_has_child?(iter: TreeIter): boolean
    vfunc_iter_n_children?(iter?: TreeIter | null): number
    vfunc_iter_next?(iter: TreeIter): boolean
    vfunc_iter_nth_child?(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_parent?(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    vfunc_iter_previous?(iter: TreeIter): boolean
    vfunc_ref_node?(iter: TreeIter): void
    vfunc_row_changed?(path: TreePath, iter: TreeIter): void
    vfunc_row_deleted?(path: TreePath): void
    vfunc_row_has_child_toggled?(path: TreePath, iter: TreeIter): void
    vfunc_row_inserted?(path: TreePath, iter: TreeIter): void
    vfunc_unref_node?(iter: TreeIter): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: ((obj: TreeModel, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-deleted", callback: ((obj: TreeModel, path: TreePath) => void))
    connect(sigName: "row-has-child-toggled", callback: ((obj: TreeModel, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-inserted", callback: ((obj: TreeModel, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "rows-reordered", callback: ((obj: TreeModel, path: TreePath, iter: TreeIter, new_order?: object | null) => void))
    static name: string
}
export class TreeSortable {
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    sort_column_changed(): void
    /* Virtual methods of Gtk.TreeSortable */
    vfunc_get_sort_column_id?(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    vfunc_has_default_sort_func?(): boolean
    vfunc_set_default_sort_func?(sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    vfunc_set_sort_column_id?(sort_column_id: number, order: SortType): void
    vfunc_set_sort_func?(sort_column_id: number, sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    vfunc_sort_column_changed?(): void
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: ((obj: TreeSortable) => void))
    static name: string
}
export interface AboutDialog_ConstructProps extends Dialog_ConstructProps {
    artists?:string[]
    authors?:string[]
    comments?:string
    copyright?:string
    documenters?:string[]
    license?:string
    license_type?:License
    logo?:GdkPixbuf.Pixbuf
    logo_icon_name?:string
    program_name?:string
    translator_credits?:string
    version?:string
    website?:string
    website_label?:string
    wrap_license?:boolean
}
export class AboutDialog extends Dialog {
    /* Properties of Gtk.AboutDialog */
    artists:string[]
    authors:string[]
    comments:string
    copyright:string
    documenters:string[]
    license:string
    license_type:License
    logo:GdkPixbuf.Pixbuf
    logo_icon_name:string
    program_name:string
    translator_credits:string
    version:string
    website:string
    website_label:string
    wrap_license:boolean
    /* Fields of Gtk.AboutDialog */
    parent_instance:Dialog
    /* Methods of Gtk.AboutDialog */
    add_credit_section(section_name: string, people: string[]): void
    get_artists(): string[]
    get_authors(): string[]
    get_comments(): string
    get_copyright(): string
    get_documenters(): string[]
    get_license(): string
    get_license_type(): License
    get_logo(): GdkPixbuf.Pixbuf
    get_logo_icon_name(): string
    get_program_name(): string
    get_translator_credits(): string
    get_version(): string
    get_website(): string
    get_website_label(): string
    get_wrap_license(): boolean
    set_artists(artists: string[]): void
    set_authors(authors: string[]): void
    set_comments(comments?: string | null): void
    set_copyright(copyright?: string | null): void
    set_documenters(documenters: string[]): void
    set_license(license?: string | null): void
    set_license_type(license_type: License): void
    set_logo(logo?: GdkPixbuf.Pixbuf | null): void
    set_logo_icon_name(icon_name?: string | null): void
    set_program_name(name: string): void
    set_translator_credits(translator_credits?: string | null): void
    set_version(version?: string | null): void
    set_website(website?: string | null): void
    set_website_label(website_label: string): void
    set_wrap_license(wrap_license: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.AboutDialog */
    vfunc_activate_link?(uri: string): boolean
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AboutDialog */
    connect(sigName: "activate-link", callback: ((obj: AboutDialog, uri: string) => boolean))
    connect(sigName: "notify::artists", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::authors", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::comments", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::copyright", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::documenters", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::license", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::license-type", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::logo", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::logo-icon-name", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::program-name", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translator-credits", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::version", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::website", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::website-label", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-license", callback: ((obj: AboutDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AboutDialog_ConstructProps): AboutDialog
    constructor (config?: AboutDialog_ConstructProps)
}
export interface AccelGroup_ConstructProps extends GObject.Object_ConstructProps {
}
export class AccelGroup extends GObject.Object {
    /* Properties of Gtk.AccelGroup */
    readonly is_locked:boolean
    readonly modifier_mask:Gdk.ModifierType
    /* Fields of Gtk.AccelGroup */
    parent: any
    priv:AccelGroupPrivate
    /* Methods of Gtk.AccelGroup */
    activate(accel_quark: GLib.Quark, acceleratable: GObject.Object, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    connect(accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags, closure: Function): void
    connect_by_path(accel_path: string, closure: Function): void
    disconnect(closure?: Function): boolean
    disconnect_key(accel_key: number, accel_mods: Gdk.ModifierType): boolean
    find(find_func: AccelGroupFindFunc): AccelKey
    get_is_locked(): boolean
    get_modifier_mask(): Gdk.ModifierType
    lock(): void
    query(accel_key: number, accel_mods: Gdk.ModifierType): AccelGroupEntry[] | null
    unlock(): void
    /* Virtual methods of Gtk.AccelGroup */
    vfunc_accel_changed?(keyval: number, modifier: Gdk.ModifierType, accel_closure: Function): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AccelGroup */
    connect(sigName: "accel-activate", callback: ((obj: AccelGroup, acceleratable: GObject.Object, keyval: number, modifier: Gdk.ModifierType) => boolean))
    connect(sigName: "accel-changed", callback: ((obj: AccelGroup, keyval: number, modifier: Gdk.ModifierType, accel_closure: Function) => void))
    connect(sigName: "notify::is-locked", callback: ((obj: AccelGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modifier-mask", callback: ((obj: AccelGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AccelGroup_ConstructProps): AccelGroup
    constructor (config?: AccelGroup_ConstructProps)
    static from_accel_closure(closure: Function): AccelGroup | null
}
export interface AccelLabel_ConstructProps extends Label_ConstructProps {
    accel_closure?:Function
    accel_widget?:Widget
}
export class AccelLabel extends Misc {
    /* Properties of Gtk.AccelLabel */
    accel_closure:Function
    accel_widget:Widget
    /* Properties of Gtk.Label */
    angle:number
    attributes:Pango.AttrList
    readonly cursor_position:number
    ellipsize:Pango.EllipsizeMode
    justify:Justification
    label:string
    lines:number
    max_width_chars:number
    readonly mnemonic_keyval:number
    mnemonic_widget:Widget
    pattern:string
    selectable:boolean
    readonly selection_bound:number
    single_line_mode:boolean
    track_visited_links:boolean
    use_markup:boolean
    use_underline:boolean
    width_chars:number
    wrap:boolean
    wrap_mode:Pango.WrapMode
    xalign:number
    yalign:number
    /* Fields of Gtk.AccelLabel */
    priv:AccelLabelPrivate
    /* Fields of Gtk.Label */
    misc:Misc
    /* Methods of Gtk.AccelLabel */
    get_accel(): [ /* accelerator_key */ number, /* accelerator_mods */ Gdk.ModifierType ]
    get_accel_widget(): Widget | null
    get_accel_width(): number
    refetch(): boolean
    set_accel(accelerator_key: number, accelerator_mods: Gdk.ModifierType): void
    set_accel_closure(accel_closure?: Function): void
    set_accel_widget(accel_widget?: Widget | null): void
    /* Methods of Gtk.Label */
    get_angle(): number
    get_attributes(): Pango.AttrList | null
    get_current_uri(): string
    get_ellipsize(): Pango.EllipsizeMode
    get_justify(): Justification
    get_label(): string
    get_layout(): Pango.Layout
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_line_wrap(): boolean
    get_line_wrap_mode(): Pango.WrapMode
    get_lines(): number
    get_max_width_chars(): number
    get_mnemonic_keyval(): number
    get_mnemonic_widget(): Widget | null
    get_selectable(): boolean
    get_selection_bounds(): [ /* returnType */ boolean, /* start */ number, /* end */ number ]
    get_single_line_mode(): boolean
    get_text(): string
    get_track_visited_links(): boolean
    get_use_markup(): boolean
    get_use_underline(): boolean
    get_width_chars(): number
    get_xalign(): number
    get_yalign(): number
    select_region(start_offset: number, end_offset: number): void
    set_angle(angle: number): void
    set_attributes(attrs?: Pango.AttrList | null): void
    set_ellipsize(mode: Pango.EllipsizeMode): void
    set_justify(jtype: Justification): void
    set_label(str: string): void
    set_line_wrap(wrap: boolean): void
    set_line_wrap_mode(wrap_mode: Pango.WrapMode): void
    set_lines(lines: number): void
    set_markup(str: string): void
    set_markup_with_mnemonic(str: string): void
    set_max_width_chars(n_chars: number): void
    set_mnemonic_widget(widget?: Widget | null): void
    set_pattern(pattern: string): void
    set_selectable(setting: boolean): void
    set_single_line_mode(single_line_mode: boolean): void
    set_text(str: string): void
    set_text_with_mnemonic(str: string): void
    set_track_visited_links(track_links: boolean): void
    set_use_markup(setting: boolean): void
    set_use_underline(setting: boolean): void
    set_width_chars(n_chars: number): void
    set_xalign(xalign: number): void
    set_yalign(yalign: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Label */
    vfunc_activate_link?(uri: string): boolean
    vfunc_copy_clipboard?(): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_populate_popup?(menu: Menu): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Label */
    connect(sigName: "activate-current-link", callback: ((obj: AccelLabel) => void))
    connect(sigName: "activate-link", callback: ((obj: AccelLabel, uri: string) => boolean))
    connect(sigName: "copy-clipboard", callback: ((obj: AccelLabel) => void))
    connect(sigName: "move-cursor", callback: ((obj: AccelLabel, step: MovementStep, count: number, extend_selection: boolean) => void))
    connect(sigName: "populate-popup", callback: ((obj: AccelLabel, menu: Menu) => void))
    connect(sigName: "notify::accel-closure", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accel-widget", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::angle", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursor-position", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ellipsize", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::justify", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lines", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-width-chars", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonic-keyval", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonic-widget", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pattern", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selectable", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-bound", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::single-line-mode", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::track-visited-links", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-markup", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-chars", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: AccelLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AccelLabel_ConstructProps): AccelLabel
    constructor (config?: AccelLabel_ConstructProps)
}
export interface AccelMap_ConstructProps extends GObject.Object_ConstructProps {
}
export class AccelMap extends GObject.Object {
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AccelMap */
    connect(sigName: "changed", callback: ((obj: AccelMap, accel_path: string, accel_key: number, accel_mods: Gdk.ModifierType) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AccelMap_ConstructProps): AccelMap
    constructor (config?: AccelMap_ConstructProps)
    static add_entry(accel_path: string, accel_key: number, accel_mods: Gdk.ModifierType): void
    static add_filter(filter_pattern: string): void
    static change_entry(accel_path: string, accel_key: number, accel_mods: Gdk.ModifierType, replace: boolean): boolean
    static foreach(data: object | null, foreach_func: AccelMapForeach): void
    static foreach_unfiltered(data: object | null, foreach_func: AccelMapForeach): void
    static get(): AccelMap
    static load(file_name: string): void
    static load_fd(fd: number): void
    static load_scanner(scanner: GLib.Scanner): void
    static lock_path(accel_path: string): void
    static lookup_entry(accel_path: string): [ /* returnType */ boolean, /* key */ AccelKey | null ]
    static save(file_name: string): void
    static save_fd(fd: number): void
    static unlock_path(accel_path: string): void
}
export interface Accessible_ConstructProps extends Atk.Object_ConstructProps {
    widget?:Widget
}
export class Accessible extends Atk.Object {
    /* Properties of Gtk.Accessible */
    widget:Widget
    /* Fields of Gtk.Accessible */
    parent: any
    /* Methods of Gtk.Accessible */
    connect_widget_destroyed(): void
    get_widget(): Widget | null
    set_widget(widget?: Widget | null): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::widget", callback: ((obj: Accessible, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Accessible_ConstructProps): Accessible
    constructor (config?: Accessible_ConstructProps)
}
export interface Action_ConstructProps extends GObject.Object_ConstructProps {
    action_group?:ActionGroup
    always_show_image?:boolean
    gicon?:Gio.Icon
    hide_if_empty?:boolean
    icon_name?:string
    is_important?:boolean
    label?:string
    name?:string
    sensitive?:boolean
    short_label?:string
    stock_id?:string
    tooltip?:string
    visible?:boolean
    visible_horizontal?:boolean
    visible_overflown?:boolean
    visible_vertical?:boolean
}
export class Action extends GObject.Object {
    /* Properties of Gtk.Action */
    action_group:ActionGroup
    always_show_image:boolean
    gicon:Gio.Icon
    hide_if_empty:boolean
    icon_name:string
    is_important:boolean
    label:string
    sensitive:boolean
    short_label:string
    stock_id:string
    tooltip:string
    visible:boolean
    visible_horizontal:boolean
    visible_overflown:boolean
    visible_vertical:boolean
    /* Fields of Gtk.Action */
    object:GObject.Object
    /* Methods of Gtk.Action */
    activate(): void
    block_activate(): void
    connect_accelerator(): void
    create_icon(icon_size: number): Widget
    create_menu(): Widget
    create_menu_item(): Widget
    create_tool_item(): Widget
    disconnect_accelerator(): void
    get_accel_closure(): Function
    get_accel_path(): string
    get_always_show_image(): boolean
    get_gicon(): Gio.Icon
    get_icon_name(): string
    get_is_important(): boolean
    get_label(): string
    get_name(): string
    get_proxies(): GLib.SList
    get_sensitive(): boolean
    get_short_label(): string
    get_stock_id(): string
    get_tooltip(): string
    get_visible(): boolean
    get_visible_horizontal(): boolean
    get_visible_vertical(): boolean
    is_sensitive(): boolean
    is_visible(): boolean
    set_accel_group(accel_group?: AccelGroup | null): void
    set_accel_path(accel_path: string): void
    set_always_show_image(always_show: boolean): void
    set_gicon(icon: Gio.Icon): void
    set_icon_name(icon_name: string): void
    set_is_important(is_important: boolean): void
    set_label(label: string): void
    set_sensitive(sensitive: boolean): void
    set_short_label(short_label: string): void
    set_stock_id(stock_id: string): void
    set_tooltip(tooltip: string): void
    set_visible(visible: boolean): void
    set_visible_horizontal(visible_horizontal: boolean): void
    set_visible_vertical(visible_vertical: boolean): void
    unblock_activate(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Action */
    vfunc_activate?(): void
    vfunc_connect_proxy?(proxy: Widget): void
    vfunc_create_menu?(): Widget
    vfunc_create_menu_item?(): Widget
    vfunc_create_tool_item?(): Widget
    vfunc_disconnect_proxy?(proxy: Widget): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Action */
    connect(sigName: "activate", callback: ((obj: Action) => void))
    connect(sigName: "notify::action-group", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::always-show-image", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gicon", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hide-if-empty", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-important", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::short-label", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-id", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-horizontal", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-overflown", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-vertical", callback: ((obj: Action, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Action_ConstructProps): Action
    constructor (config?: Action_ConstructProps)
}
export interface ActionBar_ConstructProps extends Bin_ConstructProps {
}
export class ActionBar extends Bin {
    /* Fields of Gtk.ActionBar */
    /* Methods of Gtk.ActionBar */
    get_center_widget(): Widget | null
    pack_end(child: Widget): void
    pack_start(child: Widget): void
    set_center_widget(center_widget?: Widget | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ActionBar_ConstructProps): ActionBar
    constructor (config?: ActionBar_ConstructProps)
}
export interface ActionGroup_ConstructProps extends GObject.Object_ConstructProps {
    accel_group?:AccelGroup
    name?:string
    sensitive?:boolean
    visible?:boolean
}
export class ActionGroup extends GObject.Object {
    /* Properties of Gtk.ActionGroup */
    accel_group:AccelGroup
    sensitive:boolean
    visible:boolean
    /* Fields of Gtk.ActionGroup */
    parent: any
    /* Methods of Gtk.ActionGroup */
    add_action(action: Action): void
    add_action_with_accel(action: Action, accelerator?: string | null): void
    get_accel_group(): AccelGroup
    get_action(action_name: string): Action
    get_name(): string
    get_sensitive(): boolean
    get_visible(): boolean
    list_actions(): Action[]
    remove_action(action: Action): void
    set_accel_group(accel_group?: AccelGroup | null): void
    set_sensitive(sensitive: boolean): void
    set_translate_func(func: TranslateFunc, notify: GLib.DestroyNotify): void
    set_translation_domain(domain?: string | null): void
    set_visible(visible: boolean): void
    translate_string(string: string): string
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ActionGroup */
    vfunc_get_action?(action_name: string): Action
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ActionGroup */
    connect(sigName: "connect-proxy", callback: ((obj: ActionGroup, action: Action, proxy: Widget) => void))
    connect(sigName: "disconnect-proxy", callback: ((obj: ActionGroup, action: Action, proxy: Widget) => void))
    connect(sigName: "post-activate", callback: ((obj: ActionGroup, action: Action) => void))
    connect(sigName: "pre-activate", callback: ((obj: ActionGroup, action: Action) => void))
    connect(sigName: "notify::accel-group", callback: ((obj: ActionGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: ActionGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: ActionGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ActionGroup_ConstructProps): ActionGroup
    constructor (config?: ActionGroup_ConstructProps)
}
export interface Adjustment_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    lower?:number
    page_increment?:number
    page_size?:number
    step_increment?:number
    upper?:number
    value?:number
}
export class Adjustment extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Adjustment */
    lower:number
    page_increment:number
    page_size:number
    step_increment:number
    upper:number
    value:number
    /* Fields of Gtk.Adjustment */
    parent_instance:GObject.InitiallyUnowned
    priv:AdjustmentPrivate
    /* Methods of Gtk.Adjustment */
    changed(): void
    clamp_page(lower: number, upper: number): void
    configure(value: number, lower: number, upper: number, step_increment: number, page_increment: number, page_size: number): void
    get_lower(): number
    get_minimum_increment(): number
    get_page_increment(): number
    get_page_size(): number
    get_step_increment(): number
    get_upper(): number
    get_value(): number
    set_lower(lower: number): void
    set_page_increment(page_increment: number): void
    set_page_size(page_size: number): void
    set_step_increment(step_increment: number): void
    set_upper(upper: number): void
    set_value(value: number): void
    value_changed(): void
    /* Virtual methods of Gtk.Adjustment */
    vfunc_changed?(): void
    vfunc_value_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Adjustment */
    connect(sigName: "changed", callback: ((obj: Adjustment) => void))
    connect(sigName: "value-changed", callback: ((obj: Adjustment) => void))
    connect(sigName: "notify::lower", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-increment", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-size", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::step-increment", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::upper", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: Adjustment, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Adjustment_ConstructProps): Adjustment
    constructor (config?: Adjustment_ConstructProps)
}
export interface Alignment_ConstructProps extends Bin_ConstructProps {
    bottom_padding?:number
    left_padding?:number
    right_padding?:number
    top_padding?:number
    xalign?:number
    xscale?:number
    yalign?:number
    yscale?:number
}
export class Alignment extends Bin {
    /* Properties of Gtk.Alignment */
    bottom_padding:number
    left_padding:number
    right_padding:number
    top_padding:number
    xalign:number
    xscale:number
    yalign:number
    yscale:number
    /* Fields of Gtk.Alignment */
    bin:Bin
    /* Methods of Gtk.Alignment */
    get_padding(): [ /* padding_top */ number | null, /* padding_bottom */ number | null, /* padding_left */ number | null, /* padding_right */ number | null ]
    set(xalign: number, yalign: number, xscale: number, yscale: number): void
    set_padding(padding_top: number, padding_bottom: number, padding_left: number, padding_right: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::bottom-padding", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::left-padding", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-padding", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::top-padding", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xscale", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yscale", callback: ((obj: Alignment, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Alignment_ConstructProps): Alignment
    constructor (config?: Alignment_ConstructProps)
}
export interface AppChooserButton_ConstructProps extends ComboBox_ConstructProps {
    heading?:string
    show_default_item?:boolean
    show_dialog_item?:boolean
}
export class AppChooserButton extends ComboBox {
    /* Properties of Gtk.AppChooserButton */
    heading:string
    show_default_item:boolean
    show_dialog_item:boolean
    /* Properties of Gtk.AppChooser */
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Fields of Gtk.AppChooserButton */
    parent: any
    /* Methods of Gtk.AppChooserButton */
    append_custom_item(name: string, label: string, icon: Gio.Icon): void
    append_separator(): void
    get_heading(): string | null
    get_show_default_item(): boolean
    get_show_dialog_item(): boolean
    set_active_custom_item(name: string): void
    set_heading(heading: string): void
    set_show_default_item(setting: boolean): void
    set_show_dialog_item(setting: boolean): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.AppChooserButton */
    vfunc_custom_item_activated?(item_name: string): void
    /* Virtual methods of Gtk.ComboBox */
    vfunc_changed?(): void
    vfunc_format_entry_text?(path: string): string
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AppChooserButton */
    connect(sigName: "custom-item-activated", callback: ((obj: AppChooserButton, item_name: string) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: AppChooserButton) => void))
    connect(sigName: "remove-widget", callback: ((obj: AppChooserButton) => void))
    connect(sigName: "notify::heading", callback: ((obj: AppChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-default-item", callback: ((obj: AppChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-dialog-item", callback: ((obj: AppChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: AppChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AppChooserButton_ConstructProps): AppChooserButton
    constructor (config?: AppChooserButton_ConstructProps)
}
export interface AppChooserDialog_ConstructProps extends Dialog_ConstructProps {
    gfile?:Gio.File
    heading?:string
}
export class AppChooserDialog extends Dialog {
    /* Properties of Gtk.AppChooserDialog */
    heading:string
    /* Properties of Gtk.AppChooser */
    /* Fields of Gtk.AppChooserDialog */
    parent: any
    /* Methods of Gtk.AppChooserDialog */
    get_heading(): string | null
    get_widget(): Widget
    set_heading(heading: string): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::heading", callback: ((obj: AppChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AppChooserDialog_ConstructProps): AppChooserDialog
    constructor (config?: AppChooserDialog_ConstructProps)
    static new_for_content_type(parent: Window | null, flags: DialogFlags, content_type: string): AppChooserDialog
}
export interface AppChooserWidget_ConstructProps extends Box_ConstructProps {
    default_text?:string
    show_all?:boolean
    show_default?:boolean
    show_fallback?:boolean
    show_other?:boolean
    show_recommended?:boolean
}
export class AppChooserWidget extends GObject.InitiallyUnowned {
    /* Properties of Gtk.AppChooserWidget */
    default_text:string
    show_all:boolean
    show_default:boolean
    show_fallback:boolean
    show_other:boolean
    show_recommended:boolean
    /* Properties of Gtk.Box */
    baseline_position:BaselinePosition
    homogeneous:boolean
    spacing:number
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.AppChooser */
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.AppChooserWidget */
    /* Fields of Gtk.Box */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.AppChooserWidget */
    get_default_text(): string
    get_show_all(): boolean
    get_show_default(): boolean
    get_show_fallback(): boolean
    get_show_other(): boolean
    get_show_recommended(): boolean
    set_default_text(text: string): void
    set_show_all(setting: boolean): void
    set_show_default(setting: boolean): void
    set_show_fallback(setting: boolean): void
    set_show_other(setting: boolean): void
    set_show_recommended(setting: boolean): void
    /* Methods of Gtk.Box */
    get_baseline_position(): BaselinePosition
    get_center_widget(): Widget | null
    get_homogeneous(): boolean
    get_spacing(): number
    pack_end(child: Widget, expand: boolean, fill: boolean, padding: number): void
    pack_start(child: Widget, expand: boolean, fill: boolean, padding: number): void
    query_child_packing(child: Widget): [ /* expand */ boolean, /* fill */ boolean, /* padding */ number, /* pack_type */ PackType ]
    reorder_child(child: Widget, position: number): void
    set_baseline_position(position: BaselinePosition): void
    set_center_widget(widget?: Widget | null): void
    set_child_packing(child: Widget, expand: boolean, fill: boolean, padding: number, pack_type: PackType): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.AppChooser */
    get_app_info(): Gio.AppInfo | null
    get_content_type(): string
    refresh(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.AppChooserWidget */
    vfunc_application_activated?(app_info: Gio.AppInfo): void
    vfunc_application_selected?(app_info: Gio.AppInfo): void
    vfunc_populate_popup?(menu: Menu, app_info: Gio.AppInfo): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.AppChooserWidget */
    connect(sigName: "application-activated", callback: ((obj: AppChooserWidget, application: Gio.AppInfo) => void))
    connect(sigName: "application-selected", callback: ((obj: AppChooserWidget, application: Gio.AppInfo) => void))
    connect(sigName: "populate-popup", callback: ((obj: AppChooserWidget, menu: Menu, application: Gio.AppInfo) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: AppChooserWidget, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "remove", callback: ((obj: AppChooserWidget, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: AppChooserWidget, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "button-press-event", callback: ((obj: AppChooserWidget, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: AppChooserWidget, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: AppChooserWidget, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: AppChooserWidget, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "configure-event", callback: ((obj: AppChooserWidget, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: AppChooserWidget, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: AppChooserWidget, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "destroy-event", callback: ((obj: AppChooserWidget, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: AppChooserWidget, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: AppChooserWidget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: AppChooserWidget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: AppChooserWidget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: AppChooserWidget, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: AppChooserWidget, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: AppChooserWidget, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: AppChooserWidget, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: AppChooserWidget, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: AppChooserWidget, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: AppChooserWidget, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: AppChooserWidget, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "grab-notify", callback: ((obj: AppChooserWidget, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: AppChooserWidget, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: AppChooserWidget, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: AppChooserWidget, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: AppChooserWidget, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "map-event", callback: ((obj: AppChooserWidget, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: AppChooserWidget, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: AppChooserWidget, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: AppChooserWidget, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: AppChooserWidget) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: AppChooserWidget, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: AppChooserWidget, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: AppChooserWidget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "screen-changed", callback: ((obj: AppChooserWidget, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: AppChooserWidget, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: AppChooserWidget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: AppChooserWidget, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: AppChooserWidget, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: AppChooserWidget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "show-help", callback: ((obj: AppChooserWidget, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: AppChooserWidget, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: AppChooserWidget, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: AppChooserWidget, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: AppChooserWidget, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "touch-event", callback: ((obj: AppChooserWidget, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "unmap-event", callback: ((obj: AppChooserWidget, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: AppChooserWidget) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: AppChooserWidget, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: AppChooserWidget, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::default-text", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-all", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-default", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-fallback", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-other", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-recommended", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::baseline-position", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: AppChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AppChooserWidget_ConstructProps): AppChooserWidget
    constructor (config?: AppChooserWidget_ConstructProps)
}
export interface Application_ConstructProps extends Gio.Application_ConstructProps {
    app_menu?:Gio.MenuModel
    menubar?:Gio.MenuModel
    register_session?:boolean
}
export class Application extends Gio.Application {
    /* Properties of Gtk.Application */
    readonly active_window:Window
    app_menu:Gio.MenuModel
    menubar:Gio.MenuModel
    register_session:boolean
    /* Fields of Gtk.Application */
    parent: any
    /* Methods of Gtk.Application */
    add_accelerator(accelerator: string, action_name: string, parameter?: GLib.Variant | null): void
    add_window(window: Window): void
    get_accels_for_action(detailed_action_name: string): string[]
    get_actions_for_accel(accel: string): string[]
    get_active_window(): Window | null
    get_app_menu(): Gio.MenuModel | null
    get_menu_by_id(id: string): Gio.Menu
    get_menubar(): Gio.MenuModel
    get_window_by_id(id: number): Window | null
    get_windows(): Window[]
    inhibit(window: Window | null, flags: ApplicationInhibitFlags, reason?: string | null): number
    is_inhibited(flags: ApplicationInhibitFlags): boolean
    list_action_descriptions(): string[]
    prefers_app_menu(): boolean
    remove_accelerator(action_name: string, parameter?: GLib.Variant | null): void
    remove_window(window: Window): void
    set_accels_for_action(detailed_action_name: string, accels: string[]): void
    set_app_menu(app_menu?: Gio.MenuModel | null): void
    set_menubar(menubar?: Gio.MenuModel | null): void
    uninhibit(cookie: number): void
    /* Methods of Gio.ActionGroup */
    action_added(action_name: string): void
    action_enabled_changed(action_name: string, enabled: boolean): void
    action_removed(action_name: string): void
    action_state_changed(action_name: string, state: GLib.Variant): void
    activate_action(action_name: string, parameter?: GLib.Variant | null): void
    change_action_state(action_name: string, value: GLib.Variant): void
    get_action_enabled(action_name: string): boolean
    get_action_parameter_type(action_name: string): GLib.VariantType | null
    get_action_state(action_name: string): GLib.Variant | null
    get_action_state_hint(action_name: string): GLib.Variant | null
    get_action_state_type(action_name: string): GLib.VariantType | null
    has_action(action_name: string): boolean
    list_actions(): string[]
    query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    /* Methods of Gio.ActionMap */
    add_action(action: Gio.Action): void
    add_action_entries(entries: Gio.ActionEntry[], user_data?: object | null): void
    lookup_action(action_name: string): Gio.Action
    remove_action(action_name: string): void
    /* Virtual methods of Gtk.Application */
    vfunc_window_added?(window: Window): void
    vfunc_window_removed?(window: Window): void
    /* Virtual methods of Gio.Application */
    vfunc_activate?(): void
    vfunc_add_platform_data?(builder: GLib.VariantBuilder): void
    vfunc_after_emit?(platform_data: GLib.Variant): void
    vfunc_before_emit?(platform_data: GLib.Variant): void
    vfunc_command_line?(command_line: Gio.ApplicationCommandLine): number
    vfunc_dbus_register?(connection: Gio.DBusConnection, object_path: string): boolean
    vfunc_dbus_unregister?(connection: Gio.DBusConnection, object_path: string): void
    vfunc_handle_local_options?(options: GLib.VariantDict): number
    vfunc_local_command_line?(arguments_: string[]): [ /* returnType */ boolean, /* exit_status */ number ]
    vfunc_open?(files: Gio.File[], hint: string): void
    vfunc_quit_mainloop?(): void
    vfunc_run_mainloop?(): void
    vfunc_shutdown?(): void
    vfunc_startup?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Application */
    connect(sigName: "window-added", callback: ((obj: Application, window: Window) => void))
    connect(sigName: "window-removed", callback: ((obj: Application, window: Window) => void))
    /* Signals of Gio.ActionGroup */
    connect(sigName: "action-added", callback: ((obj: Application, action_name: string) => void))
    connect(sigName: "action-enabled-changed", callback: ((obj: Application, action_name: string, enabled: boolean) => void))
    connect(sigName: "action-removed", callback: ((obj: Application, action_name: string) => void))
    connect(sigName: "action-state-changed", callback: ((obj: Application, action_name: string, value: GLib.Variant) => void))
    connect(sigName: "notify::active-window", callback: ((obj: Application, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-menu", callback: ((obj: Application, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menubar", callback: ((obj: Application, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::register-session", callback: ((obj: Application, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Application_ConstructProps): Application
    constructor (config?: Application_ConstructProps)
}
export interface ApplicationWindow_ConstructProps extends Window_ConstructProps {
    show_menubar?:boolean
}
export class ApplicationWindow extends Window {
    /* Properties of Gtk.ApplicationWindow */
    show_menubar:boolean
    /* Fields of Gtk.ApplicationWindow */
    parent_instance:Window
    /* Methods of Gtk.ApplicationWindow */
    get_help_overlay(): ShortcutsWindow | null
    get_id(): number
    get_show_menubar(): boolean
    set_help_overlay(help_overlay?: ShortcutsWindow | null): void
    set_show_menubar(show_menubar: boolean): void
    /* Methods of Gio.ActionGroup */
    action_added(action_name: string): void
    action_enabled_changed(action_name: string, enabled: boolean): void
    action_removed(action_name: string): void
    action_state_changed(action_name: string, state: GLib.Variant): void
    activate_action(action_name: string, parameter?: GLib.Variant | null): void
    change_action_state(action_name: string, value: GLib.Variant): void
    get_action_enabled(action_name: string): boolean
    get_action_parameter_type(action_name: string): GLib.VariantType | null
    get_action_state(action_name: string): GLib.Variant | null
    get_action_state_hint(action_name: string): GLib.Variant | null
    get_action_state_type(action_name: string): GLib.VariantType | null
    has_action(action_name: string): boolean
    list_actions(): string[]
    query_action(action_name: string): [ /* returnType */ boolean, /* enabled */ boolean, /* parameter_type */ GLib.VariantType | null, /* state_type */ GLib.VariantType | null, /* state_hint */ GLib.Variant | null, /* state */ GLib.Variant | null ]
    /* Methods of Gio.ActionMap */
    add_action(action: Gio.Action): void
    add_action_entries(entries: Gio.ActionEntry[], user_data?: object | null): void
    lookup_action(action_name: string): Gio.Action
    remove_action(action_name: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gio.ActionGroup */
    connect(sigName: "action-added", callback: ((obj: ApplicationWindow, action_name: string) => void))
    connect(sigName: "action-enabled-changed", callback: ((obj: ApplicationWindow, action_name: string, enabled: boolean) => void))
    connect(sigName: "action-removed", callback: ((obj: ApplicationWindow, action_name: string) => void))
    connect(sigName: "action-state-changed", callback: ((obj: ApplicationWindow, action_name: string, value: GLib.Variant) => void))
    connect(sigName: "notify::show-menubar", callback: ((obj: ApplicationWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ApplicationWindow_ConstructProps): ApplicationWindow
    constructor (config?: ApplicationWindow_ConstructProps)
}
export interface Arrow_ConstructProps extends Misc_ConstructProps {
    arrow_type?:ArrowType
    shadow_type?:ShadowType
}
export class Arrow extends Misc {
    /* Properties of Gtk.Arrow */
    arrow_type:ArrowType
    shadow_type:ShadowType
    /* Fields of Gtk.Arrow */
    misc:Misc
    /* Methods of Gtk.Arrow */
    set(arrow_type: ArrowType, shadow_type: ShadowType): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::arrow-type", callback: ((obj: Arrow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shadow-type", callback: ((obj: Arrow, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Arrow_ConstructProps): Arrow
    constructor (config?: Arrow_ConstructProps)
}
export interface ArrowAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class ArrowAccessible extends WidgetAccessible {
    /* Fields of Gtk.ArrowAccessible */
    parent: any
    priv:ArrowAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ArrowAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ArrowAccessible_ConstructProps): ArrowAccessible
    constructor (config?: ArrowAccessible_ConstructProps)
}
export interface AspectFrame_ConstructProps extends Frame_ConstructProps {
    obey_child?:boolean
    ratio?:number
    xalign?:number
    yalign?:number
}
export class AspectFrame extends Frame {
    /* Properties of Gtk.AspectFrame */
    obey_child:boolean
    ratio:number
    xalign:number
    yalign:number
    /* Fields of Gtk.AspectFrame */
    frame:Frame
    /* Methods of Gtk.AspectFrame */
    set(xalign: number, yalign: number, ratio: number, obey_child: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Frame */
    vfunc_compute_child_allocation?(allocation: Allocation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::obey-child", callback: ((obj: AspectFrame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ratio", callback: ((obj: AspectFrame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: AspectFrame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: AspectFrame, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: AspectFrame_ConstructProps): AspectFrame
    constructor (config?: AspectFrame_ConstructProps)
}
export interface Assistant_ConstructProps extends Window_ConstructProps {
    use_header_bar?:number
}
export class Assistant extends Window {
    /* Properties of Gtk.Assistant */
    /* Fields of Gtk.Assistant */
    parent: any
    /* Methods of Gtk.Assistant */
    add_action_widget(child: Widget): void
    append_page(page: Widget): number
    commit(): void
    get_current_page(): number
    get_n_pages(): number
    get_nth_page(page_num: number): Widget | null
    get_page_complete(page: Widget): boolean
    get_page_has_padding(page: Widget): boolean
    get_page_header_image(page: Widget): GdkPixbuf.Pixbuf
    get_page_side_image(page: Widget): GdkPixbuf.Pixbuf
    get_page_title(page: Widget): string
    get_page_type(page: Widget): AssistantPageType
    insert_page(page: Widget, position: number): number
    next_page(): void
    prepend_page(page: Widget): number
    previous_page(): void
    remove_action_widget(child: Widget): void
    remove_page(page_num: number): void
    set_current_page(page_num: number): void
    set_forward_page_func(page_func: AssistantPageFunc | null, destroy: GLib.DestroyNotify): void
    set_page_complete(page: Widget, complete: boolean): void
    set_page_has_padding(page: Widget, has_padding: boolean): void
    set_page_header_image(page: Widget, pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_page_side_image(page: Widget, pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_page_title(page: Widget, title: string): void
    set_page_type(page: Widget, type: AssistantPageType): void
    update_buttons_state(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Assistant */
    vfunc_apply?(): void
    vfunc_cancel?(): void
    vfunc_close?(): void
    vfunc_prepare?(page: Widget): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Assistant */
    connect(sigName: "apply", callback: ((obj: Assistant) => void))
    connect(sigName: "cancel", callback: ((obj: Assistant) => void))
    connect(sigName: "close", callback: ((obj: Assistant) => void))
    connect(sigName: "escape", callback: ((obj: Assistant) => void))
    connect(sigName: "prepare", callback: ((obj: Assistant, page: Widget) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Assistant_ConstructProps): Assistant
    constructor (config?: Assistant_ConstructProps)
}
export interface Bin_ConstructProps extends Container_ConstructProps {
}
export class Bin extends Container {
    /* Fields of Gtk.Bin */
    container:Container
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Bin_ConstructProps): Bin
    constructor (config?: Bin_ConstructProps)
}
export interface BooleanCellAccessible_ConstructProps extends RendererCellAccessible_ConstructProps {
}
export class BooleanCellAccessible extends RendererCellAccessible {
    /* Fields of Gtk.BooleanCellAccessible */
    parent: any
    priv:BooleanCellAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: BooleanCellAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: BooleanCellAccessible_ConstructProps): BooleanCellAccessible
    constructor (config?: BooleanCellAccessible_ConstructProps)
}
export interface Box_ConstructProps extends Container_ConstructProps {
    baseline_position?:BaselinePosition
    homogeneous?:boolean
    spacing?:number
}
export class Box extends Container {
    /* Properties of Gtk.Box */
    baseline_position:BaselinePosition
    homogeneous:boolean
    spacing:number
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Box */
    container:Container
    /* Methods of Gtk.Box */
    get_baseline_position(): BaselinePosition
    get_center_widget(): Widget | null
    get_homogeneous(): boolean
    get_spacing(): number
    pack_end(child: Widget, expand: boolean, fill: boolean, padding: number): void
    pack_start(child: Widget, expand: boolean, fill: boolean, padding: number): void
    query_child_packing(child: Widget): [ /* expand */ boolean, /* fill */ boolean, /* padding */ number, /* pack_type */ PackType ]
    reorder_child(child: Widget, position: number): void
    set_baseline_position(position: BaselinePosition): void
    set_center_widget(widget?: Widget | null): void
    set_child_packing(child: Widget, expand: boolean, fill: boolean, padding: number, pack_type: PackType): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-position", callback: ((obj: Box, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: Box, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: Box, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Box, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Box_ConstructProps): Box
    constructor (config?: Box_ConstructProps)
}
export interface Builder_ConstructProps extends GObject.Object_ConstructProps {
    translation_domain?:string
}
export class Builder extends GObject.Object {
    /* Properties of Gtk.Builder */
    translation_domain:string
    /* Fields of Gtk.Builder */
    parent_instance:GObject.Object
    priv:BuilderPrivate
    /* Methods of Gtk.Builder */
    add_callback_symbol(callback_name: string, callback_symbol: GObject.Callback): void
    add_from_file(filename: string): number
    add_from_resource(resource_path: string): number
    add_from_string(buffer: string, length: number): number
    add_objects_from_file(filename: string, object_ids: string[]): number
    add_objects_from_resource(resource_path: string, object_ids: string[]): number
    add_objects_from_string(buffer: string, length: number, object_ids: string[]): number
    connect_signals(user_data?: object | null): void
    connect_signals_full(func: BuilderConnectFunc): void
    expose_object(name: string, object: GObject.Object): void
    extend_with_template(widget: Widget, template_type: number, buffer: string, length: number): number
    get_application(): Application | null
    get_object(name: string): GObject.Object | null
    get_objects(): GLib.SList
    get_translation_domain(): string
    get_type_from_name(type_name: string): number
    set_application(application: Application): void
    set_translation_domain(domain?: string | null): void
    value_from_string(pspec: GObject.ParamSpec, string: string): [ /* returnType */ boolean, /* value */ any ]
    value_from_string_type(type: number, string: string): [ /* returnType */ boolean, /* value */ any ]
    /* Virtual methods of Gtk.Builder */
    vfunc_get_type_from_name?(type_name: string): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::translation-domain", callback: ((obj: Builder, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Builder_ConstructProps): Builder
    constructor (config?: Builder_ConstructProps)
    static new_from_file(filename: string): Builder
    static new_from_resource(resource_path: string): Builder
    static new_from_string(string: string, length: number): Builder
}
export interface Button_ConstructProps extends Bin_ConstructProps {
    always_show_image?:boolean
    image?:Widget
    image_position?:PositionType
    label?:string
    relief?:ReliefStyle
    use_stock?:boolean
    use_underline?:boolean
    xalign?:number
    yalign?:number
}
export class Button extends Bin {
    /* Properties of Gtk.Button */
    always_show_image:boolean
    image:Widget
    image_position:PositionType
    label:string
    relief:ReliefStyle
    use_stock:boolean
    use_underline:boolean
    xalign:number
    yalign:number
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.Button */
    /* Methods of Gtk.Button */
    clicked(): void
    enter(): void
    get_alignment(): [ /* xalign */ number, /* yalign */ number ]
    get_always_show_image(): boolean
    get_event_window(): Gdk.Window
    get_focus_on_click(): boolean
    get_image(): Widget | null
    get_image_position(): PositionType
    get_label(): string
    get_relief(): ReliefStyle
    get_use_stock(): boolean
    get_use_underline(): boolean
    leave(): void
    pressed(): void
    released(): void
    set_alignment(xalign: number, yalign: number): void
    set_always_show_image(always_show: boolean): void
    set_focus_on_click(focus_on_click: boolean): void
    set_image(image?: Widget | null): void
    set_image_position(position: PositionType): void
    set_label(label: string): void
    set_relief(relief: ReliefStyle): void
    set_use_stock(use_stock: boolean): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: ((obj: Button) => void))
    connect(sigName: "clicked", callback: ((obj: Button) => void))
    connect(sigName: "enter", callback: ((obj: Button) => void))
    connect(sigName: "leave", callback: ((obj: Button) => void))
    connect(sigName: "pressed", callback: ((obj: Button) => void))
    connect(sigName: "released", callback: ((obj: Button) => void))
    connect(sigName: "notify::always-show-image", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image-position", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::relief", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-stock", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: Button, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Button_ConstructProps): Button
    constructor (config?: Button_ConstructProps)
    static new_from_icon_name(icon_name: string | null, size: number): Button
    static new_from_stock(stock_id: string): Button
    static new_with_label(label: string): Button
    static new_with_mnemonic(label: string): Button
}
export interface ButtonAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ButtonAccessible extends ContainerAccessible {
    /* Fields of Gtk.ButtonAccessible */
    parent: any
    priv:ButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ButtonAccessible_ConstructProps): ButtonAccessible
    constructor (config?: ButtonAccessible_ConstructProps)
}
export interface ButtonBox_ConstructProps extends Box_ConstructProps {
    layout_style?:ButtonBoxStyle
}
export class ButtonBox extends Box {
    /* Properties of Gtk.ButtonBox */
    layout_style:ButtonBoxStyle
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.ButtonBox */
    box:Box
    /* Methods of Gtk.ButtonBox */
    get_child_non_homogeneous(child: Widget): boolean
    get_child_secondary(child: Widget): boolean
    get_layout(): ButtonBoxStyle
    set_child_non_homogeneous(child: Widget, non_homogeneous: boolean): void
    set_child_secondary(child: Widget, is_secondary: boolean): void
    set_layout(layout_style: ButtonBoxStyle): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::layout-style", callback: ((obj: ButtonBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ButtonBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ButtonBox_ConstructProps): ButtonBox
    constructor (config?: ButtonBox_ConstructProps)
}
export interface Calendar_ConstructProps extends Widget_ConstructProps {
    day?:number
    detail_height_rows?:number
    detail_width_chars?:number
    month?:number
    no_month_change?:boolean
    show_day_names?:boolean
    show_details?:boolean
    show_heading?:boolean
    show_week_numbers?:boolean
    year?:number
}
export class Calendar extends Widget {
    /* Properties of Gtk.Calendar */
    day:number
    detail_height_rows:number
    detail_width_chars:number
    month:number
    no_month_change:boolean
    show_day_names:boolean
    show_details:boolean
    show_heading:boolean
    show_week_numbers:boolean
    year:number
    /* Fields of Gtk.Calendar */
    widget:Widget
    priv:CalendarPrivate
    /* Methods of Gtk.Calendar */
    clear_marks(): void
    get_date(): [ /* year */ number | null, /* month */ number | null, /* day */ number | null ]
    get_day_is_marked(day: number): boolean
    get_detail_height_rows(): number
    get_detail_width_chars(): number
    get_display_options(): CalendarDisplayOptions
    mark_day(day: number): void
    select_day(day: number): void
    select_month(month: number, year: number): void
    set_detail_func(func: CalendarDetailFunc, destroy: GLib.DestroyNotify): void
    set_detail_height_rows(rows: number): void
    set_detail_width_chars(chars: number): void
    set_display_options(flags: CalendarDisplayOptions): void
    unmark_day(day: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Calendar */
    vfunc_day_selected?(): void
    vfunc_day_selected_double_click?(): void
    vfunc_month_changed?(): void
    vfunc_next_month?(): void
    vfunc_next_year?(): void
    vfunc_prev_month?(): void
    vfunc_prev_year?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Calendar */
    connect(sigName: "day-selected", callback: ((obj: Calendar) => void))
    connect(sigName: "day-selected-double-click", callback: ((obj: Calendar) => void))
    connect(sigName: "month-changed", callback: ((obj: Calendar) => void))
    connect(sigName: "next-month", callback: ((obj: Calendar) => void))
    connect(sigName: "next-year", callback: ((obj: Calendar) => void))
    connect(sigName: "prev-month", callback: ((obj: Calendar) => void))
    connect(sigName: "prev-year", callback: ((obj: Calendar) => void))
    connect(sigName: "notify::day", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail-height-rows", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail-width-chars", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::month", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-month-change", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-day-names", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-details", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-heading", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-week-numbers", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::year", callback: ((obj: Calendar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Calendar_ConstructProps): Calendar
    constructor (config?: Calendar_ConstructProps)
}
export interface CellAccessible_ConstructProps extends Accessible_ConstructProps {
}
export class CellAccessible extends Accessible {
    /* Fields of Gtk.CellAccessible */
    parent: any
    priv:CellAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: CellAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellAccessible_ConstructProps): CellAccessible
    constructor (config?: CellAccessible_ConstructProps)
}
export interface CellArea_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    focus_cell?:CellRenderer
}
export class CellArea extends GObject.InitiallyUnowned {
    /* Properties of Gtk.CellArea */
    readonly edit_widget:CellEditable
    readonly edited_cell:CellRenderer
    focus_cell:CellRenderer
    /* Fields of Gtk.CellArea */
    /* Methods of Gtk.CellArea */
    activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    activate_cell(widget: Widget, renderer: CellRenderer, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    add(renderer: CellRenderer): void
    add_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    attribute_connect(renderer: CellRenderer, attribute: string, column: number): void
    attribute_disconnect(renderer: CellRenderer, attribute: string): void
    attribute_get_column(renderer: CellRenderer, attribute: string): number
    cell_get_property(renderer: CellRenderer, property_name: string, value: any): void
    cell_set_property(renderer: CellRenderer, property_name: string, value: any): void
    copy_context(context: CellAreaContext): CellAreaContext
    create_context(): CellAreaContext
    event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    focus(direction: DirectionType): boolean
    foreach(callback: CellCallback): void
    foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    get_cell_allocation(context: CellAreaContext, widget: Widget, renderer: CellRenderer, cell_area: Gdk.Rectangle): /* allocation */ Gdk.Rectangle
    get_cell_at_position(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, x: number, y: number): [ /* returnType */ CellRenderer, /* alloc_area */ Gdk.Rectangle | null ]
    get_current_path_string(): string
    get_edit_widget(): CellEditable
    get_edited_cell(): CellRenderer
    get_focus_cell(): CellRenderer
    get_focus_from_sibling(renderer: CellRenderer): CellRenderer | null
    get_focus_siblings(renderer: CellRenderer): CellRenderer[]
    get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    has_renderer(renderer: CellRenderer): boolean
    inner_cell_area(widget: Widget, cell_area: Gdk.Rectangle): /* inner_area */ Gdk.Rectangle
    is_activatable(): boolean
    is_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): boolean
    remove(renderer: CellRenderer): void
    remove_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    render(context: CellAreaContext, widget: Widget, cr: cairo.Context, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    request_renderer(renderer: CellRenderer, orientation: Orientation, widget: Widget, for_size: number): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    set_focus_cell(renderer: CellRenderer): void
    stop_editing(canceled: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.CellArea */
    vfunc_activate?(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    vfunc_add?(renderer: CellRenderer): void
    vfunc_apply_attributes?(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    vfunc_copy_context?(context: CellAreaContext): CellAreaContext
    vfunc_create_context?(): CellAreaContext
    vfunc_event?(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_foreach?(callback: CellCallback): void
    vfunc_foreach_alloc?(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    vfunc_get_cell_property?(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_preferred_height?(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_for_width?(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_is_activatable?(): boolean
    vfunc_remove?(renderer: CellRenderer): void
    vfunc_render?(context: CellAreaContext, widget: Widget, cr: cairo.Context, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    vfunc_set_cell_property?(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellArea */
    connect(sigName: "add-editable", callback: ((obj: CellArea, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void))
    connect(sigName: "apply-attributes", callback: ((obj: CellArea, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void))
    connect(sigName: "focus-changed", callback: ((obj: CellArea, renderer: CellRenderer, path: string) => void))
    connect(sigName: "remove-editable", callback: ((obj: CellArea, renderer: CellRenderer, editable: CellEditable) => void))
    connect(sigName: "notify::edit-widget", callback: ((obj: CellArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::edited-cell", callback: ((obj: CellArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-cell", callback: ((obj: CellArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellArea_ConstructProps): CellArea
    constructor (config?: CellArea_ConstructProps)
}
export interface CellAreaBox_ConstructProps extends CellArea_ConstructProps {
    spacing?:number
}
export class CellAreaBox extends GObject.InitiallyUnowned {
    /* Properties of Gtk.CellAreaBox */
    spacing:number
    /* Properties of Gtk.CellArea */
    readonly edit_widget:CellEditable
    readonly edited_cell:CellRenderer
    focus_cell:CellRenderer
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.CellAreaBox */
    /* Fields of Gtk.CellArea */
    /* Methods of Gtk.CellAreaBox */
    get_spacing(): number
    pack_end(renderer: CellRenderer, expand: boolean, align: boolean, fixed: boolean): void
    pack_start(renderer: CellRenderer, expand: boolean, align: boolean, fixed: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.CellArea */
    activate(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    activate_cell(widget: Widget, renderer: CellRenderer, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    add(renderer: CellRenderer): void
    add_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    apply_attributes(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    attribute_connect(renderer: CellRenderer, attribute: string, column: number): void
    attribute_disconnect(renderer: CellRenderer, attribute: string): void
    attribute_get_column(renderer: CellRenderer, attribute: string): number
    cell_get_property(renderer: CellRenderer, property_name: string, value: any): void
    cell_set_property(renderer: CellRenderer, property_name: string, value: any): void
    copy_context(context: CellAreaContext): CellAreaContext
    create_context(): CellAreaContext
    event(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    focus(direction: DirectionType): boolean
    foreach(callback: CellCallback): void
    foreach_alloc(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    get_cell_allocation(context: CellAreaContext, widget: Widget, renderer: CellRenderer, cell_area: Gdk.Rectangle): /* allocation */ Gdk.Rectangle
    get_cell_at_position(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, x: number, y: number): [ /* returnType */ CellRenderer, /* alloc_area */ Gdk.Rectangle | null ]
    get_current_path_string(): string
    get_edit_widget(): CellEditable
    get_edited_cell(): CellRenderer
    get_focus_cell(): CellRenderer
    get_focus_from_sibling(renderer: CellRenderer): CellRenderer | null
    get_focus_siblings(renderer: CellRenderer): CellRenderer[]
    get_preferred_height(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    has_renderer(renderer: CellRenderer): boolean
    inner_cell_area(widget: Widget, cell_area: Gdk.Rectangle): /* inner_area */ Gdk.Rectangle
    is_activatable(): boolean
    is_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): boolean
    remove(renderer: CellRenderer): void
    remove_focus_sibling(renderer: CellRenderer, sibling: CellRenderer): void
    render(context: CellAreaContext, widget: Widget, cr: cairo.Context, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    request_renderer(renderer: CellRenderer, orientation: Orientation, widget: Widget, for_size: number): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    set_focus_cell(renderer: CellRenderer): void
    stop_editing(canceled: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.CellArea */
    vfunc_activate?(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, flags: CellRendererState, edit_only: boolean): boolean
    vfunc_add?(renderer: CellRenderer): void
    vfunc_apply_attributes?(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    vfunc_copy_context?(context: CellAreaContext): CellAreaContext
    vfunc_create_context?(): CellAreaContext
    vfunc_event?(context: CellAreaContext, widget: Widget, event: Gdk.Event, cell_area: Gdk.Rectangle, flags: CellRendererState): number
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_foreach?(callback: CellCallback): void
    vfunc_foreach_alloc?(context: CellAreaContext, widget: Widget, cell_area: Gdk.Rectangle, background_area: Gdk.Rectangle, callback: CellAllocCallback): void
    vfunc_get_cell_property?(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_preferred_height?(context: CellAreaContext, widget: Widget): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_for_width?(context: CellAreaContext, widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(context: CellAreaContext, widget: Widget): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(context: CellAreaContext, widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_is_activatable?(): boolean
    vfunc_remove?(renderer: CellRenderer): void
    vfunc_render?(context: CellAreaContext, widget: Widget, cr: cairo.Context, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState, paint_focus: boolean): void
    vfunc_set_cell_property?(renderer: CellRenderer, property_id: number, value: any, pspec: GObject.ParamSpec): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellArea */
    connect(sigName: "add-editable", callback: ((obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable, cell_area: Gdk.Rectangle, path: string) => void))
    connect(sigName: "apply-attributes", callback: ((obj: CellAreaBox, model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean) => void))
    connect(sigName: "focus-changed", callback: ((obj: CellAreaBox, renderer: CellRenderer, path: string) => void))
    connect(sigName: "remove-editable", callback: ((obj: CellAreaBox, renderer: CellRenderer, editable: CellEditable) => void))
    connect(sigName: "notify::spacing", callback: ((obj: CellAreaBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::edit-widget", callback: ((obj: CellAreaBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::edited-cell", callback: ((obj: CellAreaBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-cell", callback: ((obj: CellAreaBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: CellAreaBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellAreaBox_ConstructProps): CellAreaBox
    constructor (config?: CellAreaBox_ConstructProps)
}
export interface CellAreaContext_ConstructProps extends GObject.Object_ConstructProps {
    area?:CellArea
}
export class CellAreaContext extends GObject.Object {
    /* Properties of Gtk.CellAreaContext */
    readonly minimum_height:number
    readonly minimum_width:number
    readonly natural_height:number
    readonly natural_width:number
    /* Fields of Gtk.CellAreaContext */
    /* Methods of Gtk.CellAreaContext */
    allocate(width: number, height: number): void
    get_allocation(): [ /* width */ number | null, /* height */ number | null ]
    get_area(): CellArea
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    push_preferred_height(minimum_height: number, natural_height: number): void
    push_preferred_width(minimum_width: number, natural_width: number): void
    reset(): void
    /* Virtual methods of Gtk.CellAreaContext */
    vfunc_allocate?(width: number, height: number): void
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_reset?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::minimum-height", callback: ((obj: CellAreaContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::minimum-width", callback: ((obj: CellAreaContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::natural-height", callback: ((obj: CellAreaContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::natural-width", callback: ((obj: CellAreaContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellAreaContext_ConstructProps): CellAreaContext
    constructor (config?: CellAreaContext_ConstructProps)
}
export interface CellRenderer_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    cell_background?:string
    cell_background_gdk?:Gdk.Color
    cell_background_rgba?:Gdk.RGBA
    cell_background_set?:boolean
    height?:number
    is_expanded?:boolean
    is_expander?:boolean
    mode?:CellRendererMode
    sensitive?:boolean
    visible?:boolean
    width?:number
    xalign?:number
    xpad?:number
    yalign?:number
    ypad?:number
}
export class CellRenderer extends GObject.InitiallyUnowned {
    /* Properties of Gtk.CellRenderer */
    cell_background:string
    cell_background_gdk:Gdk.Color
    cell_background_rgba:Gdk.RGBA
    cell_background_set:boolean
    readonly editing:boolean
    height:number
    is_expanded:boolean
    is_expander:boolean
    mode:CellRendererMode
    sensitive:boolean
    visible:boolean
    width:number
    xalign:number
    xpad:number
    yalign:number
    ypad:number
    /* Fields of Gtk.CellRenderer */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.CellRenderer */
    activate(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    get_aligned_area(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_fixed_size(): [ /* width */ number | null, /* height */ number | null ]
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    get_preferred_height(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_height_for_width(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(widget: Widget): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    get_preferred_width_for_height(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_request_mode(): SizeRequestMode
    get_sensitive(): boolean
    get_size(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    get_state(widget: Widget | null, cell_state: CellRendererState): StateFlags
    get_visible(): boolean
    is_activatable(): boolean
    render(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    set_alignment(xalign: number, yalign: number): void
    set_fixed_size(width: number, height: number): void
    set_padding(xpad: number, ypad: number): void
    set_sensitive(sensitive: boolean): void
    set_visible(visible: boolean): void
    start_editing(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    stop_editing(canceled: boolean): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRenderer */
    connect(sigName: "editing-canceled", callback: ((obj: CellRenderer) => void))
    connect(sigName: "editing-started", callback: ((obj: CellRenderer, editable: CellEditable, path: string) => void))
    connect(sigName: "notify::cell-background", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-background-gdk", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-background-rgba", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-background-set", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-expanded", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-expander", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mode", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xpad", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ypad", callback: ((obj: CellRenderer, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRenderer_ConstructProps): CellRenderer
    constructor (config?: CellRenderer_ConstructProps)
}
export interface CellRendererAccel_ConstructProps extends CellRendererText_ConstructProps {
    accel_key?:number
    accel_mode?:CellRendererAccelMode
    accel_mods?:Gdk.ModifierType
    keycode?:number
}
export class CellRendererAccel extends CellRendererText {
    /* Properties of Gtk.CellRendererAccel */
    accel_key:number
    accel_mode:CellRendererAccelMode
    accel_mods:Gdk.ModifierType
    keycode:number
    /* Fields of Gtk.CellRendererAccel */
    parent: any
    /* Virtual methods of Gtk.CellRendererAccel */
    vfunc_accel_cleared?(path_string: string): void
    vfunc_accel_edited?(path_string: string, accel_key: number, accel_mods: Gdk.ModifierType, hardware_keycode: number): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited?(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererAccel */
    connect(sigName: "accel-cleared", callback: ((obj: CellRendererAccel, path_string: string) => void))
    connect(sigName: "accel-edited", callback: ((obj: CellRendererAccel, path_string: string, accel_key: number, accel_mods: Gdk.ModifierType, hardware_keycode: number) => void))
    connect(sigName: "notify::accel-key", callback: ((obj: CellRendererAccel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accel-mode", callback: ((obj: CellRendererAccel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accel-mods", callback: ((obj: CellRendererAccel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::keycode", callback: ((obj: CellRendererAccel, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererAccel_ConstructProps): CellRendererAccel
    constructor (config?: CellRendererAccel_ConstructProps)
}
export interface CellRendererCombo_ConstructProps extends CellRendererText_ConstructProps {
    has_entry?:boolean
    model?:TreeModel
    text_column?:number
}
export class CellRendererCombo extends CellRendererText {
    /* Properties of Gtk.CellRendererCombo */
    has_entry:boolean
    model:TreeModel
    text_column:number
    /* Fields of Gtk.CellRendererCombo */
    parent: any
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited?(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererCombo */
    connect(sigName: "changed", callback: ((obj: CellRendererCombo, path_string: string, new_iter: TreeIter) => void))
    connect(sigName: "notify::has-entry", callback: ((obj: CellRendererCombo, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: CellRendererCombo, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-column", callback: ((obj: CellRendererCombo, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererCombo_ConstructProps): CellRendererCombo
    constructor (config?: CellRendererCombo_ConstructProps)
}
export interface CellRendererPixbuf_ConstructProps extends CellRenderer_ConstructProps {
    follow_state?:boolean
    gicon?:Gio.Icon
    icon_name?:string
    pixbuf?:GdkPixbuf.Pixbuf
    pixbuf_expander_closed?:GdkPixbuf.Pixbuf
    pixbuf_expander_open?:GdkPixbuf.Pixbuf
    stock_detail?:string
    stock_id?:string
    stock_size?:number
    surface?:cairo.Surface
}
export class CellRendererPixbuf extends CellRenderer {
    /* Properties of Gtk.CellRendererPixbuf */
    follow_state:boolean
    gicon:Gio.Icon
    icon_name:string
    pixbuf:GdkPixbuf.Pixbuf
    pixbuf_expander_closed:GdkPixbuf.Pixbuf
    pixbuf_expander_open:GdkPixbuf.Pixbuf
    stock_detail:string
    stock_id:string
    stock_size:number
    surface:cairo.Surface
    /* Fields of Gtk.CellRendererPixbuf */
    parent: any
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::follow-state", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gicon", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf-expander-closed", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf-expander-open", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-detail", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-id", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-size", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::surface", callback: ((obj: CellRendererPixbuf, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererPixbuf_ConstructProps): CellRendererPixbuf
    constructor (config?: CellRendererPixbuf_ConstructProps)
}
export interface CellRendererProgress_ConstructProps extends CellRenderer_ConstructProps {
    inverted?:boolean
    pulse?:number
    text?:string
    text_xalign?:number
    text_yalign?:number
    value?:number
}
export class CellRendererProgress extends CellRenderer {
    /* Properties of Gtk.CellRendererProgress */
    inverted:boolean
    pulse:number
    text:string
    text_xalign:number
    text_yalign:number
    value:number
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.CellRendererProgress */
    parent_instance:CellRenderer
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::inverted", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pulse", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-xalign", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-yalign", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: CellRendererProgress, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererProgress_ConstructProps): CellRendererProgress
    constructor (config?: CellRendererProgress_ConstructProps)
}
export interface CellRendererSpin_ConstructProps extends CellRendererText_ConstructProps {
    adjustment?:Adjustment
    climb_rate?:number
    digits?:number
}
export class CellRendererSpin extends CellRendererText {
    /* Properties of Gtk.CellRendererSpin */
    adjustment:Adjustment
    climb_rate:number
    digits:number
    /* Fields of Gtk.CellRendererSpin */
    parent: any
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited?(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::adjustment", callback: ((obj: CellRendererSpin, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::climb-rate", callback: ((obj: CellRendererSpin, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::digits", callback: ((obj: CellRendererSpin, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererSpin_ConstructProps): CellRendererSpin
    constructor (config?: CellRendererSpin_ConstructProps)
}
export interface CellRendererSpinner_ConstructProps extends CellRenderer_ConstructProps {
    active?:boolean
    pulse?:number
    size?:IconSize
}
export class CellRendererSpinner extends CellRenderer {
    /* Properties of Gtk.CellRendererSpinner */
    active:boolean
    pulse:number
    size:IconSize
    /* Fields of Gtk.CellRendererSpinner */
    parent: any
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: ((obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pulse", callback: ((obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((obj: CellRendererSpinner, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererSpinner_ConstructProps): CellRendererSpinner
    constructor (config?: CellRendererSpinner_ConstructProps)
}
export interface CellRendererText_ConstructProps extends CellRenderer_ConstructProps {
    align_set?:boolean
    alignment?:Pango.Alignment
    attributes?:Pango.AttrList
    background?:string
    background_gdk?:Gdk.Color
    background_rgba?:Gdk.RGBA
    background_set?:boolean
    editable?:boolean
    editable_set?:boolean
    ellipsize?:Pango.EllipsizeMode
    ellipsize_set?:boolean
    family?:string
    family_set?:boolean
    font?:string
    font_desc?:Pango.FontDescription
    foreground?:string
    foreground_gdk?:Gdk.Color
    foreground_rgba?:Gdk.RGBA
    foreground_set?:boolean
    language?:string
    language_set?:boolean
    markup?:string
    max_width_chars?:number
    placeholder_text?:string
    rise?:number
    rise_set?:boolean
    scale?:number
    scale_set?:boolean
    single_paragraph_mode?:boolean
    size?:number
    size_points?:number
    size_set?:boolean
    stretch?:Pango.Stretch
    stretch_set?:boolean
    strikethrough?:boolean
    strikethrough_set?:boolean
    style?:Pango.Style
    style_set?:boolean
    text?:string
    underline?:Pango.Underline
    underline_set?:boolean
    variant?:Pango.Variant
    variant_set?:boolean
    weight?:number
    weight_set?:boolean
    width_chars?:number
    wrap_mode?:Pango.WrapMode
    wrap_width?:number
}
export class CellRendererText extends CellRenderer {
    /* Properties of Gtk.CellRendererText */
    align_set:boolean
    alignment:Pango.Alignment
    attributes:Pango.AttrList
    background:string
    background_gdk:Gdk.Color
    background_rgba:Gdk.RGBA
    background_set:boolean
    editable:boolean
    editable_set:boolean
    ellipsize:Pango.EllipsizeMode
    ellipsize_set:boolean
    family:string
    family_set:boolean
    font:string
    font_desc:Pango.FontDescription
    foreground:string
    foreground_gdk:Gdk.Color
    foreground_rgba:Gdk.RGBA
    foreground_set:boolean
    language:string
    language_set:boolean
    markup:string
    max_width_chars:number
    placeholder_text:string
    rise:number
    rise_set:boolean
    scale:number
    scale_set:boolean
    single_paragraph_mode:boolean
    size:number
    size_points:number
    size_set:boolean
    stretch:Pango.Stretch
    stretch_set:boolean
    strikethrough:boolean
    strikethrough_set:boolean
    style:Pango.Style
    style_set:boolean
    text:string
    underline:Pango.Underline
    underline_set:boolean
    variant:Pango.Variant
    variant_set:boolean
    weight:number
    weight_set:boolean
    width_chars:number
    wrap_mode:Pango.WrapMode
    wrap_width:number
    /* Fields of Gtk.CellRendererText */
    parent: any
    /* Methods of Gtk.CellRendererText */
    set_fixed_height_from_font(number_of_rows: number): void
    /* Virtual methods of Gtk.CellRendererText */
    vfunc_edited?(path: string, new_text: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererText */
    connect(sigName: "edited", callback: ((obj: CellRendererText, path: string, new_text: string) => void))
    connect(sigName: "notify::align-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alignment", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-gdk", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-rgba", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ellipsize", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ellipsize-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::family", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::family-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-desc", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-gdk", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-rgba", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::markup", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-width-chars", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::placeholder-text", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rise", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rise-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::single-paragraph-mode", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size-points", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stretch", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stretch-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::variant", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::variant-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::weight", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::weight-set", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-chars", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-width", callback: ((obj: CellRendererText, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererText_ConstructProps): CellRendererText
    constructor (config?: CellRendererText_ConstructProps)
}
export interface CellRendererToggle_ConstructProps extends CellRenderer_ConstructProps {
    activatable?:boolean
    active?:boolean
    inconsistent?:boolean
    indicator_size?:number
    radio?:boolean
}
export class CellRendererToggle extends CellRenderer {
    /* Properties of Gtk.CellRendererToggle */
    activatable:boolean
    active:boolean
    inconsistent:boolean
    indicator_size:number
    radio:boolean
    /* Fields of Gtk.CellRendererToggle */
    parent: any
    /* Methods of Gtk.CellRendererToggle */
    get_activatable(): boolean
    get_active(): boolean
    get_radio(): boolean
    set_activatable(setting: boolean): void
    set_active(setting: boolean): void
    set_radio(radio: boolean): void
    /* Virtual methods of Gtk.CellRendererToggle */
    vfunc_toggled?(path: string): void
    /* Virtual methods of Gtk.CellRenderer */
    vfunc_activate?(event: Gdk.Event, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): boolean
    vfunc_editing_canceled?(): void
    vfunc_editing_started?(editable: CellEditable, path: string): void
    vfunc_get_aligned_area?(widget: Widget, flags: CellRendererState, cell_area: Gdk.Rectangle): /* aligned_area */ Gdk.Rectangle
    vfunc_get_preferred_height?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_height_for_width?(widget: Widget, width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(widget: Widget): [ /* minimum_size */ number | null, /* natural_size */ number | null ]
    vfunc_get_preferred_width_for_height?(widget: Widget, height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_get_size?(widget: Widget, cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    vfunc_render?(cr: cairo.Context, widget: Widget, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): void
    vfunc_start_editing?(event: Gdk.Event | null, widget: Widget, path: string, background_area: Gdk.Rectangle, cell_area: Gdk.Rectangle, flags: CellRendererState): CellEditable | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CellRendererToggle */
    connect(sigName: "toggled", callback: ((obj: CellRendererToggle, path: string) => void))
    connect(sigName: "notify::activatable", callback: ((obj: CellRendererToggle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: CellRendererToggle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: CellRendererToggle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::indicator-size", callback: ((obj: CellRendererToggle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::radio", callback: ((obj: CellRendererToggle, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellRendererToggle_ConstructProps): CellRendererToggle
    constructor (config?: CellRendererToggle_ConstructProps)
}
export interface CellView_ConstructProps extends Widget_ConstructProps {
    background?:string
    background_gdk?:Gdk.Color
    background_rgba?:Gdk.RGBA
    background_set?:boolean
    cell_area?:CellArea
    cell_area_context?:CellAreaContext
    draw_sensitive?:boolean
    fit_model?:boolean
    model?:TreeModel
}
export class CellView extends Widget {
    /* Properties of Gtk.CellView */
    background:string
    background_gdk:Gdk.Color
    background_rgba:Gdk.RGBA
    background_set:boolean
    draw_sensitive:boolean
    fit_model:boolean
    model:TreeModel
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.CellView */
    parent_instance:Widget
    /* Methods of Gtk.CellView */
    get_displayed_row(): TreePath | null
    get_draw_sensitive(): boolean
    get_fit_model(): boolean
    get_model(): TreeModel | null
    get_size_of_row(path: TreePath): [ /* returnType */ boolean, /* requisition */ Requisition ]
    set_background_color(color: Gdk.Color): void
    set_background_rgba(rgba: Gdk.RGBA): void
    set_displayed_row(path?: TreePath | null): void
    set_draw_sensitive(draw_sensitive: boolean): void
    set_fit_model(fit_model: boolean): void
    set_model(model?: TreeModel | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::background", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-gdk", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-rgba", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-set", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-sensitive", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fit-model", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: CellView, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CellView_ConstructProps): CellView
    constructor (config?: CellView_ConstructProps)
    static new_with_context(area: CellArea, context: CellAreaContext): CellView
    static new_with_markup(markup: string): CellView
    static new_with_pixbuf(pixbuf: GdkPixbuf.Pixbuf): CellView
    static new_with_text(text: string): CellView
}
export interface CheckButton_ConstructProps extends ToggleButton_ConstructProps {
}
export class CheckButton extends ToggleButton {
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.CheckButton */
    toggle_button:ToggleButton
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.CheckButton */
    vfunc_draw_indicator?(cr: cairo.Context): void
    /* Virtual methods of Gtk.ToggleButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::action-name", callback: ((obj: CheckButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: CheckButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: CheckButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: CheckButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CheckButton_ConstructProps): CheckButton
    constructor (config?: CheckButton_ConstructProps)
    static new_with_label(label: string): CheckButton
    static new_with_mnemonic(label: string): CheckButton
}
export interface CheckMenuItem_ConstructProps extends MenuItem_ConstructProps {
    active?:boolean
    draw_as_radio?:boolean
    inconsistent?:boolean
}
export class CheckMenuItem extends MenuItem {
    /* Properties of Gtk.CheckMenuItem */
    active:boolean
    draw_as_radio:boolean
    inconsistent:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.CheckMenuItem */
    menu_item:MenuItem
    /* Methods of Gtk.CheckMenuItem */
    get_active(): boolean
    get_draw_as_radio(): boolean
    get_inconsistent(): boolean
    set_active(is_active: boolean): void
    set_draw_as_radio(draw_as_radio: boolean): void
    set_inconsistent(setting: boolean): void
    toggled(): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.CheckMenuItem */
    vfunc_draw_indicator?(cr: cairo.Context): void
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CheckMenuItem */
    connect(sigName: "toggled", callback: ((obj: CheckMenuItem) => void))
    connect(sigName: "notify::active", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-as-radio", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: CheckMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CheckMenuItem_ConstructProps): CheckMenuItem
    constructor (config?: CheckMenuItem_ConstructProps)
    static new_with_label(label: string): CheckMenuItem
    static new_with_mnemonic(label: string): CheckMenuItem
}
export interface CheckMenuItemAccessible_ConstructProps extends MenuItemAccessible_ConstructProps {
}
export class CheckMenuItemAccessible extends MenuItemAccessible {
    /* Fields of Gtk.CheckMenuItemAccessible */
    parent: any
    priv:CheckMenuItemAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: CheckMenuItemAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: CheckMenuItemAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CheckMenuItemAccessible_ConstructProps): CheckMenuItemAccessible
    constructor (config?: CheckMenuItemAccessible_ConstructProps)
}
export interface Clipboard_ConstructProps extends GObject.Object_ConstructProps {
}
export class Clipboard extends GObject.Object {
    /* Methods of Gtk.Clipboard */
    clear(): void
    get_display(): Gdk.Display
    get_owner(): GObject.Object | null
    request_contents(target: Gdk.Atom, callback: ClipboardReceivedFunc): void
    request_image(callback: ClipboardImageReceivedFunc): void
    request_rich_text(buffer: TextBuffer, callback: ClipboardRichTextReceivedFunc): void
    request_targets(callback: ClipboardTargetsReceivedFunc): void
    request_text(callback: ClipboardTextReceivedFunc): void
    request_uris(callback: ClipboardURIReceivedFunc): void
    set_can_store(targets: TargetEntry[] | null): void
    set_image(pixbuf: GdkPixbuf.Pixbuf): void
    set_text(text: string, len: number): void
    store(): void
    wait_for_contents(target: Gdk.Atom): SelectionData | null
    wait_for_image(): GdkPixbuf.Pixbuf | null
    wait_for_rich_text(buffer: TextBuffer): [ /* returnType */ Gjs.byteArray.ByteArray | null, /* format */ Gdk.Atom ]
    wait_for_targets(): [ /* returnType */ boolean, /* targets */ Gdk.Atom[] ]
    wait_for_text(): string | null
    wait_for_uris(): string[] | null
    wait_is_image_available(): boolean
    wait_is_rich_text_available(buffer: TextBuffer): boolean
    wait_is_target_available(target: Gdk.Atom): boolean
    wait_is_text_available(): boolean
    wait_is_uris_available(): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Clipboard */
    connect(sigName: "owner-change", callback: ((obj: Clipboard, event: Gdk.EventOwnerChange) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Clipboard_ConstructProps): Clipboard
    constructor (config?: Clipboard_ConstructProps)
    static get(selection: Gdk.Atom): Clipboard
    static get_default(display: Gdk.Display): Clipboard
    static get_for_display(display: Gdk.Display, selection: Gdk.Atom): Clipboard
}
export interface ColorButton_ConstructProps extends Button_ConstructProps {
    alpha?:number
    color?:Gdk.Color
    rgba?:Gdk.RGBA
    show_editor?:boolean
    title?:string
    use_alpha?:boolean
}
export class ColorButton extends Button {
    /* Properties of Gtk.ColorButton */
    alpha:number
    color:Gdk.Color
    rgba:Gdk.RGBA
    show_editor:boolean
    title:string
    use_alpha:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Properties of Gtk.ColorChooser */
    /* Fields of Gtk.ColorButton */
    button:Button
    /* Methods of Gtk.ColorButton */
    get_alpha(): number
    get_color(): /* color */ Gdk.Color
    get_title(): string
    get_use_alpha(): boolean
    set_alpha(alpha: number): void
    set_color(color: Gdk.Color): void
    set_title(title: string): void
    set_use_alpha(use_alpha: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    set_rgba(color: Gdk.RGBA): void
    /* Virtual methods of Gtk.ColorButton */
    vfunc_color_set?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorButton */
    connect(sigName: "color-set", callback: ((obj: ColorButton) => void))
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: ((obj: ColorButton, color: Gdk.RGBA) => void))
    connect(sigName: "notify::alpha", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::color", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rgba", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-editor", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-alpha", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ColorButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ColorButton_ConstructProps): ColorButton
    constructor (config?: ColorButton_ConstructProps)
    static new_with_color(color: Gdk.Color): ColorButton
    static new_with_rgba(rgba: Gdk.RGBA): ColorButton
}
export interface ColorChooserDialog_ConstructProps extends Dialog_ConstructProps {
    show_editor?:boolean
}
export class ColorChooserDialog extends Dialog {
    /* Properties of Gtk.ColorChooserDialog */
    show_editor:boolean
    /* Properties of Gtk.ColorChooser */
    rgba:Gdk.RGBA
    use_alpha:boolean
    /* Fields of Gtk.ColorChooserDialog */
    parent_instance:Dialog
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: ((obj: ColorChooserDialog, color: Gdk.RGBA) => void))
    connect(sigName: "notify::show-editor", callback: ((obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rgba", callback: ((obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-alpha", callback: ((obj: ColorChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ColorChooserDialog_ConstructProps): ColorChooserDialog
    constructor (config?: ColorChooserDialog_ConstructProps)
}
export interface ColorChooserWidget_ConstructProps extends Box_ConstructProps {
    show_editor?:boolean
}
export class ColorChooserWidget extends Box {
    /* Properties of Gtk.ColorChooserWidget */
    show_editor:boolean
    /* Properties of Gtk.ColorChooser */
    rgba:Gdk.RGBA
    use_alpha:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.ColorChooserWidget */
    parent_instance:Box
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.ColorChooser */
    add_palette(orientation: Orientation, colors_per_line: number, colors?: Gdk.RGBA[] | null): void
    get_rgba(): /* color */ Gdk.RGBA
    get_use_alpha(): boolean
    set_rgba(color: Gdk.RGBA): void
    set_use_alpha(use_alpha: boolean): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorChooser */
    connect(sigName: "color-activated", callback: ((obj: ColorChooserWidget, color: Gdk.RGBA) => void))
    connect(sigName: "notify::show-editor", callback: ((obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rgba", callback: ((obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-alpha", callback: ((obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ColorChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ColorChooserWidget_ConstructProps): ColorChooserWidget
    constructor (config?: ColorChooserWidget_ConstructProps)
}
export interface ColorSelection_ConstructProps extends Box_ConstructProps {
    current_alpha?:number
    current_color?:Gdk.Color
    current_rgba?:Gdk.RGBA
    has_opacity_control?:boolean
    has_palette?:boolean
}
export class ColorSelection extends Box {
    /* Properties of Gtk.ColorSelection */
    current_alpha:number
    current_color:Gdk.Color
    current_rgba:Gdk.RGBA
    has_opacity_control:boolean
    has_palette:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.ColorSelection */
    parent_instance:Box
    /* Methods of Gtk.ColorSelection */
    get_current_alpha(): number
    get_current_color(): /* color */ Gdk.Color
    get_current_rgba(): /* rgba */ Gdk.RGBA
    get_has_opacity_control(): boolean
    get_has_palette(): boolean
    get_previous_alpha(): number
    get_previous_color(): /* color */ Gdk.Color
    get_previous_rgba(): /* rgba */ Gdk.RGBA
    is_adjusting(): boolean
    set_current_alpha(alpha: number): void
    set_current_color(color: Gdk.Color): void
    set_current_rgba(rgba: Gdk.RGBA): void
    set_has_opacity_control(has_opacity: boolean): void
    set_has_palette(has_palette: boolean): void
    set_previous_alpha(alpha: number): void
    set_previous_color(color: Gdk.Color): void
    set_previous_rgba(rgba: Gdk.RGBA): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.ColorSelection */
    vfunc_color_changed?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ColorSelection */
    connect(sigName: "color-changed", callback: ((obj: ColorSelection) => void))
    connect(sigName: "notify::current-alpha", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-color", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-rgba", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-opacity-control", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-palette", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ColorSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ColorSelection_ConstructProps): ColorSelection
    constructor (config?: ColorSelection_ConstructProps)
    static palette_from_string(str: string): [ /* returnType */ boolean, /* colors */ Gdk.Color[] ]
    static palette_to_string(colors: Gdk.Color[]): string
}
export interface ColorSelectionDialog_ConstructProps extends Dialog_ConstructProps {
}
export class ColorSelectionDialog extends Dialog {
    /* Properties of Gtk.ColorSelectionDialog */
    readonly cancel_button:Widget
    readonly color_selection:Widget
    readonly help_button:Widget
    readonly ok_button:Widget
    /* Fields of Gtk.ColorSelectionDialog */
    parent_instance:Dialog
    /* Methods of Gtk.ColorSelectionDialog */
    get_color_selection(): Widget
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::cancel-button", callback: ((obj: ColorSelectionDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::color-selection", callback: ((obj: ColorSelectionDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::help-button", callback: ((obj: ColorSelectionDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ok-button", callback: ((obj: ColorSelectionDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ColorSelectionDialog_ConstructProps): ColorSelectionDialog
    constructor (config?: ColorSelectionDialog_ConstructProps)
}
export interface ComboBox_ConstructProps extends Bin_ConstructProps {
    active?:number
    active_id?:string
    add_tearoffs?:boolean
    button_sensitivity?:SensitivityType
    cell_area?:CellArea
    column_span_column?:number
    entry_text_column?:number
    has_entry?:boolean
    has_frame?:boolean
    id_column?:number
    model?:TreeModel
    popup_fixed_width?:boolean
    row_span_column?:number
    tearoff_title?:string
    wrap_width?:number
}
export class ComboBox extends Bin {
    /* Properties of Gtk.ComboBox */
    active:number
    active_id:string
    add_tearoffs:boolean
    button_sensitivity:SensitivityType
    column_span_column:number
    entry_text_column:number
    has_frame:boolean
    id_column:number
    model:TreeModel
    popup_fixed_width:boolean
    readonly popup_shown:boolean
    row_span_column:number
    tearoff_title:string
    wrap_width:number
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Fields of Gtk.ComboBox */
    parent_instance:Bin
    /* Methods of Gtk.ComboBox */
    get_active(): number
    get_active_id(): string | null
    get_active_iter(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_add_tearoffs(): boolean
    get_button_sensitivity(): SensitivityType
    get_column_span_column(): number
    get_entry_text_column(): number
    get_focus_on_click(): boolean
    get_has_entry(): boolean
    get_id_column(): number
    get_model(): TreeModel
    get_popup_accessible(): Atk.Object
    get_popup_fixed_width(): boolean
    get_row_span_column(): number
    get_title(): string
    get_wrap_width(): number
    popdown(): void
    popup(): void
    popup_for_device(device: Gdk.Device): void
    set_active(index_: number): void
    set_active_id(active_id?: string | null): boolean
    set_active_iter(iter?: TreeIter | null): void
    set_add_tearoffs(add_tearoffs: boolean): void
    set_button_sensitivity(sensitivity: SensitivityType): void
    set_column_span_column(column_span: number): void
    set_entry_text_column(text_column: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_id_column(id_column: number): void
    set_model(model?: TreeModel | null): void
    set_popup_fixed_width(fixed: boolean): void
    set_row_separator_func(func: TreeViewRowSeparatorFunc, destroy?: GLib.DestroyNotify | null): void
    set_row_span_column(row_span: number): void
    set_title(title: string): void
    set_wrap_width(width: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.ComboBox */
    vfunc_changed?(): void
    vfunc_format_entry_text?(path: string): string
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ComboBox */
    connect(sigName: "changed", callback: ((obj: ComboBox) => void))
    connect(sigName: "format-entry-text", callback: ((obj: ComboBox, path: string) => string))
    connect(sigName: "move-active", callback: ((obj: ComboBox, scroll_type: ScrollType) => void))
    connect(sigName: "popdown", callback: ((obj: ComboBox) => boolean))
    connect(sigName: "popup", callback: ((obj: ComboBox) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: ComboBox) => void))
    connect(sigName: "remove-widget", callback: ((obj: ComboBox) => void))
    connect(sigName: "notify::active", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active-id", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::add-tearoffs", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::button-sensitivity", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-span-column", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::entry-text-column", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-frame", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id-column", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-fixed-width", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-shown", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-span-column", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tearoff-title", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-width", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: ComboBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ComboBox_ConstructProps): ComboBox
    constructor (config?: ComboBox_ConstructProps)
    static new_with_area(area: CellArea): ComboBox
    static new_with_area_and_entry(area: CellArea): ComboBox
    static new_with_entry(): ComboBox
    static new_with_model(model: TreeModel): ComboBox
    static new_with_model_and_entry(model: TreeModel): ComboBox
}
export interface ComboBoxAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ComboBoxAccessible extends ContainerAccessible {
    /* Fields of Gtk.ComboBoxAccessible */
    parent: any
    priv:ComboBoxAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ComboBoxAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: ComboBoxAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ComboBoxAccessible_ConstructProps): ComboBoxAccessible
    constructor (config?: ComboBoxAccessible_ConstructProps)
}
export interface ComboBoxText_ConstructProps extends ComboBox_ConstructProps {
}
export class ComboBoxText extends Widget {
    /* Properties of Gtk.ComboBox */
    active:number
    active_id:string
    add_tearoffs:boolean
    button_sensitivity:SensitivityType
    column_span_column:number
    entry_text_column:number
    has_frame:boolean
    id_column:number
    model:TreeModel
    popup_fixed_width:boolean
    readonly popup_shown:boolean
    row_span_column:number
    tearoff_title:string
    wrap_width:number
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Fields of Gtk.ComboBoxText */
    /* Fields of Gtk.ComboBox */
    parent_instance:Bin
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Methods of Gtk.ComboBoxText */
    append(id: string | null, text: string): void
    append_text(text: string): void
    get_active_text(): string
    insert(position: number, id: string | null, text: string): void
    insert_text(position: number, text: string): void
    prepend(id: string | null, text: string): void
    prepend_text(text: string): void
    remove(position: number): void
    remove_all(): void
    /* Methods of Gtk.ComboBox */
    get_active(): number
    get_active_id(): string | null
    get_active_iter(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_add_tearoffs(): boolean
    get_button_sensitivity(): SensitivityType
    get_column_span_column(): number
    get_entry_text_column(): number
    get_focus_on_click(): boolean
    get_has_entry(): boolean
    get_id_column(): number
    get_model(): TreeModel
    get_popup_accessible(): Atk.Object
    get_popup_fixed_width(): boolean
    get_row_span_column(): number
    get_title(): string
    get_wrap_width(): number
    popdown(): void
    popup(): void
    popup_for_device(device: Gdk.Device): void
    set_active(index_: number): void
    set_active_id(active_id?: string | null): boolean
    set_active_iter(iter?: TreeIter | null): void
    set_add_tearoffs(add_tearoffs: boolean): void
    set_button_sensitivity(sensitivity: SensitivityType): void
    set_column_span_column(column_span: number): void
    set_entry_text_column(text_column: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_id_column(id_column: number): void
    set_model(model?: TreeModel | null): void
    set_popup_fixed_width(fixed: boolean): void
    set_row_separator_func(func: TreeViewRowSeparatorFunc, destroy?: GLib.DestroyNotify | null): void
    set_row_span_column(row_span: number): void
    set_title(title: string): void
    set_wrap_width(width: number): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.ComboBox */
    vfunc_changed?(): void
    vfunc_format_entry_text?(path: string): string
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ComboBox */
    connect(sigName: "changed", callback: ((obj: ComboBoxText) => void))
    connect(sigName: "format-entry-text", callback: ((obj: ComboBoxText, path: string) => string))
    connect(sigName: "move-active", callback: ((obj: ComboBoxText, scroll_type: ScrollType) => void))
    connect(sigName: "popdown", callback: ((obj: ComboBoxText) => boolean))
    connect(sigName: "popup", callback: ((obj: ComboBoxText) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: ComboBoxText, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: ComboBoxText) => void))
    connect(sigName: "remove", callback: ((obj: ComboBoxText, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: ComboBoxText, object: Widget) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: ComboBoxText) => void))
    connect(sigName: "remove-widget", callback: ((obj: ComboBoxText) => void))
    connect(sigName: "notify::active", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active-id", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::add-tearoffs", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::button-sensitivity", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-span-column", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::entry-text-column", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-frame", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id-column", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-fixed-width", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-shown", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-span-column", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tearoff-title", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-width", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: ComboBoxText, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ComboBoxText_ConstructProps): ComboBoxText
    constructor (config?: ComboBoxText_ConstructProps)
    static new_with_entry(): ComboBoxText
}
export interface Container_ConstructProps extends Widget_ConstructProps {
    border_width?:number
    child?:Widget
    resize_mode?:ResizeMode
}
export class Container extends Widget {
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Fields of Gtk.Container */
    widget:Widget
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Container, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Container) => void))
    connect(sigName: "remove", callback: ((obj: Container, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Container, object: Widget) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Container, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Container, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Container, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Container_ConstructProps): Container
    constructor (config?: Container_ConstructProps)
}
export interface ContainerAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class ContainerAccessible extends WidgetAccessible {
    /* Fields of Gtk.ContainerAccessible */
    parent: any
    priv:ContainerAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ContainerAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ContainerAccessible_ConstructProps): ContainerAccessible
    constructor (config?: ContainerAccessible_ConstructProps)
}
export interface ContainerCellAccessible_ConstructProps extends CellAccessible_ConstructProps {
}
export class ContainerCellAccessible extends CellAccessible {
    /* Fields of Gtk.ContainerCellAccessible */
    parent: any
    priv:ContainerCellAccessiblePrivate
    /* Methods of Gtk.ContainerCellAccessible */
    add_child(child: CellAccessible): void
    get_children(): CellAccessible[]
    remove_child(child: CellAccessible): void
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ContainerCellAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ContainerCellAccessible_ConstructProps): ContainerCellAccessible
    constructor (config?: ContainerCellAccessible_ConstructProps)
}
export interface CssProvider_ConstructProps extends GObject.Object_ConstructProps {
}
export class CssProvider extends GObject.Object {
    /* Fields of Gtk.CssProvider */
    parent_instance:GObject.Object
    priv:CssProviderPrivate
    /* Methods of Gtk.CssProvider */
    load_from_data(data: Gjs.byteArray.ByteArray): boolean
    load_from_file(file: Gio.File): boolean
    load_from_path(path: string): boolean
    load_from_resource(resource_path: string): void
    to_string(): string
    /* Methods of Gtk.StyleProvider */
    get_icon_factory(path: WidgetPath): IconFactory | null
    get_style(path: WidgetPath): StyleProperties | null
    get_style_property(path: WidgetPath, state: StateFlags, pspec: GObject.ParamSpec): [ /* returnType */ boolean, /* value */ any ]
    /* Virtual methods of Gtk.CssProvider */
    vfunc_parsing_error?(section: CssSection, error: GLib.Error): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.CssProvider */
    connect(sigName: "parsing-error", callback: ((obj: CssProvider, section: CssSection, error: GLib.Error) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: CssProvider_ConstructProps): CssProvider
    constructor (config?: CssProvider_ConstructProps)
    static get_default(): CssProvider
    static get_named(name: string, variant?: string | null): CssProvider
}
export interface Dialog_ConstructProps extends Window_ConstructProps {
    use_header_bar?:number
}
export class Dialog extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Dialog */
    /* Properties of Gtk.Window */
    accept_focus:boolean
    application:Application
    attached_to:Widget
    decorated:boolean
    default_height:number
    default_width:number
    deletable:boolean
    destroy_with_parent:boolean
    focus_on_map:boolean
    focus_visible:boolean
    gravity:Gdk.Gravity
    has_resize_grip:boolean
    readonly has_toplevel_focus:boolean
    hide_titlebar_when_maximized:boolean
    icon:GdkPixbuf.Pixbuf
    icon_name:string
    readonly is_active:boolean
    readonly is_maximized:boolean
    mnemonics_visible:boolean
    modal:boolean
    resizable:boolean
    readonly resize_grip_visible:boolean
    role:string
    screen:Gdk.Screen
    skip_pager_hint:boolean
    skip_taskbar_hint:boolean
    startup_id:string
    title:string
    transient_for:Window
    type_hint:Gdk.WindowTypeHint
    urgency_hint:boolean
    window_position:WindowPosition
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.Dialog */
    /* Fields of Gtk.Window */
    bin:Bin
    priv:WindowPrivate
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Dialog */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Widget
    get_action_area(): Widget
    get_content_area(): Box
    get_header_bar(): Widget
    get_response_for_widget(widget: Widget): number
    get_widget_for_response(response_id: number): Widget | null
    response(response_id: number): void
    run(): number
    set_alternative_button_order_from_array(new_order: number[]): void
    set_default_response(response_id: number): void
    set_response_sensitive(response_id: number, setting: boolean): void
    /* Methods of Gtk.Window */
    activate_default(): boolean
    activate_focus(): boolean
    activate_key(event: Gdk.EventKey): boolean
    add_accel_group(accel_group: AccelGroup): void
    add_mnemonic(keyval: number, target: Widget): void
    begin_move_drag(button: number, root_x: number, root_y: number, timestamp: number): void
    begin_resize_drag(edge: Gdk.WindowEdge, button: number, root_x: number, root_y: number, timestamp: number): void
    close(): void
    deiconify(): void
    fullscreen(): void
    fullscreen_on_monitor(screen: Gdk.Screen, monitor: number): void
    get_accept_focus(): boolean
    get_application(): Application | null
    get_attached_to(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_on_map(): boolean
    get_focus_visible(): boolean
    get_gravity(): Gdk.Gravity
    get_group(): WindowGroup
    get_has_resize_grip(): boolean
    get_hide_titlebar_when_maximized(): boolean
    get_icon(): GdkPixbuf.Pixbuf
    get_icon_list(): GdkPixbuf.Pixbuf[]
    get_icon_name(): string | null
    get_mnemonic_modifier(): Gdk.ModifierType
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_opacity(): number
    get_position(): [ /* root_x */ number | null, /* root_y */ number | null ]
    get_resizable(): boolean
    get_resize_grip_area(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_role(): string | null
    get_screen(): Gdk.Screen
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    get_skip_pager_hint(): boolean
    get_skip_taskbar_hint(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    get_type_hint(): Gdk.WindowTypeHint
    get_urgency_hint(): boolean
    get_window_type(): WindowType
    has_group(): boolean
    iconify(): void
    maximize(): void
    mnemonic_activate(keyval: number, modifier: Gdk.ModifierType): boolean
    move(x: number, y: number): void
    parse_geometry(geometry: string): boolean
    present(): void
    present_with_time(timestamp: number): void
    propagate_key_event(event: Gdk.EventKey): boolean
    remove_accel_group(accel_group: AccelGroup): void
    remove_mnemonic(keyval: number, target: Widget): void
    reshow_with_initial_size(): void
    resize(width: number, height: number): void
    resize_grip_is_visible(): boolean
    resize_to_geometry(width: number, height: number): void
    set_accept_focus(setting: boolean): void
    set_application(application?: Application | null): void
    set_attached_to(attach_widget?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default(default_widget?: Widget | null): void
    set_default_geometry(width: number, height: number): void
    set_default_size(width: number, height: number): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_focus(focus?: Widget | null): void
    set_focus_on_map(setting: boolean): void
    set_focus_visible(setting: boolean): void
    set_geometry_hints(geometry_widget: Widget | null, geometry: Gdk.Geometry | null, geom_mask: Gdk.WindowHints): void
    set_gravity(gravity: Gdk.Gravity): void
    set_has_resize_grip(value: boolean): void
    set_has_user_ref_count(setting: boolean): void
    set_hide_titlebar_when_maximized(setting: boolean): void
    set_icon(icon?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_file(filename: string): boolean
    set_icon_list(list: GdkPixbuf.Pixbuf[]): void
    set_icon_name(name?: string | null): void
    set_keep_above(setting: boolean): void
    set_keep_below(setting: boolean): void
    set_mnemonic_modifier(modifier: Gdk.ModifierType): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_opacity(opacity: number): void
    set_position(position: WindowPosition): void
    set_resizable(resizable: boolean): void
    set_role(role: string): void
    set_screen(screen: Gdk.Screen): void
    set_skip_pager_hint(setting: boolean): void
    set_skip_taskbar_hint(setting: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title: string): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    set_type_hint(hint: Gdk.WindowTypeHint): void
    set_urgency_hint(setting: boolean): void
    set_wmclass(wmclass_name: string, wmclass_class: string): void
    stick(): void
    unfullscreen(): void
    unmaximize(): void
    unstick(): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Dialog */
    connect(sigName: "close", callback: ((obj: Dialog) => void))
    connect(sigName: "response", callback: ((obj: Dialog, response_id: number) => void))
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: ((obj: Dialog) => void))
    connect(sigName: "activate-focus", callback: ((obj: Dialog) => void))
    connect(sigName: "enable-debugging", callback: ((obj: Dialog, toggle: boolean) => boolean))
    connect(sigName: "keys-changed", callback: ((obj: Dialog) => void))
    connect(sigName: "set-focus", callback: ((obj: Dialog, object: Widget) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Dialog, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Dialog) => void))
    connect(sigName: "remove", callback: ((obj: Dialog, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Dialog, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Dialog) => void))
    connect(sigName: "button-press-event", callback: ((obj: Dialog, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Dialog, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Dialog, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Dialog, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Dialog) => void))
    connect(sigName: "configure-event", callback: ((obj: Dialog, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Dialog, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Dialog, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Dialog) => void))
    connect(sigName: "destroy-event", callback: ((obj: Dialog, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Dialog, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Dialog, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Dialog, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Dialog, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Dialog, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Dialog, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Dialog, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Dialog, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Dialog, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Dialog, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Dialog, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Dialog, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Dialog, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Dialog, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Dialog, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Dialog, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Dialog, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Dialog, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Dialog) => void))
    connect(sigName: "grab-notify", callback: ((obj: Dialog, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Dialog) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Dialog, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Dialog, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Dialog, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Dialog, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Dialog, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Dialog) => void))
    connect(sigName: "map-event", callback: ((obj: Dialog, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Dialog, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Dialog, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Dialog, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Dialog, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Dialog) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Dialog, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Dialog, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Dialog, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Dialog, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Dialog) => void))
    connect(sigName: "screen-changed", callback: ((obj: Dialog, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Dialog, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Dialog, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Dialog, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Dialog, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Dialog, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Dialog, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Dialog) => void))
    connect(sigName: "show-help", callback: ((obj: Dialog, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Dialog, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Dialog, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Dialog, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Dialog, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Dialog) => void))
    connect(sigName: "touch-event", callback: ((obj: Dialog, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Dialog) => void))
    connect(sigName: "unmap-event", callback: ((obj: Dialog, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Dialog) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Dialog, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Dialog, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::accept-focus", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::application", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attached-to", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decorated", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-height", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-width", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::deletable", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::destroy-with-parent", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-map", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-visible", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gravity", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-resize-grip", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-toplevel-focus", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hide-titlebar-when-maximized", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-active", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-maximized", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonics-visible", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modal", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-grip-visible", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::role", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-pager-hint", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-taskbar-hint", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::startup-id", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transient-for", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type-hint", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::urgency-hint", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-position", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Dialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Dialog_ConstructProps): Dialog
    constructor (config?: Dialog_ConstructProps)
}
export interface DrawingArea_ConstructProps extends Widget_ConstructProps {
}
export class DrawingArea extends Widget {
    /* Fields of Gtk.DrawingArea */
    widget:Widget
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: DrawingArea_ConstructProps): DrawingArea
    constructor (config?: DrawingArea_ConstructProps)
}
export interface Entry_ConstructProps extends Widget_ConstructProps {
    activates_default?:boolean
    attributes?:Pango.AttrList
    buffer?:EntryBuffer
    caps_lock_warning?:boolean
    completion?:EntryCompletion
    editable?:boolean
    has_frame?:boolean
    im_module?:string
    inner_border?:Border
    input_hints?:InputHints
    input_purpose?:InputPurpose
    invisible_char?:number
    invisible_char_set?:boolean
    max_length?:number
    max_width_chars?:number
    overwrite_mode?:boolean
    placeholder_text?:string
    populate_all?:boolean
    primary_icon_activatable?:boolean
    primary_icon_gicon?:Gio.Icon
    primary_icon_name?:string
    primary_icon_pixbuf?:GdkPixbuf.Pixbuf
    primary_icon_sensitive?:boolean
    primary_icon_stock?:string
    primary_icon_tooltip_markup?:string
    primary_icon_tooltip_text?:string
    progress_fraction?:number
    progress_pulse_step?:number
    secondary_icon_activatable?:boolean
    secondary_icon_gicon?:Gio.Icon
    secondary_icon_name?:string
    secondary_icon_pixbuf?:GdkPixbuf.Pixbuf
    secondary_icon_sensitive?:boolean
    secondary_icon_stock?:string
    secondary_icon_tooltip_markup?:string
    secondary_icon_tooltip_text?:string
    shadow_type?:ShadowType
    show_emoji_icon?:boolean
    tabs?:Pango.TabArray
    text?:string
    truncate_multiline?:boolean
    visibility?:boolean
    width_chars?:number
    xalign?:number
}
export class Entry extends Widget {
    /* Properties of Gtk.Entry */
    activates_default:boolean
    attributes:Pango.AttrList
    buffer:EntryBuffer
    caps_lock_warning:boolean
    completion:EntryCompletion
    readonly cursor_position:number
    editable:boolean
    has_frame:boolean
    im_module:string
    inner_border:Border
    input_hints:InputHints
    input_purpose:InputPurpose
    invisible_char:number
    invisible_char_set:boolean
    max_length:number
    max_width_chars:number
    overwrite_mode:boolean
    placeholder_text:string
    populate_all:boolean
    primary_icon_activatable:boolean
    primary_icon_gicon:Gio.Icon
    primary_icon_name:string
    primary_icon_pixbuf:GdkPixbuf.Pixbuf
    primary_icon_sensitive:boolean
    primary_icon_stock:string
    readonly primary_icon_storage_type:ImageType
    primary_icon_tooltip_markup:string
    primary_icon_tooltip_text:string
    progress_fraction:number
    progress_pulse_step:number
    readonly scroll_offset:number
    secondary_icon_activatable:boolean
    secondary_icon_gicon:Gio.Icon
    secondary_icon_name:string
    secondary_icon_pixbuf:GdkPixbuf.Pixbuf
    secondary_icon_sensitive:boolean
    secondary_icon_stock:string
    readonly secondary_icon_storage_type:ImageType
    secondary_icon_tooltip_markup:string
    secondary_icon_tooltip_text:string
    readonly selection_bound:number
    shadow_type:ShadowType
    show_emoji_icon:boolean
    tabs:Pango.TabArray
    text:string
    readonly text_length:number
    truncate_multiline:boolean
    visibility:boolean
    width_chars:number
    xalign:number
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Fields of Gtk.Entry */
    /* Methods of Gtk.Entry */
    get_activates_default(): boolean
    get_alignment(): number
    get_attributes(): Pango.AttrList | null
    get_buffer(): EntryBuffer
    get_completion(): EntryCompletion
    get_current_icon_drag_source(): number
    get_cursor_hadjustment(): Adjustment | null
    get_has_frame(): boolean
    get_icon_activatable(icon_pos: EntryIconPosition): boolean
    get_icon_area(icon_pos: EntryIconPosition): /* icon_area */ Gdk.Rectangle
    get_icon_at_pos(x: number, y: number): number
    get_icon_gicon(icon_pos: EntryIconPosition): Gio.Icon | null
    get_icon_name(icon_pos: EntryIconPosition): string | null
    get_icon_pixbuf(icon_pos: EntryIconPosition): GdkPixbuf.Pixbuf | null
    get_icon_sensitive(icon_pos: EntryIconPosition): boolean
    get_icon_stock(icon_pos: EntryIconPosition): string
    get_icon_storage_type(icon_pos: EntryIconPosition): ImageType
    get_icon_tooltip_markup(icon_pos: EntryIconPosition): string | null
    get_icon_tooltip_text(icon_pos: EntryIconPosition): string | null
    get_inner_border(): Border | null
    get_input_hints(): InputHints
    get_input_purpose(): InputPurpose
    get_invisible_char(): number
    get_layout(): Pango.Layout
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_max_length(): number
    get_max_width_chars(): number
    get_overwrite_mode(): boolean
    get_placeholder_text(): string
    get_progress_fraction(): number
    get_progress_pulse_step(): number
    get_tabs(): Pango.TabArray | null
    get_text(): string
    get_text_area(): /* text_area */ Gdk.Rectangle
    get_text_length(): number
    get_visibility(): boolean
    get_width_chars(): number
    grab_focus_without_selecting(): void
    im_context_filter_keypress(event: Gdk.EventKey): boolean
    layout_index_to_text_index(layout_index: number): number
    progress_pulse(): void
    reset_im_context(): void
    set_activates_default(setting: boolean): void
    set_alignment(xalign: number): void
    set_attributes(attrs: Pango.AttrList): void
    set_buffer(buffer: EntryBuffer): void
    set_completion(completion?: EntryCompletion | null): void
    set_cursor_hadjustment(adjustment?: Adjustment | null): void
    set_has_frame(setting: boolean): void
    set_icon_activatable(icon_pos: EntryIconPosition, activatable: boolean): void
    set_icon_drag_source(icon_pos: EntryIconPosition, target_list: TargetList, actions: Gdk.DragAction): void
    set_icon_from_gicon(icon_pos: EntryIconPosition, icon?: Gio.Icon | null): void
    set_icon_from_icon_name(icon_pos: EntryIconPosition, icon_name?: string | null): void
    set_icon_from_pixbuf(icon_pos: EntryIconPosition, pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_stock(icon_pos: EntryIconPosition, stock_id?: string | null): void
    set_icon_sensitive(icon_pos: EntryIconPosition, sensitive: boolean): void
    set_icon_tooltip_markup(icon_pos: EntryIconPosition, tooltip?: string | null): void
    set_icon_tooltip_text(icon_pos: EntryIconPosition, tooltip?: string | null): void
    set_inner_border(border?: Border | null): void
    set_input_hints(hints: InputHints): void
    set_input_purpose(purpose: InputPurpose): void
    set_invisible_char(ch: number): void
    set_max_length(max: number): void
    set_max_width_chars(n_chars: number): void
    set_overwrite_mode(overwrite: boolean): void
    set_placeholder_text(text?: string | null): void
    set_progress_fraction(fraction: number): void
    set_progress_pulse_step(fraction: number): void
    set_tabs(tabs: Pango.TabArray): void
    set_text(text: string): void
    set_visibility(visible: boolean): void
    set_width_chars(n_chars: number): void
    text_index_to_layout_index(text_index: number): number
    unset_invisible_char(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Editable */
    copy_clipboard(): void
    cut_clipboard(): void
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    get_chars(start_pos: number, end_pos: number): string
    get_editable(): boolean
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    insert_text(new_text: string, new_text_length: number, position: number): void
    paste_clipboard(): void
    select_region(start_pos: number, end_pos: number): void
    set_editable(is_editable: boolean): void
    set_position(position: number): void
    /* Virtual methods of Gtk.Entry */
    vfunc_activate?(): void
    vfunc_backspace?(): void
    vfunc_copy_clipboard?(): void
    vfunc_cut_clipboard?(): void
    vfunc_delete_from_cursor?(type: DeleteType, count: number): void
    vfunc_get_frame_size?(x: number, y: number, width: number, height: number): void
    vfunc_get_text_area_size?(x: number, y: number, width: number, height: number): void
    vfunc_insert_at_cursor?(str: string): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_paste_clipboard?(): void
    vfunc_populate_popup?(popup: Widget): void
    vfunc_toggle_overwrite?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Entry */
    connect(sigName: "activate", callback: ((obj: Entry) => void))
    connect(sigName: "backspace", callback: ((obj: Entry) => void))
    connect(sigName: "copy-clipboard", callback: ((obj: Entry) => void))
    connect(sigName: "cut-clipboard", callback: ((obj: Entry) => void))
    connect(sigName: "delete-from-cursor", callback: ((obj: Entry, type: DeleteType, count: number) => void))
    connect(sigName: "icon-press", callback: ((obj: Entry, icon_pos: EntryIconPosition, event: Gdk.EventButton) => void))
    connect(sigName: "icon-release", callback: ((obj: Entry, icon_pos: EntryIconPosition, event: Gdk.EventButton) => void))
    connect(sigName: "insert-at-cursor", callback: ((obj: Entry, string: string) => void))
    connect(sigName: "move-cursor", callback: ((obj: Entry, step: MovementStep, count: number, extend_selection: boolean) => void))
    connect(sigName: "paste-clipboard", callback: ((obj: Entry) => void))
    connect(sigName: "populate-popup", callback: ((obj: Entry, widget: Widget) => void))
    connect(sigName: "preedit-changed", callback: ((obj: Entry, preedit: string) => void))
    connect(sigName: "toggle-overwrite", callback: ((obj: Entry) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: Entry) => void))
    connect(sigName: "remove-widget", callback: ((obj: Entry) => void))
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: ((obj: Entry) => void))
    connect(sigName: "delete-text", callback: ((obj: Entry, start_pos: number, end_pos: number) => void))
    connect(sigName: "insert-text", callback: ((obj: Entry, new_text: string, new_text_length: number, position: number) => void))
    connect(sigName: "notify::activates-default", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffer", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::caps-lock-warning", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::completion", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursor-position", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-frame", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::im-module", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-border", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-hints", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-purpose", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::invisible-char", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::invisible-char-set", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-length", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-width-chars", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::overwrite-mode", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::placeholder-text", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::populate-all", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-activatable", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-gicon", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-name", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-pixbuf", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-sensitive", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-stock", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-storage-type", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-tooltip-markup", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::primary-icon-tooltip-text", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::progress-fraction", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::progress-pulse-step", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-offset", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-activatable", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-gicon", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-name", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-pixbuf", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-sensitive", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-stock", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-storage-type", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-tooltip-markup", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-icon-tooltip-text", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-bound", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shadow-type", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-emoji-icon", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tabs", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-length", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::truncate-multiline", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visibility", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-chars", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: Entry, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Entry_ConstructProps): Entry
    constructor (config?: Entry_ConstructProps)
    static new_with_buffer(buffer: EntryBuffer): Entry
}
export interface EntryAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class EntryAccessible extends WidgetAccessible {
    /* Fields of Gtk.EntryAccessible */
    parent: any
    priv:EntryAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.EditableText */
    copy_text(start_pos: number, end_pos: number): void
    cut_text(start_pos: number, end_pos: number): void
    delete_text(start_pos: number, end_pos: number): void
    insert_text(string: string, length: number, position: number): void
    paste_text(position: number): void
    set_run_attributes(attrib_set: Atk.AttributeSet, start_offset: number, end_offset: number): boolean
    set_text_contents(string: string): void
    /* Methods of Atk.Text */
    add_selection(start_offset: number, end_offset: number): boolean
    get_bounded_ranges(rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType): Atk.TextRange[]
    get_caret_offset(): number
    get_character_at_offset(offset: number): number
    get_character_count(): number
    get_character_extents(offset: number, coords: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_default_attributes(): Atk.AttributeSet
    get_n_selections(): number
    get_offset_at_point(x: number, y: number, coords: Atk.CoordType): number
    get_range_extents(start_offset: number, end_offset: number, coord_type: Atk.CoordType): /* rect */ Atk.TextRectangle
    get_run_attributes(offset: number): [ /* returnType */ Atk.AttributeSet, /* start_offset */ number, /* end_offset */ number ]
    get_selection(selection_num: number): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_string_at_offset(offset: number, granularity: Atk.TextGranularity): [ /* returnType */ string | null, /* start_offset */ number, /* end_offset */ number ]
    get_text(start_offset: number, end_offset: number): string
    get_text_after_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_at_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_before_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    remove_selection(selection_num: number): boolean
    set_caret_offset(offset: number): boolean
    set_selection(selection_num: number, start_offset: number, end_offset: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: EntryAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Text */
    connect(sigName: "text-attributes-changed", callback: ((obj: EntryAccessible) => void))
    connect(sigName: "text-caret-moved", callback: ((obj: EntryAccessible, arg1: number) => void))
    connect(sigName: "text-changed", callback: ((obj: EntryAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "text-insert", callback: ((obj: EntryAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-remove", callback: ((obj: EntryAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-selection-changed", callback: ((obj: EntryAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EntryAccessible_ConstructProps): EntryAccessible
    constructor (config?: EntryAccessible_ConstructProps)
}
export interface EntryBuffer_ConstructProps extends GObject.Object_ConstructProps {
    max_length?:number
    text?:string
}
export class EntryBuffer extends GObject.Object {
    /* Properties of Gtk.EntryBuffer */
    readonly length:number
    max_length:number
    text:string
    /* Fields of Gtk.EntryBuffer */
    parent_instance:GObject.Object
    /* Methods of Gtk.EntryBuffer */
    delete_text(position: number, n_chars: number): number
    emit_deleted_text(position: number, n_chars: number): void
    emit_inserted_text(position: number, chars: string, n_chars: number): void
    get_bytes(): number
    get_length(): number
    get_max_length(): number
    get_text(): string
    insert_text(position: number, chars: string, n_chars: number): number
    set_max_length(max_length: number): void
    set_text(chars: string, n_chars: number): void
    /* Virtual methods of Gtk.EntryBuffer */
    vfunc_delete_text?(position: number, n_chars: number): number
    vfunc_deleted_text?(position: number, n_chars: number): void
    vfunc_get_length?(): number
    vfunc_get_text?(n_bytes: number): string
    vfunc_insert_text?(position: number, chars: string, n_chars: number): number
    vfunc_inserted_text?(position: number, chars: string, n_chars: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EntryBuffer */
    connect(sigName: "deleted-text", callback: ((obj: EntryBuffer, position: number, n_chars: number) => void))
    connect(sigName: "inserted-text", callback: ((obj: EntryBuffer, position: number, chars: string, n_chars: number) => void))
    connect(sigName: "notify::length", callback: ((obj: EntryBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-length", callback: ((obj: EntryBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: EntryBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EntryBuffer_ConstructProps): EntryBuffer
    constructor (config?: EntryBuffer_ConstructProps)
}
export interface EntryCompletion_ConstructProps extends GObject.Object_ConstructProps {
    cell_area?:CellArea
    inline_completion?:boolean
    inline_selection?:boolean
    minimum_key_length?:number
    model?:TreeModel
    popup_completion?:boolean
    popup_set_width?:boolean
    popup_single_match?:boolean
    text_column?:number
}
export class EntryCompletion extends GObject.Object {
    /* Properties of Gtk.EntryCompletion */
    inline_completion:boolean
    inline_selection:boolean
    minimum_key_length:number
    model:TreeModel
    popup_completion:boolean
    popup_set_width:boolean
    popup_single_match:boolean
    text_column:number
    /* Fields of Gtk.EntryCompletion */
    parent_instance:GObject.Object
    /* Methods of Gtk.EntryCompletion */
    complete(): void
    compute_prefix(key: string): string | null
    delete_action(index_: number): void
    get_completion_prefix(): string
    get_entry(): Widget
    get_inline_completion(): boolean
    get_inline_selection(): boolean
    get_minimum_key_length(): number
    get_model(): TreeModel | null
    get_popup_completion(): boolean
    get_popup_set_width(): boolean
    get_popup_single_match(): boolean
    get_text_column(): number
    insert_action_markup(index_: number, markup: string): void
    insert_action_text(index_: number, text: string): void
    insert_prefix(): void
    set_inline_completion(inline_completion: boolean): void
    set_inline_selection(inline_selection: boolean): void
    set_match_func(func: EntryCompletionMatchFunc, func_notify: GLib.DestroyNotify): void
    set_minimum_key_length(length: number): void
    set_model(model?: TreeModel | null): void
    set_popup_completion(popup_completion: boolean): void
    set_popup_set_width(popup_set_width: boolean): void
    set_popup_single_match(popup_single_match: boolean): void
    set_text_column(column: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Virtual methods of Gtk.EntryCompletion */
    vfunc_action_activated?(index_: number): void
    vfunc_cursor_on_match?(model: TreeModel, iter: TreeIter): boolean
    vfunc_insert_prefix?(prefix: string): boolean
    vfunc_match_selected?(model: TreeModel, iter: TreeIter): boolean
    vfunc_no_matches?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.EntryCompletion */
    connect(sigName: "action-activated", callback: ((obj: EntryCompletion, index: number) => void))
    connect(sigName: "cursor-on-match", callback: ((obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean))
    connect(sigName: "insert-prefix", callback: ((obj: EntryCompletion, prefix: string) => boolean))
    connect(sigName: "match-selected", callback: ((obj: EntryCompletion, model: TreeModel, iter: TreeIter) => boolean))
    connect(sigName: "no-matches", callback: ((obj: EntryCompletion) => void))
    connect(sigName: "notify::inline-completion", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inline-selection", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::minimum-key-length", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-completion", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-set-width", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup-single-match", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-column", callback: ((obj: EntryCompletion, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EntryCompletion_ConstructProps): EntryCompletion
    constructor (config?: EntryCompletion_ConstructProps)
    static new_with_area(area: CellArea): EntryCompletion
}
export interface EntryIconAccessible_ConstructProps extends Atk.Object_ConstructProps {
}
export class EntryIconAccessible extends Atk.Object {
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: EntryIconAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EntryIconAccessible_ConstructProps): EntryIconAccessible
    constructor (config?: EntryIconAccessible_ConstructProps)
}
export interface EventBox_ConstructProps extends Bin_ConstructProps {
    above_child?:boolean
    visible_window?:boolean
}
export class EventBox extends Bin {
    /* Properties of Gtk.EventBox */
    above_child:boolean
    visible_window:boolean
    /* Fields of Gtk.EventBox */
    bin:Bin
    /* Methods of Gtk.EventBox */
    get_above_child(): boolean
    get_visible_window(): boolean
    set_above_child(above_child: boolean): void
    set_visible_window(visible_window: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::above-child", callback: ((obj: EventBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-window", callback: ((obj: EventBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EventBox_ConstructProps): EventBox
    constructor (config?: EventBox_ConstructProps)
}
export interface EventController_ConstructProps extends GObject.Object_ConstructProps {
    propagation_phase?:PropagationPhase
    widget?:Widget
}
export class EventController extends GObject.Object {
    /* Properties of Gtk.EventController */
    propagation_phase:PropagationPhase
    /* Methods of Gtk.EventController */
    get_propagation_phase(): PropagationPhase
    get_widget(): Widget
    handle_event(event: Gdk.Event): boolean
    reset(): void
    set_propagation_phase(phase: PropagationPhase): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::propagation-phase", callback: ((obj: EventController, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: EventController_ConstructProps): EventController
    constructor (config?: EventController_ConstructProps)
}
export interface Expander_ConstructProps extends Bin_ConstructProps {
    expanded?:boolean
    label?:string
    label_fill?:boolean
    label_widget?:Widget
    resize_toplevel?:boolean
    spacing?:number
    use_markup?:boolean
    use_underline?:boolean
}
export class Expander extends Bin {
    /* Properties of Gtk.Expander */
    expanded:boolean
    label:string
    label_fill:boolean
    label_widget:Widget
    resize_toplevel:boolean
    spacing:number
    use_markup:boolean
    use_underline:boolean
    /* Fields of Gtk.Expander */
    bin:Bin
    priv:ExpanderPrivate
    /* Methods of Gtk.Expander */
    get_expanded(): boolean
    get_label(): string | null
    get_label_fill(): boolean
    get_label_widget(): Widget | null
    get_resize_toplevel(): boolean
    get_spacing(): number
    get_use_markup(): boolean
    get_use_underline(): boolean
    set_expanded(expanded: boolean): void
    set_label(label?: string | null): void
    set_label_fill(label_fill: boolean): void
    set_label_widget(label_widget?: Widget | null): void
    set_resize_toplevel(resize_toplevel: boolean): void
    set_spacing(spacing: number): void
    set_use_markup(use_markup: boolean): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Expander */
    vfunc_activate?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Expander */
    connect(sigName: "activate", callback: ((obj: Expander) => void))
    connect(sigName: "notify::expanded", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-fill", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-widget", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-toplevel", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-markup", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: Expander, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Expander_ConstructProps): Expander
    constructor (config?: Expander_ConstructProps)
    static new_with_mnemonic(label?: string | null): Expander
}
export interface ExpanderAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ExpanderAccessible extends ContainerAccessible {
    /* Fields of Gtk.ExpanderAccessible */
    parent: any
    priv:ExpanderAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ExpanderAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ExpanderAccessible_ConstructProps): ExpanderAccessible
    constructor (config?: ExpanderAccessible_ConstructProps)
}
export interface FileChooserButton_ConstructProps extends Box_ConstructProps {
    dialog?:FileChooser
    title?:string
    width_chars?:number
}
export class FileChooserButton extends Box {
    /* Properties of Gtk.FileChooserButton */
    title:string
    width_chars:number
    /* Properties of Gtk.FileChooser */
    action:FileChooserAction
    create_folders:boolean
    do_overwrite_confirmation:boolean
    extra_widget:Widget
    filter:FileFilter
    local_only:boolean
    preview_widget:Widget
    preview_widget_active:boolean
    select_multiple:boolean
    show_hidden:boolean
    use_preview_label:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.FileChooserButton */
    parent: any
    /* Methods of Gtk.FileChooserButton */
    get_focus_on_click(): boolean
    get_title(): string
    get_width_chars(): number
    set_focus_on_click(focus_on_click: boolean): void
    set_title(title: string): void
    set_width_chars(n_chars: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options: string, option_labels: string): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: string): boolean
    add_shortcut_folder_uri(uri: string): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): string
    get_current_folder_file(): Gio.File
    get_current_folder_uri(): string | null
    get_current_name(): string
    get_do_overwrite_confirmation(): boolean
    get_extra_widget(): Widget | null
    get_file(): Gio.File
    get_filename(): string
    get_filenames(): GLib.SList
    get_files(): GLib.SList
    get_filter(): FileFilter | null
    get_local_only(): boolean
    get_preview_file(): Gio.File | null
    get_preview_filename(): string
    get_preview_uri(): string | null
    get_preview_widget(): Widget | null
    get_preview_widget_active(): boolean
    get_select_multiple(): boolean
    get_show_hidden(): boolean
    get_uri(): string | null
    get_uris(): GLib.SList
    get_use_preview_label(): boolean
    list_filters(): GLib.SList
    list_shortcut_folder_uris(): GLib.SList | null
    list_shortcut_folders(): GLib.SList | null
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: string): boolean
    remove_shortcut_folder_uri(uri: string): boolean
    select_all(): void
    select_file(file: Gio.File): boolean
    select_filename(filename: string): boolean
    select_uri(uri: string): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(filename: string): boolean
    set_current_folder_file(file: Gio.File): boolean
    set_current_folder_uri(uri: string): boolean
    set_current_name(name: string): void
    set_do_overwrite_confirmation(do_overwrite_confirmation: boolean): void
    set_extra_widget(extra_widget: Widget): void
    set_file(file: Gio.File): boolean
    set_filename(filename: string): boolean
    set_filter(filter: FileFilter): void
    set_local_only(local_only: boolean): void
    set_preview_widget(preview_widget: Widget): void
    set_preview_widget_active(active: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_hidden(show_hidden: boolean): void
    set_uri(uri: string): boolean
    set_use_preview_label(use_label: boolean): void
    unselect_all(): void
    unselect_file(file: Gio.File): void
    unselect_filename(filename: string): void
    unselect_uri(uri: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.FileChooserButton */
    vfunc_file_set?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FileChooserButton */
    connect(sigName: "file-set", callback: ((obj: FileChooserButton) => void))
    /* Signals of Gtk.FileChooser */
    connect(sigName: "confirm-overwrite", callback: ((obj: FileChooserButton) => FileChooserConfirmation))
    connect(sigName: "current-folder-changed", callback: ((obj: FileChooserButton) => void))
    connect(sigName: "file-activated", callback: ((obj: FileChooserButton) => void))
    connect(sigName: "selection-changed", callback: ((obj: FileChooserButton) => void))
    connect(sigName: "update-preview", callback: ((obj: FileChooserButton) => void))
    connect(sigName: "notify::title", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-chars", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::create-folders", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::do-overwrite-confirmation", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extra-widget", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget-active", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-hidden", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-preview-label", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: FileChooserButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FileChooserButton_ConstructProps): FileChooserButton
    constructor (config?: FileChooserButton_ConstructProps)
    static new_with_dialog(dialog: Dialog): FileChooserButton
}
export interface FileChooserDialog_ConstructProps extends Dialog_ConstructProps {
}
export class FileChooserDialog extends Dialog {
    /* Properties of Gtk.FileChooser */
    action:FileChooserAction
    create_folders:boolean
    do_overwrite_confirmation:boolean
    extra_widget:Widget
    filter:FileFilter
    local_only:boolean
    preview_widget:Widget
    preview_widget_active:boolean
    select_multiple:boolean
    show_hidden:boolean
    use_preview_label:boolean
    /* Fields of Gtk.FileChooserDialog */
    parent_instance:Dialog
    priv:FileChooserDialogPrivate
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options: string, option_labels: string): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: string): boolean
    add_shortcut_folder_uri(uri: string): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): string
    get_current_folder_file(): Gio.File
    get_current_folder_uri(): string | null
    get_current_name(): string
    get_do_overwrite_confirmation(): boolean
    get_extra_widget(): Widget | null
    get_file(): Gio.File
    get_filename(): string
    get_filenames(): GLib.SList
    get_files(): GLib.SList
    get_filter(): FileFilter | null
    get_local_only(): boolean
    get_preview_file(): Gio.File | null
    get_preview_filename(): string
    get_preview_uri(): string | null
    get_preview_widget(): Widget | null
    get_preview_widget_active(): boolean
    get_select_multiple(): boolean
    get_show_hidden(): boolean
    get_uri(): string | null
    get_uris(): GLib.SList
    get_use_preview_label(): boolean
    list_filters(): GLib.SList
    list_shortcut_folder_uris(): GLib.SList | null
    list_shortcut_folders(): GLib.SList | null
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: string): boolean
    remove_shortcut_folder_uri(uri: string): boolean
    select_all(): void
    select_file(file: Gio.File): boolean
    select_filename(filename: string): boolean
    select_uri(uri: string): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(filename: string): boolean
    set_current_folder_file(file: Gio.File): boolean
    set_current_folder_uri(uri: string): boolean
    set_current_name(name: string): void
    set_do_overwrite_confirmation(do_overwrite_confirmation: boolean): void
    set_extra_widget(extra_widget: Widget): void
    set_file(file: Gio.File): boolean
    set_filename(filename: string): boolean
    set_filter(filter: FileFilter): void
    set_local_only(local_only: boolean): void
    set_preview_widget(preview_widget: Widget): void
    set_preview_widget_active(active: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_hidden(show_hidden: boolean): void
    set_uri(uri: string): boolean
    set_use_preview_label(use_label: boolean): void
    unselect_all(): void
    unselect_file(file: Gio.File): void
    unselect_filename(filename: string): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FileChooser */
    connect(sigName: "confirm-overwrite", callback: ((obj: FileChooserDialog) => FileChooserConfirmation))
    connect(sigName: "current-folder-changed", callback: ((obj: FileChooserDialog) => void))
    connect(sigName: "file-activated", callback: ((obj: FileChooserDialog) => void))
    connect(sigName: "selection-changed", callback: ((obj: FileChooserDialog) => void))
    connect(sigName: "update-preview", callback: ((obj: FileChooserDialog) => void))
    connect(sigName: "notify::action", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::create-folders", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::do-overwrite-confirmation", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extra-widget", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget-active", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-hidden", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-preview-label", callback: ((obj: FileChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FileChooserDialog_ConstructProps): FileChooserDialog
    constructor (config?: FileChooserDialog_ConstructProps)
}
export interface FileChooserNative_ConstructProps extends NativeDialog_ConstructProps {
    accept_label?:string
    cancel_label?:string
}
export class FileChooserNative extends NativeDialog {
    /* Properties of Gtk.FileChooserNative */
    accept_label:string
    cancel_label:string
    /* Properties of Gtk.FileChooser */
    action:FileChooserAction
    create_folders:boolean
    do_overwrite_confirmation:boolean
    extra_widget:Widget
    filter:FileFilter
    local_only:boolean
    preview_widget:Widget
    preview_widget_active:boolean
    select_multiple:boolean
    show_hidden:boolean
    use_preview_label:boolean
    /* Methods of Gtk.FileChooserNative */
    get_accept_label(): string | null
    get_cancel_label(): string | null
    set_accept_label(accept_label?: string | null): void
    set_cancel_label(cancel_label?: string | null): void
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options: string, option_labels: string): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: string): boolean
    add_shortcut_folder_uri(uri: string): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): string
    get_current_folder_file(): Gio.File
    get_current_folder_uri(): string | null
    get_current_name(): string
    get_do_overwrite_confirmation(): boolean
    get_extra_widget(): Widget | null
    get_file(): Gio.File
    get_filename(): string
    get_filenames(): GLib.SList
    get_files(): GLib.SList
    get_filter(): FileFilter | null
    get_local_only(): boolean
    get_preview_file(): Gio.File | null
    get_preview_filename(): string
    get_preview_uri(): string | null
    get_preview_widget(): Widget | null
    get_preview_widget_active(): boolean
    get_select_multiple(): boolean
    get_show_hidden(): boolean
    get_uri(): string | null
    get_uris(): GLib.SList
    get_use_preview_label(): boolean
    list_filters(): GLib.SList
    list_shortcut_folder_uris(): GLib.SList | null
    list_shortcut_folders(): GLib.SList | null
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: string): boolean
    remove_shortcut_folder_uri(uri: string): boolean
    select_all(): void
    select_file(file: Gio.File): boolean
    select_filename(filename: string): boolean
    select_uri(uri: string): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(filename: string): boolean
    set_current_folder_file(file: Gio.File): boolean
    set_current_folder_uri(uri: string): boolean
    set_current_name(name: string): void
    set_do_overwrite_confirmation(do_overwrite_confirmation: boolean): void
    set_extra_widget(extra_widget: Widget): void
    set_file(file: Gio.File): boolean
    set_filename(filename: string): boolean
    set_filter(filter: FileFilter): void
    set_local_only(local_only: boolean): void
    set_preview_widget(preview_widget: Widget): void
    set_preview_widget_active(active: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_hidden(show_hidden: boolean): void
    set_uri(uri: string): boolean
    set_use_preview_label(use_label: boolean): void
    unselect_all(): void
    unselect_file(file: Gio.File): void
    unselect_filename(filename: string): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.NativeDialog */
    vfunc_hide?(): void
    vfunc_response?(response_id: number): void
    vfunc_show?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FileChooser */
    connect(sigName: "confirm-overwrite", callback: ((obj: FileChooserNative) => FileChooserConfirmation))
    connect(sigName: "current-folder-changed", callback: ((obj: FileChooserNative) => void))
    connect(sigName: "file-activated", callback: ((obj: FileChooserNative) => void))
    connect(sigName: "selection-changed", callback: ((obj: FileChooserNative) => void))
    connect(sigName: "update-preview", callback: ((obj: FileChooserNative) => void))
    connect(sigName: "notify::accept-label", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-label", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::create-folders", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::do-overwrite-confirmation", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extra-widget", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget-active", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-hidden", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-preview-label", callback: ((obj: FileChooserNative, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FileChooserNative_ConstructProps): FileChooserNative
    constructor (config?: FileChooserNative_ConstructProps)
}
export interface FileChooserWidget_ConstructProps extends Box_ConstructProps {
    search_mode?:boolean
}
export class FileChooserWidget extends Box {
    /* Properties of Gtk.FileChooserWidget */
    search_mode:boolean
    readonly subtitle:string
    /* Properties of Gtk.FileChooser */
    action:FileChooserAction
    create_folders:boolean
    do_overwrite_confirmation:boolean
    extra_widget:Widget
    filter:FileFilter
    local_only:boolean
    preview_widget:Widget
    preview_widget_active:boolean
    select_multiple:boolean
    show_hidden:boolean
    use_preview_label:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.FileChooserWidget */
    parent_instance:Box
    priv:FileChooserWidgetPrivate
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FileChooser */
    add_choice(id: string, label: string, options: string, option_labels: string): void
    add_filter(filter: FileFilter): void
    add_shortcut_folder(folder: string): boolean
    add_shortcut_folder_uri(uri: string): boolean
    get_action(): FileChooserAction
    get_choice(id: string): string
    get_create_folders(): boolean
    get_current_folder(): string
    get_current_folder_file(): Gio.File
    get_current_folder_uri(): string | null
    get_current_name(): string
    get_do_overwrite_confirmation(): boolean
    get_extra_widget(): Widget | null
    get_file(): Gio.File
    get_filename(): string
    get_filenames(): GLib.SList
    get_files(): GLib.SList
    get_filter(): FileFilter | null
    get_local_only(): boolean
    get_preview_file(): Gio.File | null
    get_preview_filename(): string
    get_preview_uri(): string | null
    get_preview_widget(): Widget | null
    get_preview_widget_active(): boolean
    get_select_multiple(): boolean
    get_show_hidden(): boolean
    get_uri(): string | null
    get_uris(): GLib.SList
    get_use_preview_label(): boolean
    list_filters(): GLib.SList
    list_shortcut_folder_uris(): GLib.SList | null
    list_shortcut_folders(): GLib.SList | null
    remove_choice(id: string): void
    remove_filter(filter: FileFilter): void
    remove_shortcut_folder(folder: string): boolean
    remove_shortcut_folder_uri(uri: string): boolean
    select_all(): void
    select_file(file: Gio.File): boolean
    select_filename(filename: string): boolean
    select_uri(uri: string): boolean
    set_action(action: FileChooserAction): void
    set_choice(id: string, option: string): void
    set_create_folders(create_folders: boolean): void
    set_current_folder(filename: string): boolean
    set_current_folder_file(file: Gio.File): boolean
    set_current_folder_uri(uri: string): boolean
    set_current_name(name: string): void
    set_do_overwrite_confirmation(do_overwrite_confirmation: boolean): void
    set_extra_widget(extra_widget: Widget): void
    set_file(file: Gio.File): boolean
    set_filename(filename: string): boolean
    set_filter(filter: FileFilter): void
    set_local_only(local_only: boolean): void
    set_preview_widget(preview_widget: Widget): void
    set_preview_widget_active(active: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_hidden(show_hidden: boolean): void
    set_uri(uri: string): boolean
    set_use_preview_label(use_label: boolean): void
    unselect_all(): void
    unselect_file(file: Gio.File): void
    unselect_filename(filename: string): void
    unselect_uri(uri: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FileChooserWidget */
    connect(sigName: "desktop-folder", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "down-folder", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "home-folder", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "location-popup", callback: ((obj: FileChooserWidget, path: string) => void))
    connect(sigName: "location-popup-on-paste", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "location-toggle-popup", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "places-shortcut", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "quick-bookmark", callback: ((obj: FileChooserWidget, bookmark_index: number) => void))
    connect(sigName: "recent-shortcut", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "search-shortcut", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "show-hidden", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "up-folder", callback: ((obj: FileChooserWidget) => void))
    /* Signals of Gtk.FileChooser */
    connect(sigName: "confirm-overwrite", callback: ((obj: FileChooserWidget) => FileChooserConfirmation))
    connect(sigName: "current-folder-changed", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "file-activated", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "selection-changed", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "update-preview", callback: ((obj: FileChooserWidget) => void))
    connect(sigName: "notify::search-mode", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::subtitle", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::create-folders", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::do-overwrite-confirmation", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extra-widget", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-widget-active", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-hidden", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-preview-label", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: FileChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FileChooserWidget_ConstructProps): FileChooserWidget
    constructor (config?: FileChooserWidget_ConstructProps)
}
export interface FileFilter_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
}
export class FileFilter extends GObject.InitiallyUnowned {
    /* Methods of Gtk.FileFilter */
    add_custom(needed: FileFilterFlags, func: FileFilterFunc, notify: GLib.DestroyNotify): void
    add_mime_type(mime_type: string): void
    add_pattern(pattern: string): void
    add_pixbuf_formats(): void
    filter(filter_info: FileFilterInfo): boolean
    get_name(): string | null
    get_needed(): FileFilterFlags
    set_name(name?: string | null): void
    to_gvariant(): GLib.Variant
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FileFilter_ConstructProps): FileFilter
    constructor (config?: FileFilter_ConstructProps)
    static new_from_gvariant(variant: GLib.Variant): FileFilter
}
export interface Fixed_ConstructProps extends Container_ConstructProps {
}
export class Fixed extends Container {
    /* Fields of Gtk.Fixed */
    container:Container
    /* Methods of Gtk.Fixed */
    move(widget: Widget, x: number, y: number): void
    put(widget: Widget, x: number, y: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Fixed_ConstructProps): Fixed
    constructor (config?: Fixed_ConstructProps)
}
export interface FlowBox_ConstructProps extends Container_ConstructProps {
    activate_on_single_click?:boolean
    column_spacing?:number
    homogeneous?:boolean
    max_children_per_line?:number
    min_children_per_line?:number
    row_spacing?:number
    selection_mode?:SelectionMode
}
export class FlowBox extends Container {
    /* Properties of Gtk.FlowBox */
    activate_on_single_click:boolean
    column_spacing:number
    homogeneous:boolean
    max_children_per_line:number
    min_children_per_line:number
    row_spacing:number
    selection_mode:SelectionMode
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.FlowBox */
    container:Container
    /* Methods of Gtk.FlowBox */
    bind_model(model: Gio.ListModel | null, create_widget_func: FlowBoxCreateWidgetFunc, user_data_free_func: GLib.DestroyNotify): void
    get_activate_on_single_click(): boolean
    get_child_at_index(idx: number): FlowBoxChild | null
    get_child_at_pos(x: number, y: number): FlowBoxChild | null
    get_column_spacing(): number
    get_homogeneous(): boolean
    get_max_children_per_line(): number
    get_min_children_per_line(): number
    get_row_spacing(): number
    get_selected_children(): FlowBoxChild[]
    get_selection_mode(): SelectionMode
    insert(widget: Widget, position: number): void
    invalidate_filter(): void
    invalidate_sort(): void
    select_all(): void
    select_child(child: FlowBoxChild): void
    selected_foreach(func: FlowBoxForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_column_spacing(spacing: number): void
    set_filter_func(filter_func: FlowBoxFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_hadjustment(adjustment: Adjustment): void
    set_homogeneous(homogeneous: boolean): void
    set_max_children_per_line(n_children: number): void
    set_min_children_per_line(n_children: number): void
    set_row_spacing(spacing: number): void
    set_selection_mode(mode: SelectionMode): void
    set_sort_func(sort_func: FlowBoxSortFunc | null, destroy: GLib.DestroyNotify): void
    set_vadjustment(adjustment: Adjustment): void
    unselect_all(): void
    unselect_child(child: FlowBoxChild): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.FlowBox */
    vfunc_activate_cursor_child?(): void
    vfunc_child_activated?(child: FlowBoxChild): void
    vfunc_move_cursor?(step: MovementStep, count: number): boolean
    vfunc_select_all?(): void
    vfunc_selected_children_changed?(): void
    vfunc_toggle_cursor_child?(): void
    vfunc_unselect_all?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FlowBox */
    connect(sigName: "activate-cursor-child", callback: ((obj: FlowBox) => void))
    connect(sigName: "child-activated", callback: ((obj: FlowBox, child: FlowBoxChild) => void))
    connect(sigName: "move-cursor", callback: ((obj: FlowBox, step: MovementStep, count: number) => boolean))
    connect(sigName: "select-all", callback: ((obj: FlowBox) => void))
    connect(sigName: "selected-children-changed", callback: ((obj: FlowBox) => void))
    connect(sigName: "toggle-cursor-child", callback: ((obj: FlowBox) => void))
    connect(sigName: "unselect-all", callback: ((obj: FlowBox) => void))
    connect(sigName: "notify::activate-on-single-click", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-spacing", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-children-per-line", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-children-per-line", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-spacing", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-mode", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: FlowBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FlowBox_ConstructProps): FlowBox
    constructor (config?: FlowBox_ConstructProps)
}
export interface FlowBoxAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class FlowBoxAccessible extends ContainerAccessible {
    /* Fields of Gtk.FlowBoxAccessible */
    parent: any
    priv:FlowBoxAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: FlowBoxAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: FlowBoxAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FlowBoxAccessible_ConstructProps): FlowBoxAccessible
    constructor (config?: FlowBoxAccessible_ConstructProps)
}
export interface FlowBoxChild_ConstructProps extends Bin_ConstructProps {
}
export class FlowBoxChild extends Bin {
    /* Fields of Gtk.FlowBoxChild */
    parent_instance:Bin
    /* Methods of Gtk.FlowBoxChild */
    changed(): void
    get_index(): number
    is_selected(): boolean
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.FlowBoxChild */
    vfunc_activate?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FlowBoxChild */
    connect(sigName: "activate", callback: ((obj: FlowBoxChild) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FlowBoxChild_ConstructProps): FlowBoxChild
    constructor (config?: FlowBoxChild_ConstructProps)
}
export interface FlowBoxChildAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class FlowBoxChildAccessible extends ContainerAccessible {
    /* Fields of Gtk.FlowBoxChildAccessible */
    parent: any
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: FlowBoxChildAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FlowBoxChildAccessible_ConstructProps): FlowBoxChildAccessible
    constructor (config?: FlowBoxChildAccessible_ConstructProps)
}
export interface FontButton_ConstructProps extends Button_ConstructProps {
    font_name?:string
    show_size?:boolean
    show_style?:boolean
    title?:string
    use_font?:boolean
    use_size?:boolean
}
export class FontButton extends Button {
    /* Properties of Gtk.FontButton */
    font_name:string
    show_size:boolean
    show_style:boolean
    title:string
    use_font:boolean
    use_size:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Properties of Gtk.FontChooser */
    font:string
    font_desc:Pango.FontDescription
    preview_text:string
    show_preview_entry:boolean
    /* Fields of Gtk.FontButton */
    button:Button
    /* Methods of Gtk.FontButton */
    get_font_name(): string
    get_show_size(): boolean
    get_show_style(): boolean
    get_title(): string
    get_use_font(): boolean
    get_use_size(): boolean
    set_font_name(fontname: string): boolean
    set_show_size(show_size: boolean): void
    set_show_style(show_style: boolean): void
    set_title(title: string): void
    set_use_font(use_font: boolean): void
    set_use_size(use_size: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_map(): Pango.FontMap | null
    get_font_size(): number
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_font_map(fontmap?: Pango.FontMap | null): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.FontButton */
    vfunc_font_set?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontButton */
    connect(sigName: "font-set", callback: ((obj: FontButton) => void))
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: ((obj: FontButton, fontname: string) => void))
    connect(sigName: "notify::font-name", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-size", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-style", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-font", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-size", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-desc", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-text", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-preview-entry", callback: ((obj: FontButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FontButton_ConstructProps): FontButton
    constructor (config?: FontButton_ConstructProps)
    static new_with_font(fontname: string): FontButton
}
export interface FontChooserDialog_ConstructProps extends Dialog_ConstructProps {
}
export class FontChooserDialog extends Dialog {
    /* Properties of Gtk.FontChooser */
    font:string
    font_desc:Pango.FontDescription
    preview_text:string
    show_preview_entry:boolean
    /* Fields of Gtk.FontChooserDialog */
    parent_instance:Dialog
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_map(): Pango.FontMap | null
    get_font_size(): number
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_font_map(fontmap?: Pango.FontMap | null): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: ((obj: FontChooserDialog, fontname: string) => void))
    connect(sigName: "notify::font", callback: ((obj: FontChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-desc", callback: ((obj: FontChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-text", callback: ((obj: FontChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-preview-entry", callback: ((obj: FontChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FontChooserDialog_ConstructProps): FontChooserDialog
    constructor (config?: FontChooserDialog_ConstructProps)
}
export interface FontChooserWidget_ConstructProps extends Box_ConstructProps {
}
export class FontChooserWidget extends Box {
    /* Properties of Gtk.FontChooser */
    font:string
    font_desc:Pango.FontDescription
    preview_text:string
    show_preview_entry:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.FontChooserWidget */
    parent_instance:Box
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.FontChooser */
    get_font(): string | null
    get_font_desc(): Pango.FontDescription | null
    get_font_face(): Pango.FontFace | null
    get_font_family(): Pango.FontFamily | null
    get_font_map(): Pango.FontMap | null
    get_font_size(): number
    get_preview_text(): string
    get_show_preview_entry(): boolean
    set_filter_func(filter: FontFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_font(fontname: string): void
    set_font_desc(font_desc: Pango.FontDescription): void
    set_font_map(fontmap?: Pango.FontMap | null): void
    set_preview_text(text: string): void
    set_show_preview_entry(show_preview_entry: boolean): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.FontChooser */
    connect(sigName: "font-activated", callback: ((obj: FontChooserWidget, fontname: string) => void))
    connect(sigName: "notify::font", callback: ((obj: FontChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-desc", callback: ((obj: FontChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-text", callback: ((obj: FontChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-preview-entry", callback: ((obj: FontChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: FontChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FontChooserWidget_ConstructProps): FontChooserWidget
    constructor (config?: FontChooserWidget_ConstructProps)
}
export interface FontSelection_ConstructProps extends Box_ConstructProps {
    font_name?:string
    preview_text?:string
}
export class FontSelection extends Box {
    /* Properties of Gtk.FontSelection */
    font_name:string
    preview_text:string
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.FontSelection */
    parent_instance:Box
    /* Methods of Gtk.FontSelection */
    get_face(): Pango.FontFace
    get_face_list(): Widget
    get_family(): Pango.FontFamily
    get_family_list(): Widget
    get_font_name(): string
    get_preview_entry(): Widget
    get_preview_text(): string
    get_size(): number
    get_size_entry(): Widget
    get_size_list(): Widget
    set_font_name(fontname: string): boolean
    set_preview_text(text: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::font-name", callback: ((obj: FontSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preview-text", callback: ((obj: FontSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: FontSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FontSelection_ConstructProps): FontSelection
    constructor (config?: FontSelection_ConstructProps)
}
export interface FontSelectionDialog_ConstructProps extends Dialog_ConstructProps {
}
export class FontSelectionDialog extends Dialog {
    /* Fields of Gtk.FontSelectionDialog */
    parent_instance:Dialog
    /* Methods of Gtk.FontSelectionDialog */
    get_cancel_button(): Widget
    get_font_name(): string
    get_font_selection(): Widget
    get_ok_button(): Widget
    get_preview_text(): string
    set_font_name(fontname: string): boolean
    set_preview_text(text: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FontSelectionDialog_ConstructProps): FontSelectionDialog
    constructor (config?: FontSelectionDialog_ConstructProps)
}
export interface Frame_ConstructProps extends Bin_ConstructProps {
    label?:string
    label_widget?:Widget
    label_xalign?:number
    label_yalign?:number
    shadow_type?:ShadowType
}
export class Frame extends Bin {
    /* Properties of Gtk.Frame */
    label:string
    label_widget:Widget
    label_xalign:number
    label_yalign:number
    shadow_type:ShadowType
    /* Fields of Gtk.Frame */
    bin:Bin
    /* Methods of Gtk.Frame */
    get_label(): string | null
    get_label_align(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_label_widget(): Widget | null
    get_shadow_type(): ShadowType
    set_label(label?: string | null): void
    set_label_align(xalign: number, yalign: number): void
    set_label_widget(label_widget?: Widget | null): void
    set_shadow_type(type: ShadowType): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Frame */
    vfunc_compute_child_allocation?(allocation: Allocation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::label", callback: ((obj: Frame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-widget", callback: ((obj: Frame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-xalign", callback: ((obj: Frame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-yalign", callback: ((obj: Frame, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shadow-type", callback: ((obj: Frame, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Frame_ConstructProps): Frame
    constructor (config?: Frame_ConstructProps)
}
export interface FrameAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class FrameAccessible extends ContainerAccessible {
    /* Fields of Gtk.FrameAccessible */
    parent: any
    priv:FrameAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: FrameAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: FrameAccessible_ConstructProps): FrameAccessible
    constructor (config?: FrameAccessible_ConstructProps)
}
export interface GLArea_ConstructProps extends Widget_ConstructProps {
    auto_render?:boolean
    has_alpha?:boolean
    has_depth_buffer?:boolean
    has_stencil_buffer?:boolean
    use_es?:boolean
}
export class GLArea extends Widget {
    /* Properties of Gtk.GLArea */
    auto_render:boolean
    readonly context:Gdk.GLContext
    has_alpha:boolean
    has_depth_buffer:boolean
    has_stencil_buffer:boolean
    use_es:boolean
    /* Fields of Gtk.GLArea */
    /* Methods of Gtk.GLArea */
    attach_buffers(): void
    get_auto_render(): boolean
    get_context(): Gdk.GLContext
    get_error(): GLib.Error | null
    get_has_alpha(): boolean
    get_has_depth_buffer(): boolean
    get_has_stencil_buffer(): boolean
    get_required_version(): [ /* major */ number, /* minor */ number ]
    get_use_es(): boolean
    make_current(): void
    queue_render(): void
    set_auto_render(auto_render: boolean): void
    set_error(error?: GLib.Error | null): void
    set_has_alpha(has_alpha: boolean): void
    set_has_depth_buffer(has_depth_buffer: boolean): void
    set_has_stencil_buffer(has_stencil_buffer: boolean): void
    set_required_version(major: number, minor: number): void
    set_use_es(use_es: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.GLArea */
    vfunc_render?(context: Gdk.GLContext): boolean
    vfunc_resize?(width: number, height: number): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GLArea */
    connect(sigName: "create-context", callback: ((obj: GLArea) => Gdk.GLContext))
    connect(sigName: "render", callback: ((obj: GLArea, context: Gdk.GLContext) => boolean))
    connect(sigName: "resize", callback: ((obj: GLArea, width: number, height: number) => void))
    connect(sigName: "notify::auto-render", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::context", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-alpha", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-depth-buffer", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-stencil-buffer", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-es", callback: ((obj: GLArea, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GLArea_ConstructProps): GLArea
    constructor (config?: GLArea_ConstructProps)
}
export interface Gesture_ConstructProps extends EventController_ConstructProps {
    n_points?:number
    window?:Gdk.Window
}
export class Gesture extends EventController {
    /* Properties of Gtk.Gesture */
    window:Gdk.Window
    /* Methods of Gtk.Gesture */
    get_bounding_box(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_bounding_box_center(): [ /* returnType */ boolean, /* x */ number, /* y */ number ]
    get_device(): Gdk.Device | null
    get_group(): Gesture[]
    get_last_event(sequence: Gdk.EventSequence): Gdk.Event | null
    get_last_updated_sequence(): Gdk.EventSequence | null
    get_point(sequence?: Gdk.EventSequence | null): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_sequence_state(sequence: Gdk.EventSequence): EventSequenceState
    get_sequences(): Gdk.EventSequence[]
    get_window(): Gdk.Window | null
    group(gesture: Gesture): void
    handles_sequence(sequence?: Gdk.EventSequence | null): boolean
    is_active(): boolean
    is_grouped_with(other: Gesture): boolean
    is_recognized(): boolean
    set_sequence_state(sequence: Gdk.EventSequence, state: EventSequenceState): boolean
    set_state(state: EventSequenceState): boolean
    set_window(window?: Gdk.Window | null): void
    ungroup(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Gesture */
    connect(sigName: "begin", callback: ((obj: Gesture, sequence: Gdk.EventSequence) => void))
    connect(sigName: "cancel", callback: ((obj: Gesture, sequence: Gdk.EventSequence) => void))
    connect(sigName: "end", callback: ((obj: Gesture, sequence: Gdk.EventSequence) => void))
    connect(sigName: "sequence-state-changed", callback: ((obj: Gesture, sequence: Gdk.EventSequence, state: EventSequenceState) => void))
    connect(sigName: "update", callback: ((obj: Gesture, sequence: Gdk.EventSequence) => void))
    connect(sigName: "notify::window", callback: ((obj: Gesture, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Gesture_ConstructProps): Gesture
    constructor (config?: Gesture_ConstructProps)
}
export interface GestureDrag_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureDrag extends GestureSingle {
    /* Methods of Gtk.GestureDrag */
    get_offset(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    get_start_point(): [ /* returnType */ boolean, /* x */ number | null, /* y */ number | null ]
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureDrag */
    connect(sigName: "drag-begin", callback: ((obj: GestureDrag, start_x: number, start_y: number) => void))
    connect(sigName: "drag-end", callback: ((obj: GestureDrag, offset_x: number, offset_y: number) => void))
    connect(sigName: "drag-update", callback: ((obj: GestureDrag, offset_x: number, offset_y: number) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureDrag_ConstructProps): GestureDrag
    constructor (config?: GestureDrag_ConstructProps)
}
export interface GestureLongPress_ConstructProps extends GestureSingle_ConstructProps {
    delay_factor?:number
}
export class GestureLongPress extends GestureSingle {
    /* Properties of Gtk.GestureLongPress */
    delay_factor:number
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureLongPress */
    connect(sigName: "cancelled", callback: ((obj: GestureLongPress) => void))
    connect(sigName: "pressed", callback: ((obj: GestureLongPress, x: number, y: number) => void))
    connect(sigName: "notify::delay-factor", callback: ((obj: GestureLongPress, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureLongPress_ConstructProps): GestureLongPress
    constructor (config?: GestureLongPress_ConstructProps)
}
export interface GestureMultiPress_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureMultiPress extends GestureSingle {
    /* Methods of Gtk.GestureMultiPress */
    get_area(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    set_area(rect?: Gdk.Rectangle | null): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureMultiPress */
    connect(sigName: "pressed", callback: ((obj: GestureMultiPress, n_press: number, x: number, y: number) => void))
    connect(sigName: "released", callback: ((obj: GestureMultiPress, n_press: number, x: number, y: number) => void))
    connect(sigName: "stopped", callback: ((obj: GestureMultiPress) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureMultiPress_ConstructProps): GestureMultiPress
    constructor (config?: GestureMultiPress_ConstructProps)
}
export interface GesturePan_ConstructProps extends GestureDrag_ConstructProps {
    orientation?:Orientation
}
export class GesturePan extends GestureDrag {
    /* Properties of Gtk.GesturePan */
    orientation:Orientation
    /* Methods of Gtk.GesturePan */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GesturePan */
    connect(sigName: "pan", callback: ((obj: GesturePan, direction: PanDirection, offset: number) => void))
    connect(sigName: "notify::orientation", callback: ((obj: GesturePan, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GesturePan_ConstructProps): GesturePan
    constructor (config?: GesturePan_ConstructProps)
}
export interface GestureRotate_ConstructProps extends Gesture_ConstructProps {
}
export class GestureRotate extends Gesture {
    /* Methods of Gtk.GestureRotate */
    get_angle_delta(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureRotate */
    connect(sigName: "angle-changed", callback: ((obj: GestureRotate, angle: number, angle_delta: number) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureRotate_ConstructProps): GestureRotate
    constructor (config?: GestureRotate_ConstructProps)
}
export interface GestureSingle_ConstructProps extends Gesture_ConstructProps {
    button?:number
    exclusive?:boolean
    touch_only?:boolean
}
export class GestureSingle extends Gesture {
    /* Properties of Gtk.GestureSingle */
    button:number
    exclusive:boolean
    touch_only:boolean
    /* Methods of Gtk.GestureSingle */
    get_button(): number
    get_current_button(): number
    get_current_sequence(): Gdk.EventSequence | null
    get_exclusive(): boolean
    get_touch_only(): boolean
    set_button(button: number): void
    set_exclusive(exclusive: boolean): void
    set_touch_only(touch_only: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::button", callback: ((obj: GestureSingle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::exclusive", callback: ((obj: GestureSingle, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::touch-only", callback: ((obj: GestureSingle, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureSingle_ConstructProps): GestureSingle
    constructor (config?: GestureSingle_ConstructProps)
}
export interface GestureSwipe_ConstructProps extends GestureSingle_ConstructProps {
}
export class GestureSwipe extends GestureSingle {
    /* Methods of Gtk.GestureSwipe */
    get_velocity(): [ /* returnType */ boolean, /* velocity_x */ number, /* velocity_y */ number ]
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureSwipe */
    connect(sigName: "swipe", callback: ((obj: GestureSwipe, velocity_x: number, velocity_y: number) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureSwipe_ConstructProps): GestureSwipe
    constructor (config?: GestureSwipe_ConstructProps)
}
export interface GestureZoom_ConstructProps extends Gesture_ConstructProps {
}
export class GestureZoom extends Gesture {
    /* Methods of Gtk.GestureZoom */
    get_scale_delta(): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.GestureZoom */
    connect(sigName: "scale-changed", callback: ((obj: GestureZoom, scale: number) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: GestureZoom_ConstructProps): GestureZoom
    constructor (config?: GestureZoom_ConstructProps)
}
export interface Grid_ConstructProps extends Container_ConstructProps {
    baseline_row?:number
    column_homogeneous?:boolean
    column_spacing?:number
    row_homogeneous?:boolean
    row_spacing?:number
}
export class Grid extends Container {
    /* Properties of Gtk.Grid */
    baseline_row:number
    column_homogeneous:boolean
    column_spacing:number
    row_homogeneous:boolean
    row_spacing:number
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Grid */
    /* Methods of Gtk.Grid */
    attach(child: Widget, left: number, top: number, width: number, height: number): void
    attach_next_to(child: Widget, sibling: Widget | null, side: PositionType, width: number, height: number): void
    get_baseline_row(): number
    get_child_at(left: number, top: number): Widget | null
    get_column_homogeneous(): boolean
    get_column_spacing(): number
    get_row_baseline_position(row: number): BaselinePosition
    get_row_homogeneous(): boolean
    get_row_spacing(): number
    insert_column(position: number): void
    insert_next_to(sibling: Widget, side: PositionType): void
    insert_row(position: number): void
    remove_column(position: number): void
    remove_row(position: number): void
    set_baseline_row(row: number): void
    set_column_homogeneous(homogeneous: boolean): void
    set_column_spacing(spacing: number): void
    set_row_baseline_position(row: number, pos: BaselinePosition): void
    set_row_homogeneous(homogeneous: boolean): void
    set_row_spacing(spacing: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::baseline-row", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-homogeneous", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-spacing", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-homogeneous", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-spacing", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Grid, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Grid_ConstructProps): Grid
    constructor (config?: Grid_ConstructProps)
}
export interface HBox_ConstructProps extends Box_ConstructProps {
}
export class HBox extends Box {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HBox */
    box:Box
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HBox_ConstructProps): HBox
    constructor (config?: HBox_ConstructProps)
}
export interface HButtonBox_ConstructProps extends ButtonBox_ConstructProps {
}
export class HButtonBox extends ButtonBox {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HButtonBox */
    button_box:ButtonBox
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HButtonBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HButtonBox_ConstructProps): HButtonBox
    constructor (config?: HButtonBox_ConstructProps)
}
export interface HPaned_ConstructProps extends Paned_ConstructProps {
}
export class HPaned extends Paned {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HPaned */
    paned:Paned
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Paned */
    vfunc_accept_position?(): boolean
    vfunc_cancel_position?(): boolean
    vfunc_cycle_child_focus?(reverse: boolean): boolean
    vfunc_cycle_handle_focus?(reverse: boolean): boolean
    vfunc_move_handle?(scroll: ScrollType): boolean
    vfunc_toggle_handle_focus?(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HPaned, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HPaned_ConstructProps): HPaned
    constructor (config?: HPaned_ConstructProps)
}
export interface HSV_ConstructProps extends Widget_ConstructProps {
}
export class HSV extends Widget {
    /* Fields of Gtk.HSV */
    parent_instance:Widget
    /* Methods of Gtk.HSV */
    get_color(): [ /* h */ number, /* s */ number, /* v */ number ]
    get_metrics(): [ /* size */ number, /* ring_width */ number ]
    is_adjusting(): boolean
    set_color(h: number, s: number, v: number): void
    set_metrics(size: number, ring_width: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.HSV */
    vfunc_changed?(): void
    vfunc_move?(type: DirectionType): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.HSV */
    connect(sigName: "changed", callback: ((obj: HSV) => void))
    connect(sigName: "move", callback: ((obj: HSV, object: DirectionType) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HSV_ConstructProps): HSV
    constructor (config?: HSV_ConstructProps)
    static to_rgb(h: number, s: number, v: number): [ /* r */ number, /* g */ number, /* b */ number ]
}
export interface HScale_ConstructProps extends Scale_ConstructProps {
}
export class HScale extends Scale {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HScale */
    scale:Scale
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Scale */
    vfunc_draw_value?(): void
    vfunc_format_value?(value: number): string
    vfunc_get_layout_offsets?(): [ /* x */ number | null, /* y */ number | null ]
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HScale, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HScale_ConstructProps): HScale
    constructor (config?: HScale_ConstructProps)
    static new_with_range(min: number, max: number, step: number): HScale
}
export interface HScrollbar_ConstructProps extends Scrollbar_ConstructProps {
}
export class HScrollbar extends Scrollbar {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HScrollbar */
    scrollbar:Scrollbar
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HScrollbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HScrollbar_ConstructProps): HScrollbar
    constructor (config?: HScrollbar_ConstructProps)
}
export interface HSeparator_ConstructProps extends Separator_ConstructProps {
}
export class HSeparator extends Separator {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.HSeparator */
    separator:Separator
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: HSeparator, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HSeparator_ConstructProps): HSeparator
    constructor (config?: HSeparator_ConstructProps)
}
export interface HandleBox_ConstructProps extends Bin_ConstructProps {
    handle_position?:PositionType
    shadow_type?:ShadowType
    snap_edge?:PositionType
    snap_edge_set?:boolean
}
export class HandleBox extends Bin {
    /* Properties of Gtk.HandleBox */
    readonly child_detached:boolean
    handle_position:PositionType
    shadow_type:ShadowType
    snap_edge:PositionType
    snap_edge_set:boolean
    /* Fields of Gtk.HandleBox */
    bin:Bin
    /* Methods of Gtk.HandleBox */
    get_child_detached(): boolean
    get_handle_position(): PositionType
    get_shadow_type(): ShadowType
    get_snap_edge(): PositionType
    set_handle_position(position: PositionType): void
    set_shadow_type(type: ShadowType): void
    set_snap_edge(edge: PositionType): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.HandleBox */
    vfunc_child_attached?(child: Widget): void
    vfunc_child_detached?(child: Widget): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.HandleBox */
    connect(sigName: "child-attached", callback: ((obj: HandleBox, widget: Widget) => void))
    connect(sigName: "child-detached", callback: ((obj: HandleBox, widget: Widget) => void))
    connect(sigName: "notify::child-detached", callback: ((obj: HandleBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::handle-position", callback: ((obj: HandleBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shadow-type", callback: ((obj: HandleBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::snap-edge", callback: ((obj: HandleBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::snap-edge-set", callback: ((obj: HandleBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HandleBox_ConstructProps): HandleBox
    constructor (config?: HandleBox_ConstructProps)
}
export interface HeaderBar_ConstructProps extends Container_ConstructProps {
    custom_title?:Widget
    decoration_layout?:string
    decoration_layout_set?:boolean
    has_subtitle?:boolean
    show_close_button?:boolean
    spacing?:number
    subtitle?:string
    title?:string
}
export class HeaderBar extends Container {
    /* Properties of Gtk.HeaderBar */
    custom_title:Widget
    decoration_layout:string
    decoration_layout_set:boolean
    has_subtitle:boolean
    show_close_button:boolean
    spacing:number
    subtitle:string
    title:string
    /* Fields of Gtk.HeaderBar */
    container:Container
    /* Methods of Gtk.HeaderBar */
    get_custom_title(): Widget | null
    get_decoration_layout(): string
    get_has_subtitle(): boolean
    get_show_close_button(): boolean
    get_subtitle(): string | null
    get_title(): string | null
    pack_end(child: Widget): void
    pack_start(child: Widget): void
    set_custom_title(title_widget?: Widget | null): void
    set_decoration_layout(layout?: string | null): void
    set_has_subtitle(setting: boolean): void
    set_show_close_button(setting: boolean): void
    set_subtitle(subtitle?: string | null): void
    set_title(title?: string | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::custom-title", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decoration-layout", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decoration-layout-set", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-subtitle", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-close-button", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::subtitle", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: HeaderBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: HeaderBar_ConstructProps): HeaderBar
    constructor (config?: HeaderBar_ConstructProps)
}
export interface IMContext_ConstructProps extends GObject.Object_ConstructProps {
    input_hints?:InputHints
    input_purpose?:InputPurpose
}
export class IMContext extends GObject.Object {
    /* Properties of Gtk.IMContext */
    input_hints:InputHints
    input_purpose:InputPurpose
    /* Fields of Gtk.IMContext */
    parent_instance:GObject.Object
    /* Methods of Gtk.IMContext */
    delete_surrounding(offset: number, n_chars: number): boolean
    filter_keypress(event: Gdk.EventKey): boolean
    focus_in(): void
    focus_out(): void
    get_preedit_string(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    get_surrounding(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    reset(): void
    set_client_window(window?: Gdk.Window | null): void
    set_cursor_location(area: Gdk.Rectangle): void
    set_surrounding(text: string, len: number, cursor_index: number): void
    set_use_preedit(use_preedit: boolean): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit?(str: string): void
    vfunc_delete_surrounding?(offset: number, n_chars: number): boolean
    vfunc_filter_keypress?(event: Gdk.EventKey): boolean
    vfunc_focus_in?(): void
    vfunc_focus_out?(): void
    vfunc_get_preedit_string?(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding?(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_preedit_changed?(): void
    vfunc_preedit_end?(): void
    vfunc_preedit_start?(): void
    vfunc_reset?(): void
    vfunc_retrieve_surrounding?(): boolean
    vfunc_set_client_window?(window?: Gdk.Window | null): void
    vfunc_set_cursor_location?(area: Gdk.Rectangle): void
    vfunc_set_surrounding?(text: string, len: number, cursor_index: number): void
    vfunc_set_use_preedit?(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IMContext */
    connect(sigName: "commit", callback: ((obj: IMContext, str: string) => void))
    connect(sigName: "delete-surrounding", callback: ((obj: IMContext, offset: number, n_chars: number) => boolean))
    connect(sigName: "preedit-changed", callback: ((obj: IMContext) => void))
    connect(sigName: "preedit-end", callback: ((obj: IMContext) => void))
    connect(sigName: "preedit-start", callback: ((obj: IMContext) => void))
    connect(sigName: "retrieve-surrounding", callback: ((obj: IMContext) => boolean))
    connect(sigName: "notify::input-hints", callback: ((obj: IMContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-purpose", callback: ((obj: IMContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IMContext_ConstructProps): IMContext
    constructor (config?: IMContext_ConstructProps)
}
export interface IMContextSimple_ConstructProps extends IMContext_ConstructProps {
}
export class IMContextSimple extends IMContext {
    /* Fields of Gtk.IMContextSimple */
    object:IMContext
    /* Methods of Gtk.IMContextSimple */
    add_compose_file(compose_file: string): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit?(str: string): void
    vfunc_delete_surrounding?(offset: number, n_chars: number): boolean
    vfunc_filter_keypress?(event: Gdk.EventKey): boolean
    vfunc_focus_in?(): void
    vfunc_focus_out?(): void
    vfunc_get_preedit_string?(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding?(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_preedit_changed?(): void
    vfunc_preedit_end?(): void
    vfunc_preedit_start?(): void
    vfunc_reset?(): void
    vfunc_retrieve_surrounding?(): boolean
    vfunc_set_client_window?(window?: Gdk.Window | null): void
    vfunc_set_cursor_location?(area: Gdk.Rectangle): void
    vfunc_set_surrounding?(text: string, len: number, cursor_index: number): void
    vfunc_set_use_preedit?(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IMContextSimple_ConstructProps): IMContextSimple
    constructor (config?: IMContextSimple_ConstructProps)
}
export interface IMMulticontext_ConstructProps extends IMContext_ConstructProps {
}
export class IMMulticontext extends IMContext {
    /* Fields of Gtk.IMMulticontext */
    object:IMContext
    /* Methods of Gtk.IMMulticontext */
    append_menuitems(menushell: MenuShell): void
    get_context_id(): string
    set_context_id(context_id: string): void
    /* Virtual methods of Gtk.IMContext */
    vfunc_commit?(str: string): void
    vfunc_delete_surrounding?(offset: number, n_chars: number): boolean
    vfunc_filter_keypress?(event: Gdk.EventKey): boolean
    vfunc_focus_in?(): void
    vfunc_focus_out?(): void
    vfunc_get_preedit_string?(): [ /* str */ string, /* attrs */ Pango.AttrList, /* cursor_pos */ number ]
    vfunc_get_surrounding?(): [ /* returnType */ boolean, /* text */ string, /* cursor_index */ number ]
    vfunc_preedit_changed?(): void
    vfunc_preedit_end?(): void
    vfunc_preedit_start?(): void
    vfunc_reset?(): void
    vfunc_retrieve_surrounding?(): boolean
    vfunc_set_client_window?(window?: Gdk.Window | null): void
    vfunc_set_cursor_location?(area: Gdk.Rectangle): void
    vfunc_set_surrounding?(text: string, len: number, cursor_index: number): void
    vfunc_set_use_preedit?(use_preedit: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IMMulticontext_ConstructProps): IMMulticontext
    constructor (config?: IMMulticontext_ConstructProps)
}
export interface IconFactory_ConstructProps extends GObject.Object_ConstructProps {
}
export class IconFactory extends GObject.Object {
    /* Fields of Gtk.IconFactory */
    parent_instance:GObject.Object
    /* Methods of Gtk.IconFactory */
    add(stock_id: string, icon_set: IconSet): void
    add_default(): void
    lookup(stock_id: string): IconSet
    remove_default(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IconFactory_ConstructProps): IconFactory
    constructor (config?: IconFactory_ConstructProps)
    static lookup_default(stock_id: string): IconSet
}
export interface IconInfo_ConstructProps extends GObject.Object_ConstructProps {
}
export class IconInfo extends GObject.Object {
    /* Methods of Gtk.IconInfo */
    get_attach_points(): [ /* returnType */ boolean, /* points */ Gdk.Point[] | null ]
    get_base_scale(): number
    get_base_size(): number
    get_builtin_pixbuf(): GdkPixbuf.Pixbuf | null
    get_display_name(): string
    get_embedded_rect(): [ /* returnType */ boolean, /* rectangle */ Gdk.Rectangle ]
    get_filename(): string
    is_symbolic(): boolean
    load_icon(): GdkPixbuf.Pixbuf
    load_icon_async(cancellable?: Gio.Cancellable | null, callback?: Gio.AsyncReadyCallback | null): void
    load_icon_finish(res: Gio.AsyncResult): GdkPixbuf.Pixbuf
    load_surface(for_window?: Gdk.Window | null): cairo.Surface
    load_symbolic(fg: Gdk.RGBA, success_color?: Gdk.RGBA | null, warning_color?: Gdk.RGBA | null, error_color?: Gdk.RGBA | null): [ /* returnType */ GdkPixbuf.Pixbuf, /* was_symbolic */ boolean | null ]
    load_symbolic_async(fg: Gdk.RGBA, success_color?: Gdk.RGBA | null, warning_color?: Gdk.RGBA | null, error_color?: Gdk.RGBA | null, cancellable?: Gio.Cancellable | null, callback?: Gio.AsyncReadyCallback | null): void
    load_symbolic_finish(res: Gio.AsyncResult): [ /* returnType */ GdkPixbuf.Pixbuf, /* was_symbolic */ boolean | null ]
    load_symbolic_for_context(context: StyleContext): [ /* returnType */ GdkPixbuf.Pixbuf, /* was_symbolic */ boolean | null ]
    load_symbolic_for_context_async(context: StyleContext, cancellable?: Gio.Cancellable | null, callback?: Gio.AsyncReadyCallback | null): void
    load_symbolic_for_context_finish(res: Gio.AsyncResult): [ /* returnType */ GdkPixbuf.Pixbuf, /* was_symbolic */ boolean | null ]
    load_symbolic_for_style(style: Style, state: StateType): [ /* returnType */ GdkPixbuf.Pixbuf, /* was_symbolic */ boolean | null ]
    set_raw_coordinates(raw_coordinates: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IconInfo_ConstructProps): IconInfo
    constructor (config?: IconInfo_ConstructProps)
    static new_for_pixbuf(icon_theme: IconTheme, pixbuf: GdkPixbuf.Pixbuf): IconInfo
}
export interface IconTheme_ConstructProps extends GObject.Object_ConstructProps {
}
export class IconTheme extends GObject.Object {
    /* Fields of Gtk.IconTheme */
    /* Methods of Gtk.IconTheme */
    add_resource_path(path: string): void
    append_search_path(path: string): void
    choose_icon(icon_names: string[], size: number, flags: IconLookupFlags): IconInfo | null
    choose_icon_for_scale(icon_names: string[], size: number, scale: number, flags: IconLookupFlags): IconInfo | null
    get_example_icon_name(): string | null
    get_icon_sizes(icon_name: string): number[]
    get_search_path(): /* path */ any
    has_icon(icon_name: string): boolean
    list_contexts(): string[]
    list_icons(context?: string | null): string[]
    load_icon(icon_name: string, size: number, flags: IconLookupFlags): GdkPixbuf.Pixbuf | null
    load_icon_for_scale(icon_name: string, size: number, scale: number, flags: IconLookupFlags): GdkPixbuf.Pixbuf | null
    load_surface(icon_name: string, size: number, scale: number, for_window: Gdk.Window | null, flags: IconLookupFlags): cairo.Surface | null
    lookup_by_gicon(icon: Gio.Icon, size: number, flags: IconLookupFlags): IconInfo | null
    lookup_by_gicon_for_scale(icon: Gio.Icon, size: number, scale: number, flags: IconLookupFlags): IconInfo | null
    lookup_icon(icon_name: string, size: number, flags: IconLookupFlags): IconInfo | null
    lookup_icon_for_scale(icon_name: string, size: number, scale: number, flags: IconLookupFlags): IconInfo | null
    prepend_search_path(path: string): void
    rescan_if_needed(): boolean
    set_custom_theme(theme_name?: string | null): void
    set_screen(screen: Gdk.Screen): void
    set_search_path(path: string): void
    /* Virtual methods of Gtk.IconTheme */
    vfunc_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IconTheme */
    connect(sigName: "changed", callback: ((obj: IconTheme) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IconTheme_ConstructProps): IconTheme
    constructor (config?: IconTheme_ConstructProps)
    static add_builtin_icon(icon_name: string, size: number, pixbuf: GdkPixbuf.Pixbuf): void
    static get_default(): IconTheme
    static get_for_screen(screen: Gdk.Screen): IconTheme
}
export interface IconView_ConstructProps extends Container_ConstructProps {
    activate_on_single_click?:boolean
    cell_area?:CellArea
    column_spacing?:number
    columns?:number
    item_orientation?:Orientation
    item_padding?:number
    item_width?:number
    margin?:number
    markup_column?:number
    model?:TreeModel
    pixbuf_column?:number
    reorderable?:boolean
    row_spacing?:number
    selection_mode?:SelectionMode
    spacing?:number
    text_column?:number
    tooltip_column?:number
}
export class IconView extends Container {
    /* Properties of Gtk.IconView */
    activate_on_single_click:boolean
    column_spacing:number
    columns:number
    item_orientation:Orientation
    item_padding:number
    item_width:number
    margin:number
    markup_column:number
    model:TreeModel
    pixbuf_column:number
    reorderable:boolean
    row_spacing:number
    selection_mode:SelectionMode
    spacing:number
    text_column:number
    tooltip_column:number
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.IconView */
    parent: any
    /* Methods of Gtk.IconView */
    convert_widget_to_bin_window_coords(wx: number, wy: number): [ /* bx */ number, /* by */ number ]
    create_drag_icon(path: TreePath): cairo.Surface
    enable_model_drag_dest(targets: TargetEntry[], actions: Gdk.DragAction): void
    enable_model_drag_source(start_button_mask: Gdk.ModifierType, targets: TargetEntry[], actions: Gdk.DragAction): void
    get_activate_on_single_click(): boolean
    get_cell_rect(path: TreePath, cell?: CellRenderer | null): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_column_spacing(): number
    get_columns(): number
    get_cursor(): [ /* returnType */ boolean, /* path */ TreePath | null, /* cell */ CellRenderer | null ]
    get_dest_item_at_pos(drag_x: number, drag_y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* pos */ IconViewDropPosition | null ]
    get_drag_dest_item(): [ /* path */ TreePath | null, /* pos */ IconViewDropPosition | null ]
    get_item_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* cell */ CellRenderer | null ]
    get_item_column(path: TreePath): number
    get_item_orientation(): Orientation
    get_item_padding(): number
    get_item_row(path: TreePath): number
    get_item_width(): number
    get_margin(): number
    get_markup_column(): number
    get_model(): TreeModel | null
    get_path_at_pos(x: number, y: number): TreePath | null
    get_pixbuf_column(): number
    get_reorderable(): boolean
    get_row_spacing(): number
    get_selected_items(): TreePath[]
    get_selection_mode(): SelectionMode
    get_spacing(): number
    get_text_column(): number
    get_tooltip_column(): number
    get_tooltip_context(x: number, y: number, keyboard_tip: boolean): [ /* returnType */ boolean, /* model */ TreeModel | null, /* path */ TreePath | null, /* iter */ TreeIter | null ]
    get_visible_range(): [ /* returnType */ boolean, /* start_path */ TreePath | null, /* end_path */ TreePath | null ]
    item_activated(path: TreePath): void
    path_is_selected(path: TreePath): boolean
    scroll_to_path(path: TreePath, use_align: boolean, row_align: number, col_align: number): void
    select_all(): void
    select_path(path: TreePath): void
    selected_foreach(func: IconViewForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_column_spacing(column_spacing: number): void
    set_columns(columns: number): void
    set_cursor(path: TreePath, cell: CellRenderer | null, start_editing: boolean): void
    set_drag_dest_item(path: TreePath | null, pos: IconViewDropPosition): void
    set_item_orientation(orientation: Orientation): void
    set_item_padding(item_padding: number): void
    set_item_width(item_width: number): void
    set_margin(margin: number): void
    set_markup_column(column: number): void
    set_model(model?: TreeModel | null): void
    set_pixbuf_column(column: number): void
    set_reorderable(reorderable: boolean): void
    set_row_spacing(row_spacing: number): void
    set_selection_mode(mode: SelectionMode): void
    set_spacing(spacing: number): void
    set_text_column(column: number): void
    set_tooltip_cell(tooltip: Tooltip, path: TreePath, cell?: CellRenderer | null): void
    set_tooltip_column(column: number): void
    set_tooltip_item(tooltip: Tooltip, path: TreePath): void
    unselect_all(): void
    unselect_path(path: TreePath): void
    unset_model_drag_dest(): void
    unset_model_drag_source(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    add_attribute(cell: CellRenderer, attribute: string, column: number): void
    clear(): void
    clear_attributes(cell: CellRenderer): void
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    reorder(cell: CellRenderer, position: number): void
    set_cell_data_func(cell: CellRenderer, func: CellLayoutDataFunc | null, destroy: GLib.DestroyNotify): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hadjustment(): Adjustment
    get_hscroll_policy(): ScrollablePolicy
    get_vadjustment(): Adjustment
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.IconView */
    vfunc_activate_cursor_item?(): boolean
    vfunc_item_activated?(path: TreePath): void
    vfunc_move_cursor?(step: MovementStep, count: number): boolean
    vfunc_select_all?(): void
    vfunc_select_cursor_item?(): void
    vfunc_selection_changed?(): void
    vfunc_toggle_cursor_item?(): void
    vfunc_unselect_all?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.IconView */
    connect(sigName: "activate-cursor-item", callback: ((obj: IconView) => boolean))
    connect(sigName: "item-activated", callback: ((obj: IconView, path: TreePath) => void))
    connect(sigName: "move-cursor", callback: ((obj: IconView, step: MovementStep, count: number) => boolean))
    connect(sigName: "select-all", callback: ((obj: IconView) => void))
    connect(sigName: "select-cursor-item", callback: ((obj: IconView) => void))
    connect(sigName: "selection-changed", callback: ((obj: IconView) => void))
    connect(sigName: "toggle-cursor-item", callback: ((obj: IconView) => void))
    connect(sigName: "unselect-all", callback: ((obj: IconView) => void))
    connect(sigName: "notify::activate-on-single-click", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::column-spacing", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::columns", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::item-orientation", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::item-padding", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::item-width", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::markup-column", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf-column", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reorderable", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-spacing", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-mode", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-column", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-column", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: IconView, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IconView_ConstructProps): IconView
    constructor (config?: IconView_ConstructProps)
    static new_with_area(area: CellArea): IconView
    static new_with_model(model: TreeModel): IconView
}
export interface IconViewAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class IconViewAccessible extends ContainerAccessible {
    /* Fields of Gtk.IconViewAccessible */
    parent: any
    priv:IconViewAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: IconViewAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: IconViewAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: IconViewAccessible_ConstructProps): IconViewAccessible
    constructor (config?: IconViewAccessible_ConstructProps)
}
export interface Image_ConstructProps extends Misc_ConstructProps {
    file?:string
    gicon?:Gio.Icon
    icon_name?:string
    icon_set?:IconSet
    icon_size?:number
    pixbuf?:GdkPixbuf.Pixbuf
    pixbuf_animation?:GdkPixbuf.PixbufAnimation
    pixel_size?:number
    resource?:string
    stock?:string
    surface?:cairo.Surface
    use_fallback?:boolean
}
export class Image extends Misc {
    /* Properties of Gtk.Image */
    file:string
    gicon:Gio.Icon
    icon_name:string
    icon_set:IconSet
    icon_size:number
    pixbuf:GdkPixbuf.Pixbuf
    pixbuf_animation:GdkPixbuf.PixbufAnimation
    pixel_size:number
    resource:string
    stock:string
    readonly storage_type:ImageType
    surface:cairo.Surface
    use_fallback:boolean
    /* Fields of Gtk.Image */
    misc:Misc
    /* Methods of Gtk.Image */
    clear(): void
    get_animation(): GdkPixbuf.PixbufAnimation | null
    get_gicon(): [ /* gicon */ Gio.Icon | null, /* size */ number | null ]
    get_icon_name(): [ /* icon_name */ string | null, /* size */ number | null ]
    get_icon_set(): [ /* icon_set */ IconSet | null, /* size */ number | null ]
    get_pixbuf(): GdkPixbuf.Pixbuf | null
    get_pixel_size(): number
    get_stock(): [ /* stock_id */ string | null, /* size */ number | null ]
    get_storage_type(): ImageType
    set_from_animation(animation: GdkPixbuf.PixbufAnimation): void
    set_from_file(filename?: string): void
    set_from_gicon(icon: Gio.Icon, size: number): void
    set_from_icon_name(icon_name: string | null, size: number): void
    set_from_icon_set(icon_set: IconSet, size: number): void
    set_from_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_from_resource(resource_path?: string | null): void
    set_from_stock(stock_id: string, size: number): void
    set_from_surface(surface?: cairo.Surface | null): void
    set_pixel_size(pixel_size: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::file", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gicon", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-set", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-size", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf-animation", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixel-size", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resource", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::storage-type", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::surface", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-fallback", callback: ((obj: Image, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Image_ConstructProps): Image
    constructor (config?: Image_ConstructProps)
    static new_from_animation(animation: GdkPixbuf.PixbufAnimation): Image
    static new_from_file(filename: string): Image
    static new_from_gicon(icon: Gio.Icon, size: number): Image
    static new_from_icon_name(icon_name: string | null, size: number): Image
    static new_from_icon_set(icon_set: IconSet, size: number): Image
    static new_from_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): Image
    static new_from_resource(resource_path: string): Image
    static new_from_stock(stock_id: string, size: number): Image
    static new_from_surface(surface?: cairo.Surface | null): Image
}
export interface ImageAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class ImageAccessible extends WidgetAccessible {
    /* Fields of Gtk.ImageAccessible */
    parent: any
    priv:ImageAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ImageAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ImageAccessible_ConstructProps): ImageAccessible
    constructor (config?: ImageAccessible_ConstructProps)
}
export interface ImageCellAccessible_ConstructProps extends RendererCellAccessible_ConstructProps {
}
export class ImageCellAccessible extends RendererCellAccessible {
    /* Fields of Gtk.ImageCellAccessible */
    parent: any
    priv:ImageCellAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ImageCellAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ImageCellAccessible_ConstructProps): ImageCellAccessible
    constructor (config?: ImageCellAccessible_ConstructProps)
}
export interface ImageMenuItem_ConstructProps extends MenuItem_ConstructProps {
    accel_group?:AccelGroup
    always_show_image?:boolean
    image?:Widget
    use_stock?:boolean
}
export class ImageMenuItem extends MenuItem {
    /* Properties of Gtk.ImageMenuItem */
    accel_group:AccelGroup
    always_show_image:boolean
    image:Widget
    use_stock:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.ImageMenuItem */
    menu_item:MenuItem
    /* Methods of Gtk.ImageMenuItem */
    get_always_show_image(): boolean
    get_image(): Widget
    get_use_stock(): boolean
    set_accel_group(accel_group: AccelGroup): void
    set_always_show_image(always_show: boolean): void
    set_image(image?: Widget | null): void
    set_use_stock(use_stock: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-group", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::always-show-image", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-stock", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ImageMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ImageMenuItem_ConstructProps): ImageMenuItem
    constructor (config?: ImageMenuItem_ConstructProps)
    static new_from_stock(stock_id: string, accel_group?: AccelGroup | null): ImageMenuItem
    static new_with_label(label: string): ImageMenuItem
    static new_with_mnemonic(label: string): ImageMenuItem
}
export interface InfoBar_ConstructProps extends Box_ConstructProps {
    message_type?:MessageType
    show_close_button?:boolean
}
export class InfoBar extends Box {
    /* Properties of Gtk.InfoBar */
    message_type:MessageType
    show_close_button:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.InfoBar */
    parent: any
    /* Methods of Gtk.InfoBar */
    add_action_widget(child: Widget, response_id: number): void
    add_button(button_text: string, response_id: number): Button
    get_action_area(): Widget
    get_content_area(): Widget
    get_message_type(): MessageType
    get_show_close_button(): boolean
    response(response_id: number): void
    set_default_response(response_id: number): void
    set_message_type(message_type: MessageType): void
    set_response_sensitive(response_id: number, setting: boolean): void
    set_show_close_button(setting: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.InfoBar */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.InfoBar */
    connect(sigName: "close", callback: ((obj: InfoBar) => void))
    connect(sigName: "response", callback: ((obj: InfoBar, response_id: number) => void))
    connect(sigName: "notify::message-type", callback: ((obj: InfoBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-close-button", callback: ((obj: InfoBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: InfoBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: InfoBar_ConstructProps): InfoBar
    constructor (config?: InfoBar_ConstructProps)
}
export interface Invisible_ConstructProps extends Widget_ConstructProps {
    screen?:Gdk.Screen
}
export class Invisible extends Widget {
    /* Properties of Gtk.Invisible */
    screen:Gdk.Screen
    /* Fields of Gtk.Invisible */
    widget:Widget
    /* Methods of Gtk.Invisible */
    get_screen(): Gdk.Screen
    set_screen(screen: Gdk.Screen): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::screen", callback: ((obj: Invisible, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Invisible_ConstructProps): Invisible
    constructor (config?: Invisible_ConstructProps)
    static new_for_screen(screen: Gdk.Screen): Invisible
}
export interface Label_ConstructProps extends Misc_ConstructProps {
    angle?:number
    attributes?:Pango.AttrList
    ellipsize?:Pango.EllipsizeMode
    justify?:Justification
    label?:string
    lines?:number
    max_width_chars?:number
    mnemonic_widget?:Widget
    pattern?:string
    selectable?:boolean
    single_line_mode?:boolean
    track_visited_links?:boolean
    use_markup?:boolean
    use_underline?:boolean
    width_chars?:number
    wrap?:boolean
    wrap_mode?:Pango.WrapMode
    xalign?:number
    yalign?:number
}
export class Label extends Misc {
    /* Properties of Gtk.Label */
    angle:number
    attributes:Pango.AttrList
    readonly cursor_position:number
    ellipsize:Pango.EllipsizeMode
    justify:Justification
    label:string
    lines:number
    max_width_chars:number
    readonly mnemonic_keyval:number
    mnemonic_widget:Widget
    pattern:string
    selectable:boolean
    readonly selection_bound:number
    single_line_mode:boolean
    track_visited_links:boolean
    use_markup:boolean
    use_underline:boolean
    width_chars:number
    wrap:boolean
    wrap_mode:Pango.WrapMode
    xalign:number
    yalign:number
    /* Fields of Gtk.Label */
    misc:Misc
    /* Methods of Gtk.Label */
    get_angle(): number
    get_attributes(): Pango.AttrList | null
    get_current_uri(): string
    get_ellipsize(): Pango.EllipsizeMode
    get_justify(): Justification
    get_label(): string
    get_layout(): Pango.Layout
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_line_wrap(): boolean
    get_line_wrap_mode(): Pango.WrapMode
    get_lines(): number
    get_max_width_chars(): number
    get_mnemonic_keyval(): number
    get_mnemonic_widget(): Widget | null
    get_selectable(): boolean
    get_selection_bounds(): [ /* returnType */ boolean, /* start */ number, /* end */ number ]
    get_single_line_mode(): boolean
    get_text(): string
    get_track_visited_links(): boolean
    get_use_markup(): boolean
    get_use_underline(): boolean
    get_width_chars(): number
    get_xalign(): number
    get_yalign(): number
    select_region(start_offset: number, end_offset: number): void
    set_angle(angle: number): void
    set_attributes(attrs?: Pango.AttrList | null): void
    set_ellipsize(mode: Pango.EllipsizeMode): void
    set_justify(jtype: Justification): void
    set_label(str: string): void
    set_line_wrap(wrap: boolean): void
    set_line_wrap_mode(wrap_mode: Pango.WrapMode): void
    set_lines(lines: number): void
    set_markup(str: string): void
    set_markup_with_mnemonic(str: string): void
    set_max_width_chars(n_chars: number): void
    set_mnemonic_widget(widget?: Widget | null): void
    set_pattern(pattern: string): void
    set_selectable(setting: boolean): void
    set_single_line_mode(single_line_mode: boolean): void
    set_text(str: string): void
    set_text_with_mnemonic(str: string): void
    set_track_visited_links(track_links: boolean): void
    set_use_markup(setting: boolean): void
    set_use_underline(setting: boolean): void
    set_width_chars(n_chars: number): void
    set_xalign(xalign: number): void
    set_yalign(yalign: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Label */
    vfunc_activate_link?(uri: string): boolean
    vfunc_copy_clipboard?(): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_populate_popup?(menu: Menu): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Label */
    connect(sigName: "activate-current-link", callback: ((obj: Label) => void))
    connect(sigName: "activate-link", callback: ((obj: Label, uri: string) => boolean))
    connect(sigName: "copy-clipboard", callback: ((obj: Label) => void))
    connect(sigName: "move-cursor", callback: ((obj: Label, step: MovementStep, count: number, extend_selection: boolean) => void))
    connect(sigName: "populate-popup", callback: ((obj: Label, menu: Menu) => void))
    connect(sigName: "notify::angle", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursor-position", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ellipsize", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::justify", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lines", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-width-chars", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonic-keyval", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonic-widget", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pattern", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selectable", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-bound", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::single-line-mode", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::track-visited-links", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-markup", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-chars", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: Label, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Label_ConstructProps): Label
    constructor (config?: Label_ConstructProps)
    static new_with_mnemonic(str?: string | null): Label
}
export interface LabelAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class LabelAccessible extends WidgetAccessible {
    /* Fields of Gtk.LabelAccessible */
    parent: any
    priv:LabelAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Hypertext */
    get_link(link_index: number): Atk.Hyperlink
    get_link_index(char_index: number): number
    get_n_links(): number
    /* Methods of Atk.Text */
    add_selection(start_offset: number, end_offset: number): boolean
    get_bounded_ranges(rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType): Atk.TextRange[]
    get_caret_offset(): number
    get_character_at_offset(offset: number): number
    get_character_count(): number
    get_character_extents(offset: number, coords: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_default_attributes(): Atk.AttributeSet
    get_n_selections(): number
    get_offset_at_point(x: number, y: number, coords: Atk.CoordType): number
    get_range_extents(start_offset: number, end_offset: number, coord_type: Atk.CoordType): /* rect */ Atk.TextRectangle
    get_run_attributes(offset: number): [ /* returnType */ Atk.AttributeSet, /* start_offset */ number, /* end_offset */ number ]
    get_selection(selection_num: number): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_string_at_offset(offset: number, granularity: Atk.TextGranularity): [ /* returnType */ string | null, /* start_offset */ number, /* end_offset */ number ]
    get_text(start_offset: number, end_offset: number): string
    get_text_after_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_at_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_before_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    remove_selection(selection_num: number): boolean
    set_caret_offset(offset: number): boolean
    set_selection(selection_num: number, start_offset: number, end_offset: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: LabelAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Hypertext */
    connect(sigName: "link-selected", callback: ((obj: LabelAccessible, arg1: number) => void))
    /* Signals of Atk.Text */
    connect(sigName: "text-attributes-changed", callback: ((obj: LabelAccessible) => void))
    connect(sigName: "text-caret-moved", callback: ((obj: LabelAccessible, arg1: number) => void))
    connect(sigName: "text-changed", callback: ((obj: LabelAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "text-insert", callback: ((obj: LabelAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-remove", callback: ((obj: LabelAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-selection-changed", callback: ((obj: LabelAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LabelAccessible_ConstructProps): LabelAccessible
    constructor (config?: LabelAccessible_ConstructProps)
}
export interface Layout_ConstructProps extends Container_ConstructProps {
    height?:number
    width?:number
}
export class Layout extends Container {
    /* Properties of Gtk.Layout */
    height:number
    width:number
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.Layout */
    container:Container
    /* Methods of Gtk.Layout */
    get_bin_window(): Gdk.Window
    get_hadjustment(): Adjustment
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    get_vadjustment(): Adjustment
    move(child_widget: Widget, x: number, y: number): void
    put(child_widget: Widget, x: number, y: number): void
    set_hadjustment(adjustment?: Adjustment | null): void
    set_size(width: number, height: number): void
    set_vadjustment(adjustment?: Adjustment | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hscroll_policy(): ScrollablePolicy
    get_vscroll_policy(): ScrollablePolicy
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::height", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: Layout, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Layout_ConstructProps): Layout
    constructor (config?: Layout_ConstructProps)
}
export interface LevelBar_ConstructProps extends Widget_ConstructProps {
    inverted?:boolean
    max_value?:number
    min_value?:number
    mode?:LevelBarMode
    value?:number
}
export class LevelBar extends Widget {
    /* Properties of Gtk.LevelBar */
    inverted:boolean
    max_value:number
    min_value:number
    mode:LevelBarMode
    value:number
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.LevelBar */
    /* Methods of Gtk.LevelBar */
    add_offset_value(name: string, value: number): void
    get_inverted(): boolean
    get_max_value(): number
    get_min_value(): number
    get_mode(): LevelBarMode
    get_offset_value(name?: string | null): [ /* returnType */ boolean, /* value */ number ]
    get_value(): number
    remove_offset_value(name?: string | null): void
    set_inverted(inverted: boolean): void
    set_max_value(value: number): void
    set_min_value(value: number): void
    set_mode(mode: LevelBarMode): void
    set_value(value: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.LevelBar */
    vfunc_offset_changed?(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.LevelBar */
    connect(sigName: "offset-changed", callback: ((obj: LevelBar, name: string) => void))
    connect(sigName: "notify::inverted", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-value", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-value", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mode", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: LevelBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LevelBar_ConstructProps): LevelBar
    constructor (config?: LevelBar_ConstructProps)
    static new_for_interval(min_value: number, max_value: number): LevelBar
}
export interface LevelBarAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class LevelBarAccessible extends WidgetAccessible {
    /* Fields of Gtk.LevelBarAccessible */
    parent: any
    priv:LevelBarAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: LevelBarAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: LevelBarAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LevelBarAccessible_ConstructProps): LevelBarAccessible
    constructor (config?: LevelBarAccessible_ConstructProps)
}
export interface LinkButton_ConstructProps extends Button_ConstructProps {
    uri?:string
    visited?:boolean
}
export class LinkButton extends Button {
    /* Properties of Gtk.LinkButton */
    uri:string
    visited:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.LinkButton */
    /* Methods of Gtk.LinkButton */
    get_uri(): string
    get_visited(): boolean
    set_uri(uri: string): void
    set_visited(visited: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.LinkButton */
    vfunc_activate_link?(): boolean
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.LinkButton */
    connect(sigName: "activate-link", callback: ((obj: LinkButton) => boolean))
    connect(sigName: "notify::uri", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visited", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: LinkButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LinkButton_ConstructProps): LinkButton
    constructor (config?: LinkButton_ConstructProps)
    static new_with_label(uri: string, label?: string | null): LinkButton
}
export interface LinkButtonAccessible_ConstructProps extends ButtonAccessible_ConstructProps {
}
export class LinkButtonAccessible extends ButtonAccessible {
    /* Fields of Gtk.LinkButtonAccessible */
    parent: any
    priv:LinkButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.HyperlinkImpl */
    get_hyperlink(): Atk.Hyperlink
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: LinkButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LinkButtonAccessible_ConstructProps): LinkButtonAccessible
    constructor (config?: LinkButtonAccessible_ConstructProps)
}
export interface ListBox_ConstructProps extends Container_ConstructProps {
    activate_on_single_click?:boolean
    selection_mode?:SelectionMode
}
export class ListBox extends Container {
    /* Properties of Gtk.ListBox */
    activate_on_single_click:boolean
    selection_mode:SelectionMode
    /* Fields of Gtk.ListBox */
    parent_instance:Container
    /* Methods of Gtk.ListBox */
    bind_model(model: Gio.ListModel | null, create_widget_func: ListBoxCreateWidgetFunc | null, user_data_free_func: GLib.DestroyNotify): void
    drag_highlight_row(row: ListBoxRow): void
    drag_unhighlight_row(): void
    get_activate_on_single_click(): boolean
    get_adjustment(): Adjustment
    get_row_at_index(index_: number): ListBoxRow | null
    get_row_at_y(y: number): ListBoxRow | null
    get_selected_row(): ListBoxRow
    get_selected_rows(): ListBoxRow[]
    get_selection_mode(): SelectionMode
    insert(child: Widget, position: number): void
    invalidate_filter(): void
    invalidate_headers(): void
    invalidate_sort(): void
    prepend(child: Widget): void
    select_all(): void
    select_row(row?: ListBoxRow | null): void
    selected_foreach(func: ListBoxForeachFunc): void
    set_activate_on_single_click(single: boolean): void
    set_adjustment(adjustment?: Adjustment | null): void
    set_filter_func(filter_func: ListBoxFilterFunc | null, destroy: GLib.DestroyNotify): void
    set_header_func(update_header: ListBoxUpdateHeaderFunc | null, destroy: GLib.DestroyNotify): void
    set_placeholder(placeholder?: Widget | null): void
    set_selection_mode(mode: SelectionMode): void
    set_sort_func(sort_func: ListBoxSortFunc | null, destroy: GLib.DestroyNotify): void
    unselect_all(): void
    unselect_row(row: ListBoxRow): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ListBox */
    vfunc_activate_cursor_row?(): void
    vfunc_move_cursor?(step: MovementStep, count: number): void
    vfunc_row_activated?(row: ListBoxRow): void
    vfunc_row_selected?(row: ListBoxRow): void
    vfunc_select_all?(): void
    vfunc_selected_rows_changed?(): void
    vfunc_toggle_cursor_row?(): void
    vfunc_unselect_all?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ListBox */
    connect(sigName: "activate-cursor-row", callback: ((obj: ListBox) => void))
    connect(sigName: "move-cursor", callback: ((obj: ListBox, object: MovementStep, p0: number) => void))
    connect(sigName: "row-activated", callback: ((obj: ListBox, row: ListBoxRow) => void))
    connect(sigName: "row-selected", callback: ((obj: ListBox, row?: ListBoxRow | null) => void))
    connect(sigName: "select-all", callback: ((obj: ListBox) => void))
    connect(sigName: "selected-rows-changed", callback: ((obj: ListBox) => void))
    connect(sigName: "toggle-cursor-row", callback: ((obj: ListBox) => void))
    connect(sigName: "unselect-all", callback: ((obj: ListBox) => void))
    connect(sigName: "notify::activate-on-single-click", callback: ((obj: ListBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-mode", callback: ((obj: ListBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ListBox_ConstructProps): ListBox
    constructor (config?: ListBox_ConstructProps)
}
export interface ListBoxAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ListBoxAccessible extends ContainerAccessible {
    /* Fields of Gtk.ListBoxAccessible */
    parent: any
    priv:ListBoxAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ListBoxAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: ListBoxAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ListBoxAccessible_ConstructProps): ListBoxAccessible
    constructor (config?: ListBoxAccessible_ConstructProps)
}
export interface ListBoxRow_ConstructProps extends Bin_ConstructProps {
    activatable?:boolean
    selectable?:boolean
}
export class ListBoxRow extends Bin {
    /* Properties of Gtk.ListBoxRow */
    activatable:boolean
    selectable:boolean
    /* Fields of Gtk.ListBoxRow */
    parent_instance:Bin
    /* Methods of Gtk.ListBoxRow */
    changed(): void
    get_activatable(): boolean
    get_header(): Widget | null
    get_index(): number
    get_selectable(): boolean
    is_selected(): boolean
    set_activatable(activatable: boolean): void
    set_header(header?: Widget | null): void
    set_selectable(selectable: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ListBoxRow */
    vfunc_activate?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ListBoxRow */
    connect(sigName: "activate", callback: ((obj: ListBoxRow) => void))
    connect(sigName: "notify::activatable", callback: ((obj: ListBoxRow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selectable", callback: ((obj: ListBoxRow, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ListBoxRow_ConstructProps): ListBoxRow
    constructor (config?: ListBoxRow_ConstructProps)
}
export interface ListBoxRowAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ListBoxRowAccessible extends ContainerAccessible {
    /* Fields of Gtk.ListBoxRowAccessible */
    parent: any
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ListBoxRowAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ListBoxRowAccessible_ConstructProps): ListBoxRowAccessible
    constructor (config?: ListBoxRowAccessible_ConstructProps)
}
export interface ListStore_ConstructProps extends GObject.Object_ConstructProps {
}
export class ListStore extends GObject.Object {
    /* Fields of Gtk.ListStore */
    parent: any
    /* Methods of Gtk.ListStore */
    append(): /* iter */ TreeIter
    clear(): void
    insert(position: number): /* iter */ TreeIter
    insert_after(sibling?: TreeIter | null): /* iter */ TreeIter
    insert_before(sibling?: TreeIter | null): /* iter */ TreeIter
    insert_with_valuesv(position: number, columns: number[], values: any): /* iter */ TreeIter | null
    iter_is_valid(iter: TreeIter): boolean
    move_after(iter: TreeIter, position?: TreeIter | null): void
    move_before(iter: TreeIter, position?: TreeIter | null): void
    prepend(): /* iter */ TreeIter
    remove(iter: TreeIter): boolean
    reorder(new_order: number[]): void
    set_column_types(types: number): void
    set_value(iter: TreeIter, column: number, value: any): void
    set(iter: TreeIter, columns: number[], values: any): void
    swap(a: TreeIter, b: TreeIter): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, selection_data: SelectionData): boolean
    row_drop_possible(dest_path: TreePath, selection_data: SelectionData): boolean
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath, selection_data: SelectionData): boolean
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): number
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    sort_new_with_model(): TreeModel
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: ((obj: ListStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-deleted", callback: ((obj: ListStore, path: TreePath) => void))
    connect(sigName: "row-has-child-toggled", callback: ((obj: ListStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-inserted", callback: ((obj: ListStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "rows-reordered", callback: ((obj: ListStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void))
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: ((obj: ListStore) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ListStore_ConstructProps): ListStore
    constructor (config?: ListStore_ConstructProps)
}
export interface LockButton_ConstructProps extends Button_ConstructProps {
    permission?:Gio.Permission
    text_lock?:string
    text_unlock?:string
    tooltip_lock?:string
    tooltip_not_authorized?:string
    tooltip_unlock?:string
}
export class LockButton extends Button {
    /* Properties of Gtk.LockButton */
    permission:Gio.Permission
    text_lock:string
    text_unlock:string
    tooltip_lock:string
    tooltip_not_authorized:string
    tooltip_unlock:string
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.LockButton */
    parent: any
    priv:LockButtonPrivate
    /* Methods of Gtk.LockButton */
    get_permission(): Gio.Permission
    set_permission(permission?: Gio.Permission | null): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::permission", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-lock", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-unlock", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-lock", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-not-authorized", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-unlock", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: LockButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LockButton_ConstructProps): LockButton
    constructor (config?: LockButton_ConstructProps)
}
export interface LockButtonAccessible_ConstructProps extends ButtonAccessible_ConstructProps {
}
export class LockButtonAccessible extends ButtonAccessible {
    /* Fields of Gtk.LockButtonAccessible */
    parent: any
    priv:LockButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: LockButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: LockButtonAccessible_ConstructProps): LockButtonAccessible
    constructor (config?: LockButtonAccessible_ConstructProps)
}
export interface Menu_ConstructProps extends MenuShell_ConstructProps {
    accel_group?:AccelGroup
    accel_path?:string
    active?:number
    anchor_hints?:Gdk.AnchorHints
    attach_widget?:Widget
    menu_type_hint?:Gdk.WindowTypeHint
    monitor?:number
    rect_anchor_dx?:number
    rect_anchor_dy?:number
    reserve_toggle_size?:boolean
    tearoff_state?:boolean
    tearoff_title?:string
}
export class Menu extends MenuShell {
    /* Properties of Gtk.Menu */
    accel_group:AccelGroup
    accel_path:string
    active:number
    anchor_hints:Gdk.AnchorHints
    attach_widget:Widget
    menu_type_hint:Gdk.WindowTypeHint
    monitor:number
    rect_anchor_dx:number
    rect_anchor_dy:number
    reserve_toggle_size:boolean
    tearoff_state:boolean
    tearoff_title:string
    /* Fields of Gtk.Menu */
    menu_shell:MenuShell
    /* Methods of Gtk.Menu */
    attach(child: Widget, left_attach: number, right_attach: number, top_attach: number, bottom_attach: number): void
    attach_to_widget(attach_widget: Widget, detacher?: MenuDetachFunc | null): void
    detach(): void
    get_accel_group(): AccelGroup
    get_accel_path(): string
    get_active(): Widget
    get_attach_widget(): Widget
    get_monitor(): number
    get_reserve_toggle_size(): boolean
    get_tearoff_state(): boolean
    get_title(): string
    place_on_monitor(monitor: Gdk.Monitor): void
    popdown(): void
    popup(parent_menu_shell: Widget | null, parent_menu_item: Widget | null, func: MenuPositionFunc | null, button: number, activate_time: number): void
    popup_at_pointer(trigger_event?: Gdk.Event | null): void
    popup_at_rect(rect_window: Gdk.Window, rect: Gdk.Rectangle, rect_anchor: Gdk.Gravity, menu_anchor: Gdk.Gravity, trigger_event?: Gdk.Event | null): void
    popup_at_widget(widget: Widget, widget_anchor: Gdk.Gravity, menu_anchor: Gdk.Gravity, trigger_event?: Gdk.Event | null): void
    popup_for_device(device: Gdk.Device | null, parent_menu_shell: Widget | null, parent_menu_item: Widget | null, func: MenuPositionFunc | null, destroy: GLib.DestroyNotify | null, button: number, activate_time: number): void
    reorder_child(child: Widget, position: number): void
    reposition(): void
    set_accel_group(accel_group?: AccelGroup | null): void
    set_accel_path(accel_path?: string | null): void
    set_active(index: number): void
    set_monitor(monitor_num: number): void
    set_reserve_toggle_size(reserve_toggle_size: boolean): void
    set_screen(screen?: Gdk.Screen | null): void
    set_tearoff_state(torn_off: boolean): void
    set_title(title: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuShell */
    vfunc_activate_current?(force_hide: boolean): void
    vfunc_cancel?(): void
    vfunc_deactivate?(): void
    vfunc_get_popup_delay?(): number
    vfunc_insert?(child: Widget, position: number): void
    vfunc_move_current?(direction: MenuDirectionType): void
    vfunc_move_selected?(distance: number): boolean
    vfunc_select_item?(menu_item: Widget): void
    vfunc_selection_done?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Menu */
    connect(sigName: "move-scroll", callback: ((obj: Menu, scroll_type: ScrollType) => void))
    connect(sigName: "popped-up", callback: ((obj: Menu, flipped_rect: object | null, final_rect: object | null, flipped_x: boolean, flipped_y: boolean) => void))
    connect(sigName: "notify::accel-group", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accel-path", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::anchor-hints", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attach-widget", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menu-type-hint", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::monitor", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rect-anchor-dx", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rect-anchor-dy", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reserve-toggle-size", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tearoff-state", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tearoff-title", callback: ((obj: Menu, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Menu_ConstructProps): Menu
    constructor (config?: Menu_ConstructProps)
    static new_from_model(model: Gio.MenuModel): Menu
    static get_for_attach_widget(widget: Widget): Widget[]
}
export interface MenuAccessible_ConstructProps extends MenuShellAccessible_ConstructProps {
}
export class MenuAccessible extends MenuShellAccessible {
    /* Fields of Gtk.MenuAccessible */
    parent: any
    priv:MenuAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: MenuAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: MenuAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuAccessible_ConstructProps): MenuAccessible
    constructor (config?: MenuAccessible_ConstructProps)
}
export interface MenuBar_ConstructProps extends MenuShell_ConstructProps {
    child_pack_direction?:PackDirection
    pack_direction?:PackDirection
}
export class MenuBar extends MenuShell {
    /* Properties of Gtk.MenuBar */
    child_pack_direction:PackDirection
    pack_direction:PackDirection
    /* Fields of Gtk.MenuBar */
    menu_shell:MenuShell
    /* Methods of Gtk.MenuBar */
    get_child_pack_direction(): PackDirection
    get_pack_direction(): PackDirection
    set_child_pack_direction(child_pack_dir: PackDirection): void
    set_pack_direction(pack_dir: PackDirection): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuShell */
    vfunc_activate_current?(force_hide: boolean): void
    vfunc_cancel?(): void
    vfunc_deactivate?(): void
    vfunc_get_popup_delay?(): number
    vfunc_insert?(child: Widget, position: number): void
    vfunc_move_current?(direction: MenuDirectionType): void
    vfunc_move_selected?(distance: number): boolean
    vfunc_select_item?(menu_item: Widget): void
    vfunc_selection_done?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child-pack-direction", callback: ((obj: MenuBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pack-direction", callback: ((obj: MenuBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuBar_ConstructProps): MenuBar
    constructor (config?: MenuBar_ConstructProps)
    static new_from_model(model: Gio.MenuModel): MenuBar
}
export interface MenuButton_ConstructProps extends ToggleButton_ConstructProps {
    align_widget?:Container
    direction?:ArrowType
    menu_model?:Gio.MenuModel
    popover?:Popover
    popup?:Menu
    use_popover?:boolean
}
export class MenuButton extends GObject.InitiallyUnowned {
    /* Properties of Gtk.MenuButton */
    align_widget:Container
    direction:ArrowType
    menu_model:Gio.MenuModel
    popover:Popover
    popup:Menu
    use_popover:boolean
    /* Properties of Gtk.ToggleButton */
    active:boolean
    draw_indicator:boolean
    inconsistent:boolean
    /* Properties of Gtk.Button */
    always_show_image:boolean
    image:Widget
    image_position:PositionType
    label:string
    relief:ReliefStyle
    use_stock:boolean
    use_underline:boolean
    xalign:number
    yalign:number
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.MenuButton */
    /* Fields of Gtk.ToggleButton */
    /* Fields of Gtk.Button */
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.MenuButton */
    get_align_widget(): Widget | null
    get_direction(): ArrowType
    get_menu_model(): Gio.MenuModel | null
    get_popover(): Popover | null
    get_popup(): Menu | null
    get_use_popover(): boolean
    set_align_widget(align_widget?: Widget | null): void
    set_direction(direction: ArrowType): void
    set_menu_model(menu_model?: Gio.MenuModel | null): void
    set_popover(popover?: Widget | null): void
    set_popup(menu?: Widget | null): void
    set_use_popover(use_popover: boolean): void
    /* Methods of Gtk.ToggleButton */
    get_active(): boolean
    get_inconsistent(): boolean
    get_mode(): boolean
    set_active(is_active: boolean): void
    set_inconsistent(setting: boolean): void
    set_mode(draw_indicator: boolean): void
    toggled(): void
    /* Methods of Gtk.Button */
    clicked(): void
    enter(): void
    get_alignment(): [ /* xalign */ number, /* yalign */ number ]
    get_always_show_image(): boolean
    get_event_window(): Gdk.Window
    get_focus_on_click(): boolean
    get_image(): Widget | null
    get_image_position(): PositionType
    get_label(): string
    get_relief(): ReliefStyle
    get_use_stock(): boolean
    get_use_underline(): boolean
    leave(): void
    pressed(): void
    released(): void
    set_alignment(xalign: number, yalign: number): void
    set_always_show_image(always_show: boolean): void
    set_focus_on_click(focus_on_click: boolean): void
    set_image(image?: Widget | null): void
    set_image_position(position: PositionType): void
    set_label(label: string): void
    set_relief(relief: ReliefStyle): void
    set_use_stock(use_stock: boolean): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.ToggleButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleButton */
    connect(sigName: "toggled", callback: ((obj: MenuButton) => void))
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: ((obj: MenuButton) => void))
    connect(sigName: "clicked", callback: ((obj: MenuButton) => void))
    connect(sigName: "enter", callback: ((obj: MenuButton) => void))
    connect(sigName: "leave", callback: ((obj: MenuButton) => void))
    connect(sigName: "pressed", callback: ((obj: MenuButton) => void))
    connect(sigName: "released", callback: ((obj: MenuButton) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: MenuButton, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: MenuButton) => void))
    connect(sigName: "remove", callback: ((obj: MenuButton, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: MenuButton, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: MenuButton) => void))
    connect(sigName: "button-press-event", callback: ((obj: MenuButton, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: MenuButton, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: MenuButton, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: MenuButton, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: MenuButton) => void))
    connect(sigName: "configure-event", callback: ((obj: MenuButton, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: MenuButton, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: MenuButton, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: MenuButton) => void))
    connect(sigName: "destroy-event", callback: ((obj: MenuButton, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: MenuButton, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: MenuButton, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: MenuButton, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: MenuButton, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: MenuButton, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: MenuButton, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: MenuButton, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: MenuButton, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: MenuButton, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: MenuButton, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: MenuButton, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: MenuButton, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: MenuButton, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: MenuButton, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: MenuButton, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: MenuButton, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: MenuButton, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: MenuButton, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: MenuButton) => void))
    connect(sigName: "grab-notify", callback: ((obj: MenuButton, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: MenuButton) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: MenuButton, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: MenuButton, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: MenuButton, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: MenuButton, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: MenuButton, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: MenuButton) => void))
    connect(sigName: "map-event", callback: ((obj: MenuButton, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: MenuButton, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: MenuButton, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: MenuButton, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: MenuButton, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: MenuButton) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: MenuButton, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: MenuButton, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: MenuButton, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: MenuButton, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: MenuButton) => void))
    connect(sigName: "screen-changed", callback: ((obj: MenuButton, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: MenuButton, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: MenuButton, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: MenuButton, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: MenuButton, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: MenuButton, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: MenuButton, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: MenuButton) => void))
    connect(sigName: "show-help", callback: ((obj: MenuButton, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: MenuButton, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: MenuButton, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: MenuButton, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: MenuButton, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: MenuButton) => void))
    connect(sigName: "touch-event", callback: ((obj: MenuButton, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: MenuButton) => void))
    connect(sigName: "unmap-event", callback: ((obj: MenuButton, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: MenuButton) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: MenuButton, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: MenuButton, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::align-widget", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::direction", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menu-model", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popover", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::popup", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-popover", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-indicator", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::always-show-image", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image-position", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::relief", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-stock", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: MenuButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuButton_ConstructProps): MenuButton
    constructor (config?: MenuButton_ConstructProps)
}
export interface MenuButtonAccessible_ConstructProps extends ToggleButtonAccessible_ConstructProps {
}
export class MenuButtonAccessible extends ToggleButtonAccessible {
    /* Fields of Gtk.MenuButtonAccessible */
    parent: any
    priv:MenuButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: MenuButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuButtonAccessible_ConstructProps): MenuButtonAccessible
    constructor (config?: MenuButtonAccessible_ConstructProps)
}
export interface MenuItem_ConstructProps extends Bin_ConstructProps {
    accel_path?:string
    label?:string
    right_justified?:boolean
    submenu?:Menu
    use_underline?:boolean
}
export class MenuItem extends Bin {
    /* Properties of Gtk.MenuItem */
    accel_path:string
    label:string
    right_justified:boolean
    submenu:Menu
    use_underline:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.MenuItem */
    bin:Bin
    /* Methods of Gtk.MenuItem */
    deselect(): void
    get_accel_path(): string | null
    get_label(): string
    get_reserve_indicator(): boolean
    get_right_justified(): boolean
    get_submenu(): Widget | null
    get_use_underline(): boolean
    select(): void
    set_accel_path(accel_path?: string | null): void
    set_label(label: string): void
    set_reserve_indicator(reserve: boolean): void
    set_right_justified(right_justified: boolean): void
    set_submenu(submenu?: Menu | null): void
    set_use_underline(setting: boolean): void
    toggle_size_allocate(allocation: number): void
    toggle_size_request(requisition: number): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.MenuItem */
    connect(sigName: "activate", callback: ((obj: MenuItem) => void))
    connect(sigName: "activate-item", callback: ((obj: MenuItem) => void))
    connect(sigName: "deselect", callback: ((obj: MenuItem) => void))
    connect(sigName: "select", callback: ((obj: MenuItem) => void))
    connect(sigName: "toggle-size-allocate", callback: ((obj: MenuItem, object: number) => void))
    connect(sigName: "toggle-size-request", callback: ((obj: MenuItem, object?: object | null) => void))
    connect(sigName: "notify::accel-path", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-justified", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::submenu", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: MenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuItem_ConstructProps): MenuItem
    constructor (config?: MenuItem_ConstructProps)
    static new_with_label(label: string): MenuItem
    static new_with_mnemonic(label: string): MenuItem
}
export interface MenuItemAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class MenuItemAccessible extends ContainerAccessible {
    /* Fields of Gtk.MenuItemAccessible */
    parent: any
    priv:MenuItemAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: MenuItemAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: MenuItemAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuItemAccessible_ConstructProps): MenuItemAccessible
    constructor (config?: MenuItemAccessible_ConstructProps)
}
export interface MenuShell_ConstructProps extends Container_ConstructProps {
    take_focus?:boolean
}
export class MenuShell extends Container {
    /* Properties of Gtk.MenuShell */
    take_focus:boolean
    /* Fields of Gtk.MenuShell */
    container:Container
    /* Methods of Gtk.MenuShell */
    activate_item(menu_item: Widget, force_deactivate: boolean): void
    append(child: MenuItem): void
    bind_model(model: Gio.MenuModel | null, action_namespace: string | null, with_separators: boolean): void
    cancel(): void
    deactivate(): void
    deselect(): void
    get_parent_shell(): Widget
    get_selected_item(): Widget
    get_take_focus(): boolean
    insert(child: Widget, position: number): void
    prepend(child: Widget): void
    select_first(search_sensitive: boolean): void
    select_item(menu_item: Widget): void
    set_take_focus(take_focus: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuShell */
    vfunc_activate_current?(force_hide: boolean): void
    vfunc_cancel?(): void
    vfunc_deactivate?(): void
    vfunc_get_popup_delay?(): number
    vfunc_insert?(child: Widget, position: number): void
    vfunc_move_current?(direction: MenuDirectionType): void
    vfunc_move_selected?(distance: number): boolean
    vfunc_select_item?(menu_item: Widget): void
    vfunc_selection_done?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.MenuShell */
    connect(sigName: "activate-current", callback: ((obj: MenuShell, force_hide: boolean) => void))
    connect(sigName: "cancel", callback: ((obj: MenuShell) => void))
    connect(sigName: "cycle-focus", callback: ((obj: MenuShell, direction: DirectionType) => void))
    connect(sigName: "deactivate", callback: ((obj: MenuShell) => void))
    connect(sigName: "insert", callback: ((obj: MenuShell, child: Widget, position: number) => void))
    connect(sigName: "move-current", callback: ((obj: MenuShell, direction: MenuDirectionType) => void))
    connect(sigName: "move-selected", callback: ((obj: MenuShell, distance: number) => boolean))
    connect(sigName: "selection-done", callback: ((obj: MenuShell) => void))
    connect(sigName: "notify::take-focus", callback: ((obj: MenuShell, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuShell_ConstructProps): MenuShell
    constructor (config?: MenuShell_ConstructProps)
}
export interface MenuShellAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class MenuShellAccessible extends ContainerAccessible {
    /* Fields of Gtk.MenuShellAccessible */
    parent: any
    priv:MenuShellAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: MenuShellAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: MenuShellAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuShellAccessible_ConstructProps): MenuShellAccessible
    constructor (config?: MenuShellAccessible_ConstructProps)
}
export interface MenuToolButton_ConstructProps extends ToolButton_ConstructProps {
    menu?:Menu
}
export class MenuToolButton extends ToolButton {
    /* Properties of Gtk.MenuToolButton */
    menu:Menu
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.MenuToolButton */
    parent: any
    /* Methods of Gtk.MenuToolButton */
    get_menu(): Widget
    set_arrow_tooltip_markup(markup: string): void
    set_arrow_tooltip_text(text: string): void
    set_menu(menu: Widget): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuToolButton */
    vfunc_show_menu?(): void
    /* Virtual methods of Gtk.ToolButton */
    vfunc_clicked?(): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.MenuToolButton */
    connect(sigName: "show-menu", callback: ((obj: MenuToolButton) => void))
    connect(sigName: "notify::menu", callback: ((obj: MenuToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: MenuToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: MenuToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: MenuToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: MenuToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MenuToolButton_ConstructProps): MenuToolButton
    constructor (config?: MenuToolButton_ConstructProps)
    static new_from_stock(stock_id: string): MenuToolButton
}
export interface MessageDialog_ConstructProps extends Dialog_ConstructProps {
    buttons?:ButtonsType
    image?:Widget
    message_type?:MessageType
    secondary_text?:string
    secondary_use_markup?:boolean
    text?:string
    use_markup?:boolean
}
export class MessageDialog extends Dialog {
    /* Properties of Gtk.MessageDialog */
    image:Widget
    readonly message_area:Widget
    message_type:MessageType
    secondary_text:string
    secondary_use_markup:boolean
    text:string
    use_markup:boolean
    /* Fields of Gtk.MessageDialog */
    parent_instance:Dialog
    /* Methods of Gtk.MessageDialog */
    get_image(): Widget
    get_message_area(): Widget
    set_image(image: Widget): void
    set_markup(str: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::image", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::message-area", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::message-type", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-text", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secondary-use-markup", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-markup", callback: ((obj: MessageDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MessageDialog_ConstructProps): MessageDialog
    constructor (config?: MessageDialog_ConstructProps)
}
export interface Misc_ConstructProps extends Widget_ConstructProps {
    xalign?:number
    xpad?:number
    yalign?:number
    ypad?:number
}
export class Misc extends Widget {
    /* Properties of Gtk.Misc */
    xalign:number
    xpad:number
    yalign:number
    ypad:number
    /* Fields of Gtk.Misc */
    widget:Widget
    /* Methods of Gtk.Misc */
    get_alignment(): [ /* xalign */ number | null, /* yalign */ number | null ]
    get_padding(): [ /* xpad */ number | null, /* ypad */ number | null ]
    set_alignment(xalign: number, yalign: number): void
    set_padding(xpad: number, ypad: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::xalign", callback: ((obj: Misc, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xpad", callback: ((obj: Misc, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: Misc, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ypad", callback: ((obj: Misc, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Misc_ConstructProps): Misc
    constructor (config?: Misc_ConstructProps)
}
export interface ModelButton_ConstructProps extends Button_ConstructProps {
    active?:boolean
    centered?:boolean
    icon?:Gio.Icon
    iconic?:boolean
    inverted?:boolean
    menu_name?:string
    role?:ButtonRole
    text?:string
}
export class ModelButton extends Button {
    /* Properties of Gtk.ModelButton */
    active:boolean
    centered:boolean
    icon:Gio.Icon
    iconic:boolean
    inverted:boolean
    menu_name:string
    role:ButtonRole
    text:string
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::centered", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::iconic", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inverted", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menu-name", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::role", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ModelButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ModelButton_ConstructProps): ModelButton
    constructor (config?: ModelButton_ConstructProps)
}
export interface MountOperation_ConstructProps extends Gio.MountOperation_ConstructProps {
    parent?:Window
    screen?:Gdk.Screen
}
export class MountOperation extends Gio.MountOperation {
    /* Properties of Gtk.MountOperation */
    readonly is_showing:boolean
    parent:Window
    screen:Gdk.Screen
    /* Fields of Gtk.MountOperation */
    parent_instance:Gio.MountOperation
    priv:MountOperationPrivate
    /* Methods of Gtk.MountOperation */
    get_parent(): Window
    get_screen(): Gdk.Screen
    set_parent(parent?: Window | null): void
    set_screen(screen: Gdk.Screen): void
    /* Virtual methods of Gio.MountOperation */
    vfunc_aborted?(): void
    vfunc_ask_password?(message: string, default_user: string, default_domain: string, flags: Gio.AskPasswordFlags): void
    vfunc_ask_question?(message: string, choices: string): void
    vfunc_reply?(result: Gio.MountOperationResult): void
    vfunc_show_unmount_progress?(message: string, time_left: number, bytes_left: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::is-showing", callback: ((obj: MountOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: MountOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: MountOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: MountOperation_ConstructProps): MountOperation
    constructor (config?: MountOperation_ConstructProps)
}
export interface NativeDialog_ConstructProps extends GObject.Object_ConstructProps {
    modal?:boolean
    title?:string
    transient_for?:Window
    visible?:boolean
}
export class NativeDialog extends GObject.Object {
    /* Properties of Gtk.NativeDialog */
    modal:boolean
    title:string
    transient_for:Window
    visible:boolean
    /* Fields of Gtk.NativeDialog */
    parent_instance:GObject.Object
    /* Methods of Gtk.NativeDialog */
    destroy(): void
    get_modal(): boolean
    get_title(): string | null
    get_transient_for(): Window | null
    get_visible(): boolean
    hide(): void
    run(): number
    set_modal(modal: boolean): void
    set_title(title: string): void
    set_transient_for(parent?: Window | null): void
    show(): void
    /* Virtual methods of Gtk.NativeDialog */
    vfunc_hide?(): void
    vfunc_response?(response_id: number): void
    vfunc_show?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.NativeDialog */
    connect(sigName: "response", callback: ((obj: NativeDialog, response_id: number) => void))
    connect(sigName: "notify::modal", callback: ((obj: NativeDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: NativeDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transient-for", callback: ((obj: NativeDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: NativeDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: NativeDialog_ConstructProps): NativeDialog
    constructor (config?: NativeDialog_ConstructProps)
}
export interface Notebook_ConstructProps extends Container_ConstructProps {
    enable_popup?:boolean
    group_name?:string
    page?:number
    scrollable?:boolean
    show_border?:boolean
    show_tabs?:boolean
    tab_pos?:PositionType
}
export class Notebook extends Container {
    /* Properties of Gtk.Notebook */
    enable_popup:boolean
    group_name:string
    page:number
    scrollable:boolean
    show_border:boolean
    show_tabs:boolean
    tab_pos:PositionType
    /* Fields of Gtk.Notebook */
    /* Methods of Gtk.Notebook */
    append_page(child: Widget, tab_label?: Widget | null): number
    append_page_menu(child: Widget, tab_label?: Widget | null, menu_label?: Widget | null): number
    detach_tab(child: Widget): void
    get_action_widget(pack_type: PackType): Widget | null
    get_current_page(): number
    get_group_name(): string | null
    get_menu_label(child: Widget): Widget | null
    get_menu_label_text(child: Widget): string | null
    get_n_pages(): number
    get_nth_page(page_num: number): Widget | null
    get_scrollable(): boolean
    get_show_border(): boolean
    get_show_tabs(): boolean
    get_tab_detachable(child: Widget): boolean
    get_tab_hborder(): number
    get_tab_label(child: Widget): Widget | null
    get_tab_label_text(child: Widget): string | null
    get_tab_pos(): PositionType
    get_tab_reorderable(child: Widget): boolean
    get_tab_vborder(): number
    insert_page(child: Widget, tab_label: Widget | null, position: number): number
    insert_page_menu(child: Widget, tab_label: Widget | null, menu_label: Widget | null, position: number): number
    next_page(): void
    page_num(child: Widget): number
    popup_disable(): void
    popup_enable(): void
    prepend_page(child: Widget, tab_label?: Widget | null): number
    prepend_page_menu(child: Widget, tab_label?: Widget | null, menu_label?: Widget | null): number
    prev_page(): void
    remove_page(page_num: number): void
    reorder_child(child: Widget, position: number): void
    set_action_widget(widget: Widget, pack_type: PackType): void
    set_current_page(page_num: number): void
    set_group_name(group_name?: string | null): void
    set_menu_label(child: Widget, menu_label?: Widget | null): void
    set_menu_label_text(child: Widget, menu_text: string): void
    set_scrollable(scrollable: boolean): void
    set_show_border(show_border: boolean): void
    set_show_tabs(show_tabs: boolean): void
    set_tab_detachable(child: Widget, detachable: boolean): void
    set_tab_label(child: Widget, tab_label?: Widget | null): void
    set_tab_label_text(child: Widget, tab_text: string): void
    set_tab_pos(pos: PositionType): void
    set_tab_reorderable(child: Widget, reorderable: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Notebook */
    vfunc_change_current_page?(offset: number): boolean
    vfunc_focus_tab?(type: NotebookTab): boolean
    vfunc_insert_page?(child: Widget, tab_label: Widget, menu_label: Widget, position: number): number
    vfunc_move_focus_out?(direction: DirectionType): void
    vfunc_page_added?(child: Widget, page_num: number): void
    vfunc_page_removed?(child: Widget, page_num: number): void
    vfunc_page_reordered?(child: Widget, page_num: number): void
    vfunc_reorder_tab?(direction: DirectionType, move_to_last: boolean): boolean
    vfunc_select_page?(move_focus: boolean): boolean
    vfunc_switch_page?(page: Widget, page_num: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Notebook */
    connect(sigName: "change-current-page", callback: ((obj: Notebook, object: number) => boolean))
    connect(sigName: "create-window", callback: ((obj: Notebook, page: Widget, x: number, y: number) => Notebook))
    connect(sigName: "focus-tab", callback: ((obj: Notebook, object: NotebookTab) => boolean))
    connect(sigName: "move-focus-out", callback: ((obj: Notebook, object: DirectionType) => void))
    connect(sigName: "page-added", callback: ((obj: Notebook, child: Widget, page_num: number) => void))
    connect(sigName: "page-removed", callback: ((obj: Notebook, child: Widget, page_num: number) => void))
    connect(sigName: "page-reordered", callback: ((obj: Notebook, child: Widget, page_num: number) => void))
    connect(sigName: "reorder-tab", callback: ((obj: Notebook, object: DirectionType, p0: boolean) => boolean))
    connect(sigName: "select-page", callback: ((obj: Notebook, object: boolean) => boolean))
    connect(sigName: "switch-page", callback: ((obj: Notebook, page: Widget, page_num: number) => void))
    connect(sigName: "notify::enable-popup", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::group-name", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scrollable", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-border", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-tabs", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-pos", callback: ((obj: Notebook, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Notebook_ConstructProps): Notebook
    constructor (config?: Notebook_ConstructProps)
}
export interface NotebookAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class NotebookAccessible extends ContainerAccessible {
    /* Fields of Gtk.NotebookAccessible */
    parent: any
    priv:NotebookAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: NotebookAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: NotebookAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: NotebookAccessible_ConstructProps): NotebookAccessible
    constructor (config?: NotebookAccessible_ConstructProps)
}
export interface NotebookPageAccessible_ConstructProps extends Atk.Object_ConstructProps {
}
export class NotebookPageAccessible extends Atk.Object {
    /* Fields of Gtk.NotebookPageAccessible */
    parent: any
    priv:NotebookPageAccessiblePrivate
    /* Methods of Gtk.NotebookPageAccessible */
    invalidate(): void
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: NotebookPageAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: NotebookPageAccessible_ConstructProps): NotebookPageAccessible
    constructor (config?: NotebookPageAccessible_ConstructProps)
}
export interface NumerableIcon_ConstructProps extends Gio.EmblemedIcon_ConstructProps {
    background_icon?:Gio.Icon
    background_icon_name?:string
    count?:number
    label?:string
    style_context?:StyleContext
}
export class NumerableIcon extends Gio.EmblemedIcon {
    /* Properties of Gtk.NumerableIcon */
    background_icon:Gio.Icon
    background_icon_name:string
    count:number
    label:string
    style_context:StyleContext
    /* Fields of Gtk.NumerableIcon */
    parent: any
    /* Methods of Gtk.NumerableIcon */
    get_background_gicon(): Gio.Icon | null
    get_background_icon_name(): string | null
    get_count(): number
    get_label(): string | null
    get_style_context(): StyleContext | null
    set_background_gicon(icon?: Gio.Icon | null): void
    set_background_icon_name(icon_name?: string | null): void
    set_count(count: number): void
    set_label(label?: string | null): void
    set_style_context(style: StyleContext): void
    /* Methods of Gio.Icon */
    equal(icon2?: Gio.Icon | null): boolean
    serialize(): GLib.Variant
    to_string(): string | null
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::background-icon", callback: ((obj: NumerableIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-icon-name", callback: ((obj: NumerableIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::count", callback: ((obj: NumerableIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: NumerableIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-context", callback: ((obj: NumerableIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: NumerableIcon_ConstructProps): NumerableIcon
    constructor (config?: NumerableIcon_ConstructProps)
    static new_with_style_context(base_icon: Gio.Icon, context: StyleContext): Gio.Icon
}
export interface OffscreenWindow_ConstructProps extends Window_ConstructProps {
}
export class OffscreenWindow extends Window {
    /* Fields of Gtk.OffscreenWindow */
    parent_object:Window
    /* Methods of Gtk.OffscreenWindow */
    get_pixbuf(): GdkPixbuf.Pixbuf | null
    get_surface(): cairo.Surface | null
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: OffscreenWindow_ConstructProps): OffscreenWindow
    constructor (config?: OffscreenWindow_ConstructProps)
}
export interface Overlay_ConstructProps extends Bin_ConstructProps {
}
export class Overlay extends Bin {
    /* Fields of Gtk.Overlay */
    parent: any
    priv:OverlayPrivate
    /* Methods of Gtk.Overlay */
    add_overlay(widget: Widget): void
    get_overlay_pass_through(widget: Widget): boolean
    reorder_overlay(child: Widget, position: number): void
    set_overlay_pass_through(widget: Widget, pass_through: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Overlay */
    vfunc_get_child_position?(widget: Widget, allocation: Allocation): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Overlay */
    connect(sigName: "get-child-position", callback: ((obj: Overlay, widget: Widget) => boolean))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Overlay_ConstructProps): Overlay
    constructor (config?: Overlay_ConstructProps)
}
export interface PadController_ConstructProps extends EventController_ConstructProps {
    action_group?:Gio.ActionGroup
    pad?:Gdk.Device
}
export class PadController extends EventController {
    /* Properties of Gtk.PadController */
    /* Methods of Gtk.PadController */
    set_action(type: PadActionType, index: number, mode: number, label: string, action_name: string): void
    set_action_entries(entries: PadActionEntry[]): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PadController_ConstructProps): PadController
    constructor (config?: PadController_ConstructProps)
}
export interface PageSetup_ConstructProps extends GObject.Object_ConstructProps {
}
export class PageSetup extends GObject.Object {
    /* Methods of Gtk.PageSetup */
    copy(): PageSetup
    get_bottom_margin(unit: Unit): number
    get_left_margin(unit: Unit): number
    get_orientation(): PageOrientation
    get_page_height(unit: Unit): number
    get_page_width(unit: Unit): number
    get_paper_height(unit: Unit): number
    get_paper_size(): PaperSize
    get_paper_width(unit: Unit): number
    get_right_margin(unit: Unit): number
    get_top_margin(unit: Unit): number
    load_file(file_name: string): boolean
    load_key_file(key_file: GLib.KeyFile, group_name?: string | null): boolean
    set_bottom_margin(margin: number, unit: Unit): void
    set_left_margin(margin: number, unit: Unit): void
    set_orientation(orientation: PageOrientation): void
    set_paper_size(size: PaperSize): void
    set_paper_size_and_default_margins(size: PaperSize): void
    set_right_margin(margin: number, unit: Unit): void
    set_top_margin(margin: number, unit: Unit): void
    to_file(file_name: string): boolean
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PageSetup_ConstructProps): PageSetup
    constructor (config?: PageSetup_ConstructProps)
    static new_from_file(file_name: string): PageSetup
    static new_from_gvariant(variant: GLib.Variant): PageSetup
    static new_from_key_file(key_file: GLib.KeyFile, group_name?: string | null): PageSetup
}
export interface Paned_ConstructProps extends Container_ConstructProps {
    position?:number
    position_set?:boolean
    wide_handle?:boolean
}
export class Paned extends Container {
    /* Properties of Gtk.Paned */
    readonly max_position:number
    readonly min_position:number
    position:number
    position_set:boolean
    wide_handle:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Paned */
    container:Container
    /* Methods of Gtk.Paned */
    add1(child: Widget): void
    add2(child: Widget): void
    get_child1(): Widget | null
    get_child2(): Widget | null
    get_handle_window(): Gdk.Window
    get_position(): number
    get_wide_handle(): boolean
    pack1(child: Widget, resize: boolean, shrink: boolean): void
    pack2(child: Widget, resize: boolean, shrink: boolean): void
    set_position(position: number): void
    set_wide_handle(wide: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Paned */
    vfunc_accept_position?(): boolean
    vfunc_cancel_position?(): boolean
    vfunc_cycle_child_focus?(reverse: boolean): boolean
    vfunc_cycle_handle_focus?(reverse: boolean): boolean
    vfunc_move_handle?(scroll: ScrollType): boolean
    vfunc_toggle_handle_focus?(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Paned */
    connect(sigName: "accept-position", callback: ((obj: Paned) => boolean))
    connect(sigName: "cancel-position", callback: ((obj: Paned) => boolean))
    connect(sigName: "cycle-child-focus", callback: ((obj: Paned, reversed: boolean) => boolean))
    connect(sigName: "cycle-handle-focus", callback: ((obj: Paned, reversed: boolean) => boolean))
    connect(sigName: "move-handle", callback: ((obj: Paned, scroll_type: ScrollType) => boolean))
    connect(sigName: "toggle-handle-focus", callback: ((obj: Paned) => boolean))
    connect(sigName: "notify::max-position", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-position", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::position", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::position-set", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wide-handle", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Paned, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Paned_ConstructProps): Paned
    constructor (config?: Paned_ConstructProps)
}
export interface PanedAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class PanedAccessible extends ContainerAccessible {
    /* Fields of Gtk.PanedAccessible */
    parent: any
    priv:PanedAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: PanedAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: PanedAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PanedAccessible_ConstructProps): PanedAccessible
    constructor (config?: PanedAccessible_ConstructProps)
}
export interface PlacesSidebar_ConstructProps extends ScrolledWindow_ConstructProps {
    local_only?:boolean
    location?:Gio.File
    open_flags?:PlacesOpenFlags
    populate_all?:boolean
    show_connect_to_server?:boolean
    show_desktop?:boolean
    show_enter_location?:boolean
    show_other_locations?:boolean
    show_recent?:boolean
    show_trash?:boolean
}
export class PlacesSidebar extends ScrolledWindow {
    /* Properties of Gtk.PlacesSidebar */
    local_only:boolean
    location:Gio.File
    open_flags:PlacesOpenFlags
    populate_all:boolean
    show_connect_to_server:boolean
    show_desktop:boolean
    show_enter_location:boolean
    show_other_locations:boolean
    show_recent:boolean
    show_trash:boolean
    /* Methods of Gtk.PlacesSidebar */
    add_shortcut(location: Gio.File): void
    get_local_only(): boolean
    get_location(): Gio.File | null
    get_nth_bookmark(n: number): Gio.File | null
    get_open_flags(): PlacesOpenFlags
    get_show_connect_to_server(): boolean
    get_show_desktop(): boolean
    get_show_enter_location(): boolean
    get_show_other_locations(): boolean
    get_show_recent(): boolean
    get_show_trash(): boolean
    list_shortcuts(): GLib.SList
    remove_shortcut(location: Gio.File): void
    set_drop_targets_visible(visible: boolean, context: Gdk.DragContext): void
    set_local_only(local_only: boolean): void
    set_location(location?: Gio.File | null): void
    set_open_flags(flags: PlacesOpenFlags): void
    set_show_connect_to_server(show_connect_to_server: boolean): void
    set_show_desktop(show_desktop: boolean): void
    set_show_enter_location(show_enter_location: boolean): void
    set_show_other_locations(show_other_locations: boolean): void
    set_show_recent(show_recent: boolean): void
    set_show_trash(show_trash: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ScrolledWindow */
    vfunc_move_focus_out?(direction: DirectionType): void
    vfunc_scroll_child?(scroll: ScrollType, horizontal: boolean): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PlacesSidebar */
    connect(sigName: "drag-action-ask", callback: ((obj: PlacesSidebar, actions: number) => number))
    connect(sigName: "drag-action-requested", callback: ((obj: PlacesSidebar, context: Gdk.DragContext, dest_file: Gio.File, source_file_list: Gio.File[]) => number))
    connect(sigName: "drag-perform-drop", callback: ((obj: PlacesSidebar, dest_file: Gio.File, source_file_list: Gio.File[], action: number) => void))
    connect(sigName: "mount", callback: ((obj: PlacesSidebar, mount_operation: Gio.MountOperation) => void))
    connect(sigName: "open-location", callback: ((obj: PlacesSidebar, location: Gio.File, open_flags: PlacesOpenFlags) => void))
    connect(sigName: "populate-popup", callback: ((obj: PlacesSidebar, container: Widget, selected_item?: Gio.File | null, selected_volume?: Gio.Volume | null) => void))
    connect(sigName: "show-connect-to-server", callback: ((obj: PlacesSidebar) => void))
    connect(sigName: "show-enter-location", callback: ((obj: PlacesSidebar) => void))
    connect(sigName: "show-error-message", callback: ((obj: PlacesSidebar, primary: string, secondary: string) => void))
    connect(sigName: "show-other-locations", callback: ((obj: PlacesSidebar) => void))
    connect(sigName: "show-other-locations-with-flags", callback: ((obj: PlacesSidebar, open_flags: PlacesOpenFlags) => void))
    connect(sigName: "unmount", callback: ((obj: PlacesSidebar, mount_operation: Gio.MountOperation) => void))
    connect(sigName: "notify::local-only", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::location", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::open-flags", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::populate-all", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-connect-to-server", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-desktop", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-enter-location", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-other-locations", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-recent", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-trash", callback: ((obj: PlacesSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PlacesSidebar_ConstructProps): PlacesSidebar
    constructor (config?: PlacesSidebar_ConstructProps)
}
export interface Plug_ConstructProps extends Window_ConstructProps {
}
export class Plug extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Plug */
    readonly embedded:boolean
    readonly socket_window:Gdk.Window
    /* Properties of Gtk.Window */
    accept_focus:boolean
    application:Application
    attached_to:Widget
    decorated:boolean
    default_height:number
    default_width:number
    deletable:boolean
    destroy_with_parent:boolean
    focus_on_map:boolean
    focus_visible:boolean
    gravity:Gdk.Gravity
    has_resize_grip:boolean
    readonly has_toplevel_focus:boolean
    hide_titlebar_when_maximized:boolean
    icon:GdkPixbuf.Pixbuf
    icon_name:string
    readonly is_active:boolean
    readonly is_maximized:boolean
    mnemonics_visible:boolean
    modal:boolean
    resizable:boolean
    readonly resize_grip_visible:boolean
    role:string
    screen:Gdk.Screen
    skip_pager_hint:boolean
    skip_taskbar_hint:boolean
    startup_id:string
    title:string
    transient_for:Window
    type_hint:Gdk.WindowTypeHint
    urgency_hint:boolean
    window_position:WindowPosition
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.Plug */
    priv:PlugPrivate
    /* Fields of Gtk.Window */
    bin:Bin
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Plug */
    construct(socket_id: xlib.Window): void
    construct_for_display(display: Gdk.Display, socket_id: xlib.Window): void
    get_embedded(): boolean
    get_id(): xlib.Window
    get_socket_window(): Gdk.Window | null
    /* Methods of Gtk.Window */
    activate_default(): boolean
    activate_focus(): boolean
    activate_key(event: Gdk.EventKey): boolean
    add_accel_group(accel_group: AccelGroup): void
    add_mnemonic(keyval: number, target: Widget): void
    begin_move_drag(button: number, root_x: number, root_y: number, timestamp: number): void
    begin_resize_drag(edge: Gdk.WindowEdge, button: number, root_x: number, root_y: number, timestamp: number): void
    close(): void
    deiconify(): void
    fullscreen(): void
    fullscreen_on_monitor(screen: Gdk.Screen, monitor: number): void
    get_accept_focus(): boolean
    get_application(): Application | null
    get_attached_to(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_on_map(): boolean
    get_focus_visible(): boolean
    get_gravity(): Gdk.Gravity
    get_group(): WindowGroup
    get_has_resize_grip(): boolean
    get_hide_titlebar_when_maximized(): boolean
    get_icon(): GdkPixbuf.Pixbuf
    get_icon_list(): GdkPixbuf.Pixbuf[]
    get_icon_name(): string | null
    get_mnemonic_modifier(): Gdk.ModifierType
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_opacity(): number
    get_position(): [ /* root_x */ number | null, /* root_y */ number | null ]
    get_resizable(): boolean
    get_resize_grip_area(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_role(): string | null
    get_screen(): Gdk.Screen
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    get_skip_pager_hint(): boolean
    get_skip_taskbar_hint(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    get_type_hint(): Gdk.WindowTypeHint
    get_urgency_hint(): boolean
    get_window_type(): WindowType
    has_group(): boolean
    iconify(): void
    maximize(): void
    mnemonic_activate(keyval: number, modifier: Gdk.ModifierType): boolean
    move(x: number, y: number): void
    parse_geometry(geometry: string): boolean
    present(): void
    present_with_time(timestamp: number): void
    propagate_key_event(event: Gdk.EventKey): boolean
    remove_accel_group(accel_group: AccelGroup): void
    remove_mnemonic(keyval: number, target: Widget): void
    reshow_with_initial_size(): void
    resize(width: number, height: number): void
    resize_grip_is_visible(): boolean
    resize_to_geometry(width: number, height: number): void
    set_accept_focus(setting: boolean): void
    set_application(application?: Application | null): void
    set_attached_to(attach_widget?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default(default_widget?: Widget | null): void
    set_default_geometry(width: number, height: number): void
    set_default_size(width: number, height: number): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_focus(focus?: Widget | null): void
    set_focus_on_map(setting: boolean): void
    set_focus_visible(setting: boolean): void
    set_geometry_hints(geometry_widget: Widget | null, geometry: Gdk.Geometry | null, geom_mask: Gdk.WindowHints): void
    set_gravity(gravity: Gdk.Gravity): void
    set_has_resize_grip(value: boolean): void
    set_has_user_ref_count(setting: boolean): void
    set_hide_titlebar_when_maximized(setting: boolean): void
    set_icon(icon?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_file(filename: string): boolean
    set_icon_list(list: GdkPixbuf.Pixbuf[]): void
    set_icon_name(name?: string | null): void
    set_keep_above(setting: boolean): void
    set_keep_below(setting: boolean): void
    set_mnemonic_modifier(modifier: Gdk.ModifierType): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_opacity(opacity: number): void
    set_position(position: WindowPosition): void
    set_resizable(resizable: boolean): void
    set_role(role: string): void
    set_screen(screen: Gdk.Screen): void
    set_skip_pager_hint(setting: boolean): void
    set_skip_taskbar_hint(setting: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title: string): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    set_type_hint(hint: Gdk.WindowTypeHint): void
    set_urgency_hint(setting: boolean): void
    set_wmclass(wmclass_name: string, wmclass_class: string): void
    stick(): void
    unfullscreen(): void
    unmaximize(): void
    unstick(): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.Plug */
    vfunc_embedded?(): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Plug */
    connect(sigName: "embedded", callback: ((obj: Plug) => void))
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: ((obj: Plug) => void))
    connect(sigName: "activate-focus", callback: ((obj: Plug) => void))
    connect(sigName: "enable-debugging", callback: ((obj: Plug, toggle: boolean) => boolean))
    connect(sigName: "keys-changed", callback: ((obj: Plug) => void))
    connect(sigName: "set-focus", callback: ((obj: Plug, object: Widget) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Plug, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Plug) => void))
    connect(sigName: "remove", callback: ((obj: Plug, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Plug, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Plug) => void))
    connect(sigName: "button-press-event", callback: ((obj: Plug, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Plug, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Plug, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Plug, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Plug) => void))
    connect(sigName: "configure-event", callback: ((obj: Plug, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Plug, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Plug, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Plug) => void))
    connect(sigName: "destroy-event", callback: ((obj: Plug, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Plug, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Plug, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Plug, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Plug, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Plug, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Plug, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Plug, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Plug, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Plug, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Plug, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Plug, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Plug, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Plug, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Plug, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Plug, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Plug, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Plug, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Plug, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Plug) => void))
    connect(sigName: "grab-notify", callback: ((obj: Plug, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Plug) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Plug, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Plug, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Plug, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Plug, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Plug, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Plug) => void))
    connect(sigName: "map-event", callback: ((obj: Plug, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Plug, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Plug, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Plug, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Plug, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Plug) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Plug, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Plug, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Plug, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Plug, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Plug) => void))
    connect(sigName: "screen-changed", callback: ((obj: Plug, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Plug, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Plug, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Plug, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Plug, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Plug, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Plug, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Plug) => void))
    connect(sigName: "show-help", callback: ((obj: Plug, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Plug, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Plug, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Plug, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Plug, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Plug) => void))
    connect(sigName: "touch-event", callback: ((obj: Plug, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Plug) => void))
    connect(sigName: "unmap-event", callback: ((obj: Plug, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Plug) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Plug, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Plug, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::embedded", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::socket-window", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accept-focus", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::application", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attached-to", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decorated", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-height", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-width", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::deletable", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::destroy-with-parent", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-map", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-visible", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gravity", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-resize-grip", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-toplevel-focus", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hide-titlebar-when-maximized", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-active", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-maximized", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonics-visible", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modal", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-grip-visible", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::role", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-pager-hint", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-taskbar-hint", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::startup-id", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transient-for", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type-hint", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::urgency-hint", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-position", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Plug, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Plug_ConstructProps): Plug
    constructor (config?: Plug_ConstructProps)
    static new_for_display(display: Gdk.Display, socket_id: xlib.Window): Plug
}
export interface Popover_ConstructProps extends Bin_ConstructProps {
    constrain_to?:PopoverConstraint
    modal?:boolean
    pointing_to?:Gdk.Rectangle
    position?:PositionType
    relative_to?:Widget
    transitions_enabled?:boolean
}
export class Popover extends Bin {
    /* Properties of Gtk.Popover */
    constrain_to:PopoverConstraint
    modal:boolean
    pointing_to:Gdk.Rectangle
    position:PositionType
    relative_to:Widget
    transitions_enabled:boolean
    /* Fields of Gtk.Popover */
    parent_instance:Bin
    /* Methods of Gtk.Popover */
    bind_model(model?: Gio.MenuModel | null, action_namespace?: string | null): void
    get_constrain_to(): PopoverConstraint
    get_default_widget(): Widget | null
    get_modal(): boolean
    get_pointing_to(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_position(): PositionType
    get_relative_to(): Widget
    get_transitions_enabled(): boolean
    popdown(): void
    popup(): void
    set_constrain_to(constraint: PopoverConstraint): void
    set_default_widget(widget?: Widget | null): void
    set_modal(modal: boolean): void
    set_pointing_to(rect: Gdk.Rectangle): void
    set_position(position: PositionType): void
    set_relative_to(relative_to?: Widget | null): void
    set_transitions_enabled(transitions_enabled: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Popover */
    vfunc_closed?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Popover */
    connect(sigName: "closed", callback: ((obj: Popover) => void))
    connect(sigName: "notify::constrain-to", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modal", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pointing-to", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::position", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::relative-to", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transitions-enabled", callback: ((obj: Popover, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Popover_ConstructProps): Popover
    constructor (config?: Popover_ConstructProps)
    static new_from_model(relative_to: Widget | null, model: Gio.MenuModel): Popover
}
export interface PopoverAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class PopoverAccessible extends ContainerAccessible {
    /* Fields of Gtk.PopoverAccessible */
    parent: any
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: PopoverAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PopoverAccessible_ConstructProps): PopoverAccessible
    constructor (config?: PopoverAccessible_ConstructProps)
}
export interface PopoverMenu_ConstructProps extends Popover_ConstructProps {
    visible_submenu?:string
}
export class PopoverMenu extends Popover {
    /* Properties of Gtk.PopoverMenu */
    visible_submenu:string
    /* Methods of Gtk.PopoverMenu */
    open_submenu(name: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Popover */
    vfunc_closed?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::visible-submenu", callback: ((obj: PopoverMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PopoverMenu_ConstructProps): PopoverMenu
    constructor (config?: PopoverMenu_ConstructProps)
}
export interface PrintContext_ConstructProps extends GObject.Object_ConstructProps {
}
export class PrintContext extends GObject.Object {
    /* Methods of Gtk.PrintContext */
    create_pango_context(): Pango.Context
    create_pango_layout(): Pango.Layout
    get_cairo_context(): cairo.Context
    get_dpi_x(): number
    get_dpi_y(): number
    get_hard_margins(): [ /* returnType */ boolean, /* top */ number, /* bottom */ number, /* left */ number, /* right */ number ]
    get_height(): number
    get_page_setup(): PageSetup
    get_pango_fontmap(): Pango.FontMap
    get_width(): number
    set_cairo_context(cr: cairo.Context, dpi_x: number, dpi_y: number): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PrintContext_ConstructProps): PrintContext
    constructor (config?: PrintContext_ConstructProps)
}
export interface PrintOperation_ConstructProps extends GObject.Object_ConstructProps {
    allow_async?:boolean
    current_page?:number
    custom_tab_label?:string
    default_page_setup?:PageSetup
    embed_page_setup?:boolean
    export_filename?:string
    has_selection?:boolean
    job_name?:string
    n_pages?:number
    print_settings?:PrintSettings
    show_progress?:boolean
    support_selection?:boolean
    track_print_status?:boolean
    unit?:Unit
    use_full_page?:boolean
}
export class PrintOperation extends GObject.Object {
    /* Properties of Gtk.PrintOperation */
    allow_async:boolean
    current_page:number
    custom_tab_label:string
    default_page_setup:PageSetup
    embed_page_setup:boolean
    export_filename:string
    has_selection:boolean
    job_name:string
    n_pages:number
    readonly n_pages_to_print:number
    print_settings:PrintSettings
    show_progress:boolean
    readonly status:PrintStatus
    readonly status_string:string
    support_selection:boolean
    track_print_status:boolean
    unit:Unit
    use_full_page:boolean
    /* Fields of Gtk.PrintOperation */
    parent_instance:GObject.Object
    /* Methods of Gtk.PrintOperation */
    cancel(): void
    draw_page_finish(): void
    get_default_page_setup(): PageSetup
    get_embed_page_setup(): boolean
    get_error(): void
    get_has_selection(): boolean
    get_n_pages_to_print(): number
    get_print_settings(): PrintSettings
    get_status(): PrintStatus
    get_status_string(): string
    get_support_selection(): boolean
    is_finished(): boolean
    run(action: PrintOperationAction, parent?: Window | null): PrintOperationResult
    set_allow_async(allow_async: boolean): void
    set_current_page(current_page: number): void
    set_custom_tab_label(label?: string | null): void
    set_default_page_setup(default_page_setup?: PageSetup | null): void
    set_defer_drawing(): void
    set_embed_page_setup(embed: boolean): void
    set_export_filename(filename: string): void
    set_has_selection(has_selection: boolean): void
    set_job_name(job_name: string): void
    set_n_pages(n_pages: number): void
    set_print_settings(print_settings?: PrintSettings | null): void
    set_show_progress(show_progress: boolean): void
    set_support_selection(support_selection: boolean): void
    set_track_print_status(track_status: boolean): void
    set_unit(unit: Unit): void
    set_use_full_page(full_page: boolean): void
    /* Methods of Gtk.PrintOperationPreview */
    end_preview(): void
    is_selected(page_nr: number): boolean
    render_page(page_nr: number): void
    /* Virtual methods of Gtk.PrintOperation */
    vfunc_begin_print?(context: PrintContext): void
    vfunc_custom_widget_apply?(widget: Widget): void
    vfunc_done?(result: PrintOperationResult): void
    vfunc_draw_page?(context: PrintContext, page_nr: number): void
    vfunc_end_print?(context: PrintContext): void
    vfunc_paginate?(context: PrintContext): boolean
    vfunc_preview?(preview: PrintOperationPreview, context: PrintContext, parent: Window): boolean
    vfunc_request_page_setup?(context: PrintContext, page_nr: number, setup: PageSetup): void
    vfunc_status_changed?(): void
    vfunc_update_custom_widget?(widget: Widget, setup: PageSetup, settings: PrintSettings): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.PrintOperation */
    connect(sigName: "begin-print", callback: ((obj: PrintOperation, context: PrintContext) => void))
    connect(sigName: "create-custom-widget", callback: ((obj: PrintOperation) => GObject.Object))
    connect(sigName: "custom-widget-apply", callback: ((obj: PrintOperation, widget: Widget) => void))
    connect(sigName: "done", callback: ((obj: PrintOperation, result: PrintOperationResult) => void))
    connect(sigName: "draw-page", callback: ((obj: PrintOperation, context: PrintContext, page_nr: number) => void))
    connect(sigName: "end-print", callback: ((obj: PrintOperation, context: PrintContext) => void))
    connect(sigName: "paginate", callback: ((obj: PrintOperation, context: PrintContext) => boolean))
    connect(sigName: "preview", callback: ((obj: PrintOperation, preview: PrintOperationPreview, context: PrintContext, parent?: Window | null) => boolean))
    connect(sigName: "request-page-setup", callback: ((obj: PrintOperation, context: PrintContext, page_nr: number, setup: PageSetup) => void))
    connect(sigName: "status-changed", callback: ((obj: PrintOperation) => void))
    connect(sigName: "update-custom-widget", callback: ((obj: PrintOperation, widget: Widget, setup: PageSetup, settings: PrintSettings) => void))
    /* Signals of Gtk.PrintOperationPreview */
    connect(sigName: "got-page-size", callback: ((obj: PrintOperation, context: PrintContext, page_setup: PageSetup) => void))
    connect(sigName: "ready", callback: ((obj: PrintOperation, context: PrintContext) => void))
    connect(sigName: "notify::allow-async", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-page", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::custom-tab-label", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-page-setup", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::embed-page-setup", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::export-filename", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-selection", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::job-name", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::n-pages", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::n-pages-to-print", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::print-settings", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-progress", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::status", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::status-string", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::support-selection", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::track-print-status", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::unit", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-full-page", callback: ((obj: PrintOperation, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PrintOperation_ConstructProps): PrintOperation
    constructor (config?: PrintOperation_ConstructProps)
}
export interface PrintSettings_ConstructProps extends GObject.Object_ConstructProps {
}
export class PrintSettings extends GObject.Object {
    /* Methods of Gtk.PrintSettings */
    copy(): PrintSettings
    foreach(func: PrintSettingsFunc): void
    get(key: string): string
    get_bool(key: string): boolean
    get_collate(): boolean
    get_default_source(): string
    get_dither(): string
    get_double(key: string): number
    get_double_with_default(key: string, def: number): number
    get_duplex(): PrintDuplex
    get_finishings(): string
    get_int(key: string): number
    get_int_with_default(key: string, def: number): number
    get_length(key: string, unit: Unit): number
    get_media_type(): string
    get_n_copies(): number
    get_number_up(): number
    get_number_up_layout(): NumberUpLayout
    get_orientation(): PageOrientation
    get_output_bin(): string
    get_page_ranges(): PageRange[]
    get_page_set(): PageSet
    get_paper_height(unit: Unit): number
    get_paper_size(): PaperSize
    get_paper_width(unit: Unit): number
    get_print_pages(): PrintPages
    get_printer(): string
    get_printer_lpi(): number
    get_quality(): PrintQuality
    get_resolution(): number
    get_resolution_x(): number
    get_resolution_y(): number
    get_reverse(): boolean
    get_scale(): number
    get_use_color(): boolean
    has_key(key: string): boolean
    load_file(file_name: string): boolean
    load_key_file(key_file: GLib.KeyFile, group_name?: string | null): boolean
    set(key: string, value?: string | null): void
    set_bool(key: string, value: boolean): void
    set_collate(collate: boolean): void
    set_default_source(default_source: string): void
    set_dither(dither: string): void
    set_double(key: string, value: number): void
    set_duplex(duplex: PrintDuplex): void
    set_finishings(finishings: string): void
    set_int(key: string, value: number): void
    set_length(key: string, value: number, unit: Unit): void
    set_media_type(media_type: string): void
    set_n_copies(num_copies: number): void
    set_number_up(number_up: number): void
    set_number_up_layout(number_up_layout: NumberUpLayout): void
    set_orientation(orientation: PageOrientation): void
    set_output_bin(output_bin: string): void
    set_page_ranges(page_ranges: PageRange[]): void
    set_page_set(page_set: PageSet): void
    set_paper_height(height: number, unit: Unit): void
    set_paper_size(paper_size: PaperSize): void
    set_paper_width(width: number, unit: Unit): void
    set_print_pages(pages: PrintPages): void
    set_printer(printer: string): void
    set_printer_lpi(lpi: number): void
    set_quality(quality: PrintQuality): void
    set_resolution(resolution: number): void
    set_resolution_xy(resolution_x: number, resolution_y: number): void
    set_reverse(reverse: boolean): void
    set_scale(scale: number): void
    set_use_color(use_color: boolean): void
    to_file(file_name: string): boolean
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name: string): void
    unset(key: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: PrintSettings_ConstructProps): PrintSettings
    constructor (config?: PrintSettings_ConstructProps)
    static new_from_file(file_name: string): PrintSettings
    static new_from_gvariant(variant: GLib.Variant): PrintSettings
    static new_from_key_file(key_file: GLib.KeyFile, group_name?: string | null): PrintSettings
}
export interface ProgressBar_ConstructProps extends Widget_ConstructProps {
    ellipsize?:Pango.EllipsizeMode
    fraction?:number
    inverted?:boolean
    pulse_step?:number
    show_text?:boolean
    text?:string
}
export class ProgressBar extends Widget {
    /* Properties of Gtk.ProgressBar */
    ellipsize:Pango.EllipsizeMode
    fraction:number
    inverted:boolean
    pulse_step:number
    show_text:boolean
    text:string
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.ProgressBar */
    parent: any
    /* Methods of Gtk.ProgressBar */
    get_ellipsize(): Pango.EllipsizeMode
    get_fraction(): number
    get_inverted(): boolean
    get_pulse_step(): number
    get_show_text(): boolean
    get_text(): string | null
    pulse(): void
    set_ellipsize(mode: Pango.EllipsizeMode): void
    set_fraction(fraction: number): void
    set_inverted(inverted: boolean): void
    set_pulse_step(fraction: number): void
    set_show_text(show_text: boolean): void
    set_text(text?: string | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::ellipsize", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fraction", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inverted", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pulse-step", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-text", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ProgressBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ProgressBar_ConstructProps): ProgressBar
    constructor (config?: ProgressBar_ConstructProps)
}
export interface ProgressBarAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class ProgressBarAccessible extends WidgetAccessible {
    /* Fields of Gtk.ProgressBarAccessible */
    parent: any
    priv:ProgressBarAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ProgressBarAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: ProgressBarAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ProgressBarAccessible_ConstructProps): ProgressBarAccessible
    constructor (config?: ProgressBarAccessible_ConstructProps)
}
export interface RadioAction_ConstructProps extends ToggleAction_ConstructProps {
    current_value?:number
    group?:RadioAction
    value?:number
}
export class RadioAction extends ToggleAction {
    /* Properties of Gtk.RadioAction */
    current_value:number
    group:RadioAction
    value:number
    /* Fields of Gtk.RadioAction */
    parent: any
    /* Methods of Gtk.RadioAction */
    get_current_value(): number
    get_group(): GLib.SList
    join_group(group_source?: RadioAction | null): void
    set_current_value(current_value: number): void
    set_group(group?: GLib.SList | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.RadioAction */
    vfunc_changed?(current: RadioAction): void
    /* Virtual methods of Gtk.ToggleAction */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Action */
    vfunc_activate?(): void
    vfunc_connect_proxy?(proxy: Widget): void
    vfunc_create_menu?(): Widget
    vfunc_create_menu_item?(): Widget
    vfunc_create_tool_item?(): Widget
    vfunc_disconnect_proxy?(proxy: Widget): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RadioAction */
    connect(sigName: "changed", callback: ((obj: RadioAction, current: RadioAction) => void))
    connect(sigName: "notify::current-value", callback: ((obj: RadioAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::group", callback: ((obj: RadioAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: RadioAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioAction_ConstructProps): RadioAction
    constructor (config?: RadioAction_ConstructProps)
}
export interface RadioButton_ConstructProps extends CheckButton_ConstructProps {
    group?:RadioButton
}
export class RadioButton extends Bin {
    /* Properties of Gtk.RadioButton */
    group:RadioButton
    /* Properties of Gtk.ToggleButton */
    active:boolean
    draw_indicator:boolean
    inconsistent:boolean
    /* Properties of Gtk.Button */
    always_show_image:boolean
    image:Widget
    image_position:PositionType
    label:string
    relief:ReliefStyle
    use_stock:boolean
    use_underline:boolean
    xalign:number
    yalign:number
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.RadioButton */
    check_button:CheckButton
    /* Fields of Gtk.CheckButton */
    toggle_button:ToggleButton
    /* Fields of Gtk.ToggleButton */
    /* Fields of Gtk.Button */
    /* Methods of Gtk.RadioButton */
    get_group(): GLib.SList
    join_group(group_source?: RadioButton | null): void
    set_group(group?: GLib.SList | null): void
    /* Methods of Gtk.ToggleButton */
    get_active(): boolean
    get_inconsistent(): boolean
    get_mode(): boolean
    set_active(is_active: boolean): void
    set_inconsistent(setting: boolean): void
    set_mode(draw_indicator: boolean): void
    toggled(): void
    /* Methods of Gtk.Button */
    clicked(): void
    enter(): void
    get_alignment(): [ /* xalign */ number, /* yalign */ number ]
    get_always_show_image(): boolean
    get_event_window(): Gdk.Window
    get_focus_on_click(): boolean
    get_image(): Widget | null
    get_image_position(): PositionType
    get_label(): string
    get_relief(): ReliefStyle
    get_use_stock(): boolean
    get_use_underline(): boolean
    leave(): void
    pressed(): void
    released(): void
    set_alignment(xalign: number, yalign: number): void
    set_always_show_image(always_show: boolean): void
    set_focus_on_click(focus_on_click: boolean): void
    set_image(image?: Widget | null): void
    set_image_position(position: PositionType): void
    set_label(label: string): void
    set_relief(relief: ReliefStyle): void
    set_use_stock(use_stock: boolean): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.RadioButton */
    vfunc_group_changed?(): void
    /* Virtual methods of Gtk.CheckButton */
    vfunc_draw_indicator?(cr: cairo.Context): void
    /* Virtual methods of Gtk.ToggleButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RadioButton */
    connect(sigName: "group-changed", callback: ((obj: RadioButton) => void))
    /* Signals of Gtk.ToggleButton */
    connect(sigName: "toggled", callback: ((obj: RadioButton) => void))
    /* Signals of Gtk.Button */
    connect(sigName: "activate", callback: ((obj: RadioButton) => void))
    connect(sigName: "clicked", callback: ((obj: RadioButton) => void))
    connect(sigName: "enter", callback: ((obj: RadioButton) => void))
    connect(sigName: "leave", callback: ((obj: RadioButton) => void))
    connect(sigName: "pressed", callback: ((obj: RadioButton) => void))
    connect(sigName: "released", callback: ((obj: RadioButton) => void))
    connect(sigName: "notify::group", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-indicator", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::always-show-image", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::image-position", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::relief", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-stock", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xalign", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::yalign", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: RadioButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioButton_ConstructProps): RadioButton
    constructor (config?: RadioButton_ConstructProps)
    static new_from_widget(radio_group_member?: RadioButton | null): RadioButton
    static new_with_label(group: GLib.SList | null, label: string): RadioButton
    static new_with_label_from_widget(radio_group_member: RadioButton | null, label: string): RadioButton
    static new_with_mnemonic(group: GLib.SList | null, label: string): RadioButton
    static new_with_mnemonic_from_widget(radio_group_member: RadioButton | null, label: string): RadioButton
}
export interface RadioButtonAccessible_ConstructProps extends ToggleButtonAccessible_ConstructProps {
}
export class RadioButtonAccessible extends ToggleButtonAccessible {
    /* Fields of Gtk.RadioButtonAccessible */
    parent: any
    priv:RadioButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: RadioButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioButtonAccessible_ConstructProps): RadioButtonAccessible
    constructor (config?: RadioButtonAccessible_ConstructProps)
}
export interface RadioMenuItem_ConstructProps extends CheckMenuItem_ConstructProps {
    group?:RadioMenuItem
}
export class RadioMenuItem extends Bin {
    /* Properties of Gtk.RadioMenuItem */
    group:RadioMenuItem
    /* Properties of Gtk.CheckMenuItem */
    active:boolean
    draw_as_radio:boolean
    inconsistent:boolean
    /* Properties of Gtk.MenuItem */
    accel_path:string
    label:string
    right_justified:boolean
    submenu:Menu
    use_underline:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.RadioMenuItem */
    check_menu_item:CheckMenuItem
    /* Fields of Gtk.CheckMenuItem */
    menu_item:MenuItem
    /* Fields of Gtk.MenuItem */
    bin:Bin
    /* Methods of Gtk.RadioMenuItem */
    get_group(): GLib.SList
    join_group(group_source?: RadioMenuItem | null): void
    set_group(group?: GLib.SList | null): void
    /* Methods of Gtk.CheckMenuItem */
    get_active(): boolean
    get_draw_as_radio(): boolean
    get_inconsistent(): boolean
    set_active(is_active: boolean): void
    set_draw_as_radio(draw_as_radio: boolean): void
    set_inconsistent(setting: boolean): void
    toggled(): void
    /* Methods of Gtk.MenuItem */
    deselect(): void
    get_accel_path(): string | null
    get_label(): string
    get_reserve_indicator(): boolean
    get_right_justified(): boolean
    get_submenu(): Widget | null
    get_use_underline(): boolean
    select(): void
    set_accel_path(accel_path?: string | null): void
    set_label(label: string): void
    set_reserve_indicator(reserve: boolean): void
    set_right_justified(right_justified: boolean): void
    set_submenu(submenu?: Menu | null): void
    set_use_underline(setting: boolean): void
    toggle_size_allocate(allocation: number): void
    toggle_size_request(requisition: number): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.RadioMenuItem */
    vfunc_group_changed?(): void
    /* Virtual methods of Gtk.CheckMenuItem */
    vfunc_draw_indicator?(cr: cairo.Context): void
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RadioMenuItem */
    connect(sigName: "group-changed", callback: ((obj: RadioMenuItem) => void))
    /* Signals of Gtk.CheckMenuItem */
    connect(sigName: "toggled", callback: ((obj: RadioMenuItem) => void))
    /* Signals of Gtk.MenuItem */
    connect(sigName: "activate", callback: ((obj: RadioMenuItem) => void))
    connect(sigName: "activate-item", callback: ((obj: RadioMenuItem) => void))
    connect(sigName: "deselect", callback: ((obj: RadioMenuItem) => void))
    connect(sigName: "select", callback: ((obj: RadioMenuItem) => void))
    connect(sigName: "toggle-size-allocate", callback: ((obj: RadioMenuItem, object: number) => void))
    connect(sigName: "toggle-size-request", callback: ((obj: RadioMenuItem, object?: object | null) => void))
    connect(sigName: "notify::group", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-as-radio", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accel-path", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-justified", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::submenu", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: RadioMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioMenuItem_ConstructProps): RadioMenuItem
    constructor (config?: RadioMenuItem_ConstructProps)
    static new_from_widget(group?: RadioMenuItem | null): RadioMenuItem
    static new_with_label(group: GLib.SList | null, label: string): RadioMenuItem
    static new_with_label_from_widget(group?: RadioMenuItem | null, label?: string | null): RadioMenuItem
    static new_with_mnemonic(group: GLib.SList | null, label: string): RadioMenuItem
    static new_with_mnemonic_from_widget(group?: RadioMenuItem | null, label?: string | null): RadioMenuItem
}
export interface RadioMenuItemAccessible_ConstructProps extends CheckMenuItemAccessible_ConstructProps {
}
export class RadioMenuItemAccessible extends CheckMenuItemAccessible {
    /* Fields of Gtk.RadioMenuItemAccessible */
    parent: any
    priv:RadioMenuItemAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: RadioMenuItemAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: RadioMenuItemAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioMenuItemAccessible_ConstructProps): RadioMenuItemAccessible
    constructor (config?: RadioMenuItemAccessible_ConstructProps)
}
export interface RadioToolButton_ConstructProps extends ToggleToolButton_ConstructProps {
    group?:RadioToolButton
}
export class RadioToolButton extends ToolItem {
    /* Properties of Gtk.RadioToolButton */
    group:RadioToolButton
    /* Properties of Gtk.ToggleToolButton */
    active:boolean
    /* Properties of Gtk.ToolButton */
    icon_name:string
    icon_widget:Widget
    label:string
    label_widget:Widget
    stock_id:string
    use_underline:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.RadioToolButton */
    parent: any
    /* Fields of Gtk.ToggleToolButton */
    /* Fields of Gtk.ToolButton */
    /* Methods of Gtk.RadioToolButton */
    get_group(): GLib.SList
    set_group(group?: GLib.SList | null): void
    /* Methods of Gtk.ToggleToolButton */
    get_active(): boolean
    set_active(is_active: boolean): void
    /* Methods of Gtk.ToolButton */
    get_icon_name(): string | null
    get_icon_widget(): Widget | null
    get_label(): string | null
    get_label_widget(): Widget | null
    get_stock_id(): string
    get_use_underline(): boolean
    set_icon_name(icon_name?: string | null): void
    set_icon_widget(icon_widget?: Widget | null): void
    set_label(label?: string | null): void
    set_label_widget(label_widget?: Widget | null): void
    set_stock_id(stock_id?: string | null): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToggleToolButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.ToolButton */
    vfunc_clicked?(): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleToolButton */
    connect(sigName: "toggled", callback: ((obj: RadioToolButton) => void))
    /* Signals of Gtk.ToolButton */
    connect(sigName: "clicked", callback: ((obj: RadioToolButton) => void))
    connect(sigName: "notify::group", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-widget", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-widget", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-id", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: RadioToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RadioToolButton_ConstructProps): RadioToolButton
    constructor (config?: RadioToolButton_ConstructProps)
    static new_from_stock(group: GLib.SList | null, stock_id: string): RadioToolButton
    static new_from_widget(group?: RadioToolButton | null): RadioToolButton
    static new_with_stock_from_widget(group: RadioToolButton | null, stock_id: string): RadioToolButton
}
export interface Range_ConstructProps extends Widget_ConstructProps {
    adjustment?:Adjustment
    fill_level?:number
    inverted?:boolean
    lower_stepper_sensitivity?:SensitivityType
    restrict_to_fill_level?:boolean
    round_digits?:number
    show_fill_level?:boolean
    upper_stepper_sensitivity?:SensitivityType
}
export class Range extends Widget {
    /* Properties of Gtk.Range */
    adjustment:Adjustment
    fill_level:number
    inverted:boolean
    lower_stepper_sensitivity:SensitivityType
    restrict_to_fill_level:boolean
    round_digits:number
    show_fill_level:boolean
    upper_stepper_sensitivity:SensitivityType
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Range */
    widget:Widget
    priv:RangePrivate
    /* Methods of Gtk.Range */
    get_adjustment(): Adjustment
    get_fill_level(): number
    get_flippable(): boolean
    get_inverted(): boolean
    get_lower_stepper_sensitivity(): SensitivityType
    get_min_slider_size(): number
    get_range_rect(): /* range_rect */ Gdk.Rectangle
    get_restrict_to_fill_level(): boolean
    get_round_digits(): number
    get_show_fill_level(): boolean
    get_slider_range(): [ /* slider_start */ number | null, /* slider_end */ number | null ]
    get_slider_size_fixed(): boolean
    get_upper_stepper_sensitivity(): SensitivityType
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_fill_level(fill_level: number): void
    set_flippable(flippable: boolean): void
    set_increments(step: number, page: number): void
    set_inverted(setting: boolean): void
    set_lower_stepper_sensitivity(sensitivity: SensitivityType): void
    set_min_slider_size(min_size: number): void
    set_range(min: number, max: number): void
    set_restrict_to_fill_level(restrict_to_fill_level: boolean): void
    set_round_digits(round_digits: number): void
    set_show_fill_level(show_fill_level: boolean): void
    set_slider_size_fixed(size_fixed: boolean): void
    set_upper_stepper_sensitivity(sensitivity: SensitivityType): void
    set_value(value: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Range */
    connect(sigName: "adjust-bounds", callback: ((obj: Range, value: number) => void))
    connect(sigName: "change-value", callback: ((obj: Range, scroll: ScrollType, value: number) => boolean))
    connect(sigName: "move-slider", callback: ((obj: Range, step: ScrollType) => void))
    connect(sigName: "value-changed", callback: ((obj: Range) => void))
    connect(sigName: "notify::adjustment", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fill-level", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inverted", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lower-stepper-sensitivity", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::restrict-to-fill-level", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::round-digits", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-fill-level", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::upper-stepper-sensitivity", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Range, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Range_ConstructProps): Range
    constructor (config?: Range_ConstructProps)
}
export interface RangeAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class RangeAccessible extends WidgetAccessible {
    /* Fields of Gtk.RangeAccessible */
    parent: any
    priv:RangeAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: RangeAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: RangeAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RangeAccessible_ConstructProps): RangeAccessible
    constructor (config?: RangeAccessible_ConstructProps)
}
export interface RcStyle_ConstructProps extends GObject.Object_ConstructProps {
}
export class RcStyle extends GObject.Object {
    /* Fields of Gtk.RcStyle */
    parent_instance:GObject.Object
    name:string
    bg_pixmap_name:string[]
    font_desc:Pango.FontDescription
    color_flags:RcFlags[]
    fg:Gdk.Color[]
    bg:Gdk.Color[]
    text:Gdk.Color[]
    base:Gdk.Color[]
    xthickness:number
    ythickness:number
    /* Methods of Gtk.RcStyle */
    copy(): RcStyle
    /* Virtual methods of Gtk.RcStyle */
    vfunc_merge?(src: RcStyle): void
    vfunc_parse?(settings: Settings, scanner: GLib.Scanner): number
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RcStyle_ConstructProps): RcStyle
    constructor (config?: RcStyle_ConstructProps)
}
export interface RecentAction_ConstructProps extends Action_ConstructProps {
    show_numbers?:boolean
}
export class RecentAction extends Action {
    /* Properties of Gtk.RecentAction */
    show_numbers:boolean
    /* Properties of Gtk.RecentChooser */
    filter:RecentFilter
    limit:number
    local_only:boolean
    select_multiple:boolean
    show_icons:boolean
    show_not_found:boolean
    show_private:boolean
    show_tips:boolean
    sort_type:RecentSortType
    /* Fields of Gtk.RecentAction */
    parent_instance:Action
    /* Methods of Gtk.RecentAction */
    get_show_numbers(): boolean
    set_show_numbers(show_numbers: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.RecentChooser */
    add_filter(filter: RecentFilter): void
    get_current_item(): RecentInfo
    get_current_uri(): string
    get_filter(): RecentFilter
    get_items(): RecentInfo[]
    get_limit(): number
    get_local_only(): boolean
    get_select_multiple(): boolean
    get_show_icons(): boolean
    get_show_not_found(): boolean
    get_show_private(): boolean
    get_show_tips(): boolean
    get_sort_type(): RecentSortType
    get_uris(): string[]
    list_filters(): GLib.SList
    remove_filter(filter: RecentFilter): void
    select_all(): void
    select_uri(uri: string): boolean
    set_current_uri(uri: string): boolean
    set_filter(filter?: RecentFilter | null): void
    set_limit(limit: number): void
    set_local_only(local_only: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_icons(show_icons: boolean): void
    set_show_not_found(show_not_found: boolean): void
    set_show_private(show_private: boolean): void
    set_show_tips(show_tips: boolean): void
    set_sort_func(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    set_sort_type(sort_type: RecentSortType): void
    unselect_all(): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.Action */
    vfunc_activate?(): void
    vfunc_connect_proxy?(proxy: Widget): void
    vfunc_create_menu?(): Widget
    vfunc_create_menu_item?(): Widget
    vfunc_create_tool_item?(): Widget
    vfunc_disconnect_proxy?(proxy: Widget): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentChooser */
    connect(sigName: "item-activated", callback: ((obj: RecentAction) => void))
    connect(sigName: "selection-changed", callback: ((obj: RecentAction) => void))
    connect(sigName: "notify::show-numbers", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::limit", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-icons", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-not-found", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-private", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-tips", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-type", callback: ((obj: RecentAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentAction_ConstructProps): RecentAction
    constructor (config?: RecentAction_ConstructProps)
    static new_for_manager(name: string, label?: string | null, tooltip?: string | null, stock_id?: string | null, manager?: RecentManager | null): RecentAction
}
export interface RecentChooserDialog_ConstructProps extends Dialog_ConstructProps {
}
export class RecentChooserDialog extends Dialog {
    /* Properties of Gtk.RecentChooser */
    filter:RecentFilter
    limit:number
    local_only:boolean
    select_multiple:boolean
    show_icons:boolean
    show_not_found:boolean
    show_private:boolean
    show_tips:boolean
    sort_type:RecentSortType
    /* Fields of Gtk.RecentChooserDialog */
    parent_instance:Dialog
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.RecentChooser */
    add_filter(filter: RecentFilter): void
    get_current_item(): RecentInfo
    get_current_uri(): string
    get_filter(): RecentFilter
    get_items(): RecentInfo[]
    get_limit(): number
    get_local_only(): boolean
    get_select_multiple(): boolean
    get_show_icons(): boolean
    get_show_not_found(): boolean
    get_show_private(): boolean
    get_show_tips(): boolean
    get_sort_type(): RecentSortType
    get_uris(): string[]
    list_filters(): GLib.SList
    remove_filter(filter: RecentFilter): void
    select_all(): void
    select_uri(uri: string): boolean
    set_current_uri(uri: string): boolean
    set_filter(filter?: RecentFilter | null): void
    set_limit(limit: number): void
    set_local_only(local_only: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_icons(show_icons: boolean): void
    set_show_not_found(show_not_found: boolean): void
    set_show_private(show_private: boolean): void
    set_show_tips(show_tips: boolean): void
    set_sort_func(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    set_sort_type(sort_type: RecentSortType): void
    unselect_all(): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.Dialog */
    vfunc_close?(): void
    vfunc_response?(response_id: number): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentChooser */
    connect(sigName: "item-activated", callback: ((obj: RecentChooserDialog) => void))
    connect(sigName: "selection-changed", callback: ((obj: RecentChooserDialog) => void))
    connect(sigName: "notify::filter", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::limit", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-icons", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-not-found", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-private", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-tips", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-type", callback: ((obj: RecentChooserDialog, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentChooserDialog_ConstructProps): RecentChooserDialog
    constructor (config?: RecentChooserDialog_ConstructProps)
}
export interface RecentChooserMenu_ConstructProps extends Menu_ConstructProps {
    show_numbers?:boolean
}
export class RecentChooserMenu extends Menu {
    /* Properties of Gtk.RecentChooserMenu */
    show_numbers:boolean
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Properties of Gtk.RecentChooser */
    filter:RecentFilter
    limit:number
    local_only:boolean
    select_multiple:boolean
    show_icons:boolean
    show_not_found:boolean
    show_private:boolean
    show_tips:boolean
    sort_type:RecentSortType
    /* Fields of Gtk.RecentChooserMenu */
    parent_instance:Menu
    /* Methods of Gtk.RecentChooserMenu */
    get_show_numbers(): boolean
    set_show_numbers(show_numbers: boolean): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.RecentChooser */
    add_filter(filter: RecentFilter): void
    get_current_item(): RecentInfo
    get_current_uri(): string
    get_filter(): RecentFilter
    get_items(): RecentInfo[]
    get_limit(): number
    get_local_only(): boolean
    get_select_multiple(): boolean
    get_show_icons(): boolean
    get_show_not_found(): boolean
    get_show_private(): boolean
    get_show_tips(): boolean
    get_sort_type(): RecentSortType
    get_uris(): string[]
    list_filters(): GLib.SList
    remove_filter(filter: RecentFilter): void
    select_all(): void
    select_uri(uri: string): boolean
    set_current_uri(uri: string): boolean
    set_filter(filter?: RecentFilter | null): void
    set_limit(limit: number): void
    set_local_only(local_only: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_icons(show_icons: boolean): void
    set_show_not_found(show_not_found: boolean): void
    set_show_private(show_private: boolean): void
    set_show_tips(show_tips: boolean): void
    set_sort_func(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    set_sort_type(sort_type: RecentSortType): void
    unselect_all(): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.MenuShell */
    vfunc_activate_current?(force_hide: boolean): void
    vfunc_cancel?(): void
    vfunc_deactivate?(): void
    vfunc_get_popup_delay?(): number
    vfunc_insert?(child: Widget, position: number): void
    vfunc_move_current?(direction: MenuDirectionType): void
    vfunc_move_selected?(distance: number): boolean
    vfunc_select_item?(menu_item: Widget): void
    vfunc_selection_done?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentChooser */
    connect(sigName: "item-activated", callback: ((obj: RecentChooserMenu) => void))
    connect(sigName: "selection-changed", callback: ((obj: RecentChooserMenu) => void))
    connect(sigName: "notify::show-numbers", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::limit", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-icons", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-not-found", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-private", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-tips", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-type", callback: ((obj: RecentChooserMenu, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentChooserMenu_ConstructProps): RecentChooserMenu
    constructor (config?: RecentChooserMenu_ConstructProps)
    static new_for_manager(manager: RecentManager): RecentChooserMenu
}
export interface RecentChooserWidget_ConstructProps extends Box_ConstructProps {
}
export class RecentChooserWidget extends Box {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Properties of Gtk.RecentChooser */
    filter:RecentFilter
    limit:number
    local_only:boolean
    select_multiple:boolean
    show_icons:boolean
    show_not_found:boolean
    show_private:boolean
    show_tips:boolean
    sort_type:RecentSortType
    /* Fields of Gtk.RecentChooserWidget */
    parent_instance:Box
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.RecentChooser */
    add_filter(filter: RecentFilter): void
    get_current_item(): RecentInfo
    get_current_uri(): string
    get_filter(): RecentFilter
    get_items(): RecentInfo[]
    get_limit(): number
    get_local_only(): boolean
    get_select_multiple(): boolean
    get_show_icons(): boolean
    get_show_not_found(): boolean
    get_show_private(): boolean
    get_show_tips(): boolean
    get_sort_type(): RecentSortType
    get_uris(): string[]
    list_filters(): GLib.SList
    remove_filter(filter: RecentFilter): void
    select_all(): void
    select_uri(uri: string): boolean
    set_current_uri(uri: string): boolean
    set_filter(filter?: RecentFilter | null): void
    set_limit(limit: number): void
    set_local_only(local_only: boolean): void
    set_select_multiple(select_multiple: boolean): void
    set_show_icons(show_icons: boolean): void
    set_show_not_found(show_not_found: boolean): void
    set_show_private(show_private: boolean): void
    set_show_tips(show_tips: boolean): void
    set_sort_func(sort_func: RecentSortFunc, data_destroy?: GLib.DestroyNotify | null): void
    set_sort_type(sort_type: RecentSortType): void
    unselect_all(): void
    unselect_uri(uri: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentChooser */
    connect(sigName: "item-activated", callback: ((obj: RecentChooserWidget) => void))
    connect(sigName: "selection-changed", callback: ((obj: RecentChooserWidget) => void))
    connect(sigName: "notify::orientation", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::limit", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-only", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-icons", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-not-found", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-private", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-tips", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-type", callback: ((obj: RecentChooserWidget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentChooserWidget_ConstructProps): RecentChooserWidget
    constructor (config?: RecentChooserWidget_ConstructProps)
    static new_for_manager(manager: RecentManager): RecentChooserWidget
}
export interface RecentFilter_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
}
export class RecentFilter extends GObject.InitiallyUnowned {
    /* Methods of Gtk.RecentFilter */
    add_age(days: number): void
    add_application(application: string): void
    add_custom(needed: RecentFilterFlags, func: RecentFilterFunc, data_destroy: GLib.DestroyNotify): void
    add_group(group: string): void
    add_mime_type(mime_type: string): void
    add_pattern(pattern: string): void
    add_pixbuf_formats(): void
    filter(filter_info: RecentFilterInfo): boolean
    get_name(): string | null
    get_needed(): RecentFilterFlags
    set_name(name: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentFilter_ConstructProps): RecentFilter
    constructor (config?: RecentFilter_ConstructProps)
}
export interface RecentManager_ConstructProps extends GObject.Object_ConstructProps {
    filename?:string
}
export class RecentManager extends GObject.Object {
    /* Properties of Gtk.RecentManager */
    readonly size:number
    /* Fields of Gtk.RecentManager */
    /* Methods of Gtk.RecentManager */
    add_full(uri: string, recent_data: RecentData): boolean
    add_item(uri: string): boolean
    get_items(): RecentInfo[]
    has_item(uri: string): boolean
    lookup_item(uri: string): RecentInfo | null
    move_item(uri: string, new_uri?: string | null): boolean
    purge_items(): number
    remove_item(uri: string): boolean
    /* Virtual methods of Gtk.RecentManager */
    vfunc_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.RecentManager */
    connect(sigName: "changed", callback: ((obj: RecentManager) => void))
    connect(sigName: "notify::size", callback: ((obj: RecentManager, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RecentManager_ConstructProps): RecentManager
    constructor (config?: RecentManager_ConstructProps)
    static get_default(): RecentManager
}
export interface RendererCellAccessible_ConstructProps extends CellAccessible_ConstructProps {
    renderer?:CellRenderer
}
export class RendererCellAccessible extends CellAccessible {
    /* Properties of Gtk.RendererCellAccessible */
    /* Fields of Gtk.RendererCellAccessible */
    parent: any
    priv:RendererCellAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: RendererCellAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: RendererCellAccessible_ConstructProps): RendererCellAccessible
    constructor (config?: RendererCellAccessible_ConstructProps)
}
export interface Revealer_ConstructProps extends Bin_ConstructProps {
    reveal_child?:boolean
    transition_duration?:number
    transition_type?:RevealerTransitionType
}
export class Revealer extends Bin {
    /* Properties of Gtk.Revealer */
    readonly child_revealed:boolean
    reveal_child:boolean
    transition_duration:number
    transition_type:RevealerTransitionType
    /* Fields of Gtk.Revealer */
    parent_instance:Bin
    /* Methods of Gtk.Revealer */
    get_child_revealed(): boolean
    get_reveal_child(): boolean
    get_transition_duration(): number
    get_transition_type(): RevealerTransitionType
    set_reveal_child(reveal_child: boolean): void
    set_transition_duration(duration: number): void
    set_transition_type(transition: RevealerTransitionType): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::child-revealed", callback: ((obj: Revealer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reveal-child", callback: ((obj: Revealer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transition-duration", callback: ((obj: Revealer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transition-type", callback: ((obj: Revealer, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Revealer_ConstructProps): Revealer
    constructor (config?: Revealer_ConstructProps)
}
export interface Scale_ConstructProps extends Range_ConstructProps {
    digits?:number
    draw_value?:boolean
    has_origin?:boolean
    value_pos?:PositionType
}
export class Scale extends Range {
    /* Properties of Gtk.Scale */
    digits:number
    draw_value:boolean
    has_origin:boolean
    value_pos:PositionType
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Scale */
    range:Range
    /* Methods of Gtk.Scale */
    add_mark(value: number, position: PositionType, markup?: string | null): void
    clear_marks(): void
    get_digits(): number
    get_draw_value(): boolean
    get_has_origin(): boolean
    get_layout(): Pango.Layout | null
    get_layout_offsets(): [ /* x */ number | null, /* y */ number | null ]
    get_value_pos(): PositionType
    set_digits(digits: number): void
    set_draw_value(draw_value: boolean): void
    set_has_origin(has_origin: boolean): void
    set_value_pos(pos: PositionType): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Scale */
    vfunc_draw_value?(): void
    vfunc_format_value?(value: number): string
    vfunc_get_layout_offsets?(): [ /* x */ number | null, /* y */ number | null ]
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Scale */
    connect(sigName: "format-value", callback: ((obj: Scale, value: number) => string))
    connect(sigName: "notify::digits", callback: ((obj: Scale, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-value", callback: ((obj: Scale, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-origin", callback: ((obj: Scale, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value-pos", callback: ((obj: Scale, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Scale, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Scale_ConstructProps): Scale
    constructor (config?: Scale_ConstructProps)
    static new_with_range(orientation: Orientation, min: number, max: number, step: number): Scale
}
export interface ScaleAccessible_ConstructProps extends RangeAccessible_ConstructProps {
}
export class ScaleAccessible extends RangeAccessible {
    /* Fields of Gtk.ScaleAccessible */
    parent: any
    priv:ScaleAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ScaleAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: ScaleAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ScaleAccessible_ConstructProps): ScaleAccessible
    constructor (config?: ScaleAccessible_ConstructProps)
}
export interface ScaleButton_ConstructProps extends Button_ConstructProps {
    adjustment?:Adjustment
    icons?:string[]
    size?:IconSize
    value?:number
}
export class ScaleButton extends Button {
    /* Properties of Gtk.ScaleButton */
    adjustment:Adjustment
    icons:string[]
    size:IconSize
    value:number
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.ScaleButton */
    parent: any
    /* Methods of Gtk.ScaleButton */
    get_adjustment(): Adjustment
    get_minus_button(): Button
    get_plus_button(): Button
    get_popup(): Widget
    get_value(): number
    set_adjustment(adjustment: Adjustment): void
    set_icons(icons: string[]): void
    set_value(value: number): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.ScaleButton */
    vfunc_value_changed?(value: number): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ScaleButton */
    connect(sigName: "popdown", callback: ((obj: ScaleButton) => void))
    connect(sigName: "popup", callback: ((obj: ScaleButton) => void))
    connect(sigName: "value-changed", callback: ((obj: ScaleButton, value: number) => void))
    connect(sigName: "notify::adjustment", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icons", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ScaleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ScaleButton_ConstructProps): ScaleButton
    constructor (config?: ScaleButton_ConstructProps)
}
export interface ScaleButtonAccessible_ConstructProps extends ButtonAccessible_ConstructProps {
}
export class ScaleButtonAccessible extends ButtonAccessible {
    /* Fields of Gtk.ScaleButtonAccessible */
    parent: any
    priv:ScaleButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ScaleButtonAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: ScaleButtonAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ScaleButtonAccessible_ConstructProps): ScaleButtonAccessible
    constructor (config?: ScaleButtonAccessible_ConstructProps)
}
export interface Scrollbar_ConstructProps extends Range_ConstructProps {
}
export class Scrollbar extends Range {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Scrollbar */
    range:Range
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: Scrollbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Scrollbar_ConstructProps): Scrollbar
    constructor (config?: Scrollbar_ConstructProps)
}
export interface ScrolledWindow_ConstructProps extends Bin_ConstructProps {
    hadjustment?:Adjustment
    hscrollbar_policy?:PolicyType
    kinetic_scrolling?:boolean
    max_content_height?:number
    max_content_width?:number
    min_content_height?:number
    min_content_width?:number
    overlay_scrolling?:boolean
    propagate_natural_height?:boolean
    propagate_natural_width?:boolean
    shadow_type?:ShadowType
    vadjustment?:Adjustment
    vscrollbar_policy?:PolicyType
    window_placement?:CornerType
    window_placement_set?:boolean
}
export class ScrolledWindow extends Bin {
    /* Properties of Gtk.ScrolledWindow */
    hadjustment:Adjustment
    hscrollbar_policy:PolicyType
    kinetic_scrolling:boolean
    max_content_height:number
    max_content_width:number
    min_content_height:number
    min_content_width:number
    overlay_scrolling:boolean
    propagate_natural_height:boolean
    propagate_natural_width:boolean
    shadow_type:ShadowType
    vadjustment:Adjustment
    vscrollbar_policy:PolicyType
    window_placement:CornerType
    window_placement_set:boolean
    /* Fields of Gtk.ScrolledWindow */
    container:Bin
    priv:ScrolledWindowPrivate
    /* Methods of Gtk.ScrolledWindow */
    add_with_viewport(child: Widget): void
    get_capture_button_press(): boolean
    get_hadjustment(): Adjustment
    get_hscrollbar(): Widget
    get_kinetic_scrolling(): boolean
    get_max_content_height(): number
    get_max_content_width(): number
    get_min_content_height(): number
    get_min_content_width(): number
    get_overlay_scrolling(): boolean
    get_placement(): CornerType
    get_policy(): [ /* hscrollbar_policy */ PolicyType | null, /* vscrollbar_policy */ PolicyType | null ]
    get_propagate_natural_height(): boolean
    get_propagate_natural_width(): boolean
    get_shadow_type(): ShadowType
    get_vadjustment(): Adjustment
    get_vscrollbar(): Widget
    set_capture_button_press(capture_button_press: boolean): void
    set_hadjustment(hadjustment: Adjustment): void
    set_kinetic_scrolling(kinetic_scrolling: boolean): void
    set_max_content_height(height: number): void
    set_max_content_width(width: number): void
    set_min_content_height(height: number): void
    set_min_content_width(width: number): void
    set_overlay_scrolling(overlay_scrolling: boolean): void
    set_placement(window_placement: CornerType): void
    set_policy(hscrollbar_policy: PolicyType, vscrollbar_policy: PolicyType): void
    set_propagate_natural_height(propagate: boolean): void
    set_propagate_natural_width(propagate: boolean): void
    set_shadow_type(type: ShadowType): void
    set_vadjustment(vadjustment: Adjustment): void
    unset_placement(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ScrolledWindow */
    vfunc_move_focus_out?(direction: DirectionType): void
    vfunc_scroll_child?(scroll: ScrollType, horizontal: boolean): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ScrolledWindow */
    connect(sigName: "edge-overshot", callback: ((obj: ScrolledWindow, pos: PositionType) => void))
    connect(sigName: "edge-reached", callback: ((obj: ScrolledWindow, pos: PositionType) => void))
    connect(sigName: "move-focus-out", callback: ((obj: ScrolledWindow, direction_type: DirectionType) => void))
    connect(sigName: "scroll-child", callback: ((obj: ScrolledWindow, scroll: ScrollType, horizontal: boolean) => boolean))
    connect(sigName: "notify::hadjustment", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscrollbar-policy", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::kinetic-scrolling", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-content-height", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-content-width", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-content-height", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-content-width", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::overlay-scrolling", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::propagate-natural-height", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::propagate-natural-width", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shadow-type", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscrollbar-policy", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-placement", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-placement-set", callback: ((obj: ScrolledWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ScrolledWindow_ConstructProps): ScrolledWindow
    constructor (config?: ScrolledWindow_ConstructProps)
}
export interface ScrolledWindowAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class ScrolledWindowAccessible extends ContainerAccessible {
    /* Fields of Gtk.ScrolledWindowAccessible */
    parent: any
    priv:ScrolledWindowAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ScrolledWindowAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ScrolledWindowAccessible_ConstructProps): ScrolledWindowAccessible
    constructor (config?: ScrolledWindowAccessible_ConstructProps)
}
export interface SearchBar_ConstructProps extends Bin_ConstructProps {
    search_mode_enabled?:boolean
    show_close_button?:boolean
}
export class SearchBar extends Bin {
    /* Properties of Gtk.SearchBar */
    search_mode_enabled:boolean
    show_close_button:boolean
    /* Fields of Gtk.SearchBar */
    /* Methods of Gtk.SearchBar */
    connect_entry(entry: Entry): void
    get_search_mode(): boolean
    get_show_close_button(): boolean
    handle_event(event: Gdk.Event): boolean
    set_search_mode(search_mode: boolean): void
    set_show_close_button(visible: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::search-mode-enabled", callback: ((obj: SearchBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-close-button", callback: ((obj: SearchBar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SearchBar_ConstructProps): SearchBar
    constructor (config?: SearchBar_ConstructProps)
}
export interface SearchEntry_ConstructProps extends Entry_ConstructProps {
}
export class SearchEntry extends Entry {
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Fields of Gtk.SearchEntry */
    parent: any
    /* Methods of Gtk.SearchEntry */
    handle_event(event: Gdk.Event): boolean
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Editable */
    copy_clipboard(): void
    cut_clipboard(): void
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    get_chars(start_pos: number, end_pos: number): string
    get_editable(): boolean
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    insert_text(new_text: string, new_text_length: number, position: number): void
    paste_clipboard(): void
    select_region(start_pos: number, end_pos: number): void
    set_editable(is_editable: boolean): void
    set_position(position: number): void
    /* Virtual methods of Gtk.SearchEntry */
    vfunc_next_match?(): void
    vfunc_previous_match?(): void
    vfunc_search_changed?(): void
    vfunc_stop_search?(): void
    /* Virtual methods of Gtk.Entry */
    vfunc_activate?(): void
    vfunc_backspace?(): void
    vfunc_copy_clipboard?(): void
    vfunc_cut_clipboard?(): void
    vfunc_delete_from_cursor?(type: DeleteType, count: number): void
    vfunc_get_frame_size?(x: number, y: number, width: number, height: number): void
    vfunc_get_text_area_size?(x: number, y: number, width: number, height: number): void
    vfunc_insert_at_cursor?(str: string): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_paste_clipboard?(): void
    vfunc_populate_popup?(popup: Widget): void
    vfunc_toggle_overwrite?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.SearchEntry */
    connect(sigName: "next-match", callback: ((obj: SearchEntry) => void))
    connect(sigName: "previous-match", callback: ((obj: SearchEntry) => void))
    connect(sigName: "search-changed", callback: ((obj: SearchEntry) => void))
    connect(sigName: "stop-search", callback: ((obj: SearchEntry) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: SearchEntry) => void))
    connect(sigName: "remove-widget", callback: ((obj: SearchEntry) => void))
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: ((obj: SearchEntry) => void))
    connect(sigName: "delete-text", callback: ((obj: SearchEntry, start_pos: number, end_pos: number) => void))
    connect(sigName: "insert-text", callback: ((obj: SearchEntry, new_text: string, new_text_length: number, position: number) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: SearchEntry, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SearchEntry_ConstructProps): SearchEntry
    constructor (config?: SearchEntry_ConstructProps)
}
export interface Separator_ConstructProps extends Widget_ConstructProps {
}
export class Separator extends Widget {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Separator */
    widget:Widget
    priv:SeparatorPrivate
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: Separator, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Separator_ConstructProps): Separator
    constructor (config?: Separator_ConstructProps)
}
export interface SeparatorMenuItem_ConstructProps extends MenuItem_ConstructProps {
}
export class SeparatorMenuItem extends MenuItem {
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.SeparatorMenuItem */
    menu_item:MenuItem
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::action-name", callback: ((obj: SeparatorMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: SeparatorMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: SeparatorMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: SeparatorMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SeparatorMenuItem_ConstructProps): SeparatorMenuItem
    constructor (config?: SeparatorMenuItem_ConstructProps)
}
export interface SeparatorToolItem_ConstructProps extends ToolItem_ConstructProps {
    draw?:boolean
}
export class SeparatorToolItem extends GObject.InitiallyUnowned {
    /* Properties of Gtk.SeparatorToolItem */
    draw:boolean
    /* Properties of Gtk.ToolItem */
    is_important:boolean
    visible_horizontal:boolean
    visible_vertical:boolean
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.SeparatorToolItem */
    /* Fields of Gtk.ToolItem */
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.SeparatorToolItem */
    get_draw(): boolean
    set_draw(draw: boolean): void
    /* Methods of Gtk.ToolItem */
    get_ellipsize_mode(): Pango.EllipsizeMode
    get_expand(): boolean
    get_homogeneous(): boolean
    get_icon_size(): number
    get_is_important(): boolean
    get_orientation(): Orientation
    get_proxy_menu_item(menu_item_id: string): Widget | null
    get_relief_style(): ReliefStyle
    get_text_alignment(): number
    get_text_orientation(): Orientation
    get_text_size_group(): SizeGroup
    get_toolbar_style(): ToolbarStyle
    get_use_drag_window(): boolean
    get_visible_horizontal(): boolean
    get_visible_vertical(): boolean
    rebuild_menu(): void
    retrieve_proxy_menu_item(): Widget
    set_expand(expand: boolean): void
    set_homogeneous(homogeneous: boolean): void
    set_is_important(is_important: boolean): void
    set_proxy_menu_item(menu_item_id: string, menu_item?: Widget | null): void
    set_tooltip_markup(markup: string): void
    set_tooltip_text(text: string): void
    set_use_drag_window(use_drag_window: boolean): void
    set_visible_horizontal(visible_horizontal: boolean): void
    set_visible_vertical(visible_vertical: boolean): void
    toolbar_reconfigured(): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToolItem */
    connect(sigName: "create-menu-proxy", callback: ((obj: SeparatorToolItem) => boolean))
    connect(sigName: "toolbar-reconfigured", callback: ((obj: SeparatorToolItem) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: SeparatorToolItem, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "remove", callback: ((obj: SeparatorToolItem, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: SeparatorToolItem, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "button-press-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: SeparatorToolItem, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: SeparatorToolItem, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "configure-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: SeparatorToolItem, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "destroy-event", callback: ((obj: SeparatorToolItem, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: SeparatorToolItem, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: SeparatorToolItem, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: SeparatorToolItem, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: SeparatorToolItem, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: SeparatorToolItem, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: SeparatorToolItem, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "grab-notify", callback: ((obj: SeparatorToolItem, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: SeparatorToolItem, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: SeparatorToolItem, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "map-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: SeparatorToolItem, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: SeparatorToolItem, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: SeparatorToolItem, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: SeparatorToolItem) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: SeparatorToolItem, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "screen-changed", callback: ((obj: SeparatorToolItem, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: SeparatorToolItem, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: SeparatorToolItem, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "show-help", callback: ((obj: SeparatorToolItem, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: SeparatorToolItem, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: SeparatorToolItem, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: SeparatorToolItem, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: SeparatorToolItem, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "touch-event", callback: ((obj: SeparatorToolItem, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "unmap-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: SeparatorToolItem) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: SeparatorToolItem, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::draw", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-important", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-horizontal", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-vertical", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: SeparatorToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SeparatorToolItem_ConstructProps): SeparatorToolItem
    constructor (config?: SeparatorToolItem_ConstructProps)
}
export interface Settings_ConstructProps extends GObject.Object_ConstructProps {
    gtk_alternative_button_order?:boolean
    gtk_alternative_sort_arrows?:boolean
    gtk_application_prefer_dark_theme?:boolean
    gtk_auto_mnemonics?:boolean
    gtk_button_images?:boolean
    gtk_can_change_accels?:boolean
    gtk_color_palette?:string
    gtk_color_scheme?:string
    gtk_cursor_blink?:boolean
    gtk_cursor_blink_time?:number
    gtk_cursor_blink_timeout?:number
    gtk_cursor_theme_name?:string
    gtk_cursor_theme_size?:number
    gtk_decoration_layout?:string
    gtk_dialogs_use_header?:boolean
    gtk_dnd_drag_threshold?:number
    gtk_double_click_distance?:number
    gtk_double_click_time?:number
    gtk_enable_accels?:boolean
    gtk_enable_animations?:boolean
    gtk_enable_event_sounds?:boolean
    gtk_enable_input_feedback_sounds?:boolean
    gtk_enable_mnemonics?:boolean
    gtk_enable_primary_paste?:boolean
    gtk_enable_tooltips?:boolean
    gtk_entry_password_hint_timeout?:number
    gtk_entry_select_on_focus?:boolean
    gtk_error_bell?:boolean
    gtk_fallback_icon_theme?:string
    gtk_file_chooser_backend?:string
    gtk_font_name?:string
    gtk_fontconfig_timestamp?:number
    gtk_icon_sizes?:string
    gtk_icon_theme_name?:string
    gtk_im_module?:string
    gtk_im_preedit_style?:IMPreeditStyle
    gtk_im_status_style?:IMStatusStyle
    gtk_key_theme_name?:string
    gtk_keynav_cursor_only?:boolean
    gtk_keynav_use_caret?:boolean
    gtk_keynav_wrap_around?:boolean
    gtk_label_select_on_focus?:boolean
    gtk_long_press_time?:number
    gtk_menu_bar_accel?:string
    gtk_menu_bar_popup_delay?:number
    gtk_menu_images?:boolean
    gtk_menu_popdown_delay?:number
    gtk_menu_popup_delay?:number
    gtk_modules?:string
    gtk_primary_button_warps_slider?:boolean
    gtk_print_backends?:string
    gtk_print_preview_command?:string
    gtk_recent_files_enabled?:boolean
    gtk_recent_files_limit?:number
    gtk_recent_files_max_age?:number
    gtk_scrolled_window_placement?:CornerType
    gtk_shell_shows_app_menu?:boolean
    gtk_shell_shows_desktop?:boolean
    gtk_shell_shows_menubar?:boolean
    gtk_show_input_method_menu?:boolean
    gtk_show_unicode_menu?:boolean
    gtk_sound_theme_name?:string
    gtk_split_cursor?:boolean
    gtk_theme_name?:string
    gtk_timeout_expand?:number
    gtk_timeout_initial?:number
    gtk_timeout_repeat?:number
    gtk_titlebar_double_click?:string
    gtk_titlebar_middle_click?:string
    gtk_titlebar_right_click?:string
    gtk_toolbar_icon_size?:IconSize
    gtk_toolbar_style?:ToolbarStyle
    gtk_tooltip_browse_mode_timeout?:number
    gtk_tooltip_browse_timeout?:number
    gtk_tooltip_timeout?:number
    gtk_touchscreen_mode?:boolean
    gtk_visible_focus?:PolicyType
    gtk_xft_antialias?:number
    gtk_xft_dpi?:number
    gtk_xft_hinting?:number
    gtk_xft_hintstyle?:string
    gtk_xft_rgba?:string
}
export class Settings extends GObject.Object {
    /* Properties of Gtk.Settings */
    readonly color_hash:GLib.HashTable
    gtk_alternative_button_order:boolean
    gtk_alternative_sort_arrows:boolean
    gtk_application_prefer_dark_theme:boolean
    gtk_auto_mnemonics:boolean
    gtk_button_images:boolean
    gtk_can_change_accels:boolean
    gtk_color_palette:string
    gtk_color_scheme:string
    gtk_cursor_blink:boolean
    gtk_cursor_blink_time:number
    gtk_cursor_blink_timeout:number
    gtk_cursor_theme_name:string
    gtk_cursor_theme_size:number
    gtk_decoration_layout:string
    gtk_dialogs_use_header:boolean
    gtk_dnd_drag_threshold:number
    gtk_double_click_distance:number
    gtk_double_click_time:number
    gtk_enable_accels:boolean
    gtk_enable_animations:boolean
    gtk_enable_event_sounds:boolean
    gtk_enable_input_feedback_sounds:boolean
    gtk_enable_mnemonics:boolean
    gtk_enable_primary_paste:boolean
    gtk_enable_tooltips:boolean
    gtk_entry_password_hint_timeout:number
    gtk_entry_select_on_focus:boolean
    gtk_error_bell:boolean
    gtk_fallback_icon_theme:string
    gtk_file_chooser_backend:string
    gtk_font_name:string
    gtk_fontconfig_timestamp:number
    gtk_icon_sizes:string
    gtk_icon_theme_name:string
    gtk_im_module:string
    gtk_im_preedit_style:IMPreeditStyle
    gtk_im_status_style:IMStatusStyle
    gtk_key_theme_name:string
    gtk_keynav_cursor_only:boolean
    gtk_keynav_use_caret:boolean
    gtk_keynav_wrap_around:boolean
    gtk_label_select_on_focus:boolean
    gtk_long_press_time:number
    gtk_menu_bar_accel:string
    gtk_menu_bar_popup_delay:number
    gtk_menu_images:boolean
    gtk_menu_popdown_delay:number
    gtk_menu_popup_delay:number
    gtk_modules:string
    gtk_primary_button_warps_slider:boolean
    gtk_print_backends:string
    gtk_print_preview_command:string
    gtk_recent_files_enabled:boolean
    gtk_recent_files_limit:number
    gtk_recent_files_max_age:number
    gtk_scrolled_window_placement:CornerType
    gtk_shell_shows_app_menu:boolean
    gtk_shell_shows_desktop:boolean
    gtk_shell_shows_menubar:boolean
    gtk_show_input_method_menu:boolean
    gtk_show_unicode_menu:boolean
    gtk_sound_theme_name:string
    gtk_split_cursor:boolean
    gtk_theme_name:string
    gtk_timeout_expand:number
    gtk_timeout_initial:number
    gtk_timeout_repeat:number
    gtk_titlebar_double_click:string
    gtk_titlebar_middle_click:string
    gtk_titlebar_right_click:string
    gtk_toolbar_icon_size:IconSize
    gtk_toolbar_style:ToolbarStyle
    gtk_tooltip_browse_mode_timeout:number
    gtk_tooltip_browse_timeout:number
    gtk_tooltip_timeout:number
    gtk_touchscreen_mode:boolean
    gtk_visible_focus:PolicyType
    gtk_xft_antialias:number
    gtk_xft_dpi:number
    gtk_xft_hinting:number
    gtk_xft_hintstyle:string
    gtk_xft_rgba:string
    /* Fields of Gtk.Settings */
    parent_instance:GObject.Object
    /* Methods of Gtk.Settings */
    reset_property(name: string): void
    set_double_property(name: string, v_double: number, origin: string): void
    set_long_property(name: string, v_long: number, origin: string): void
    set_property_value(name: string, svalue: SettingsValue): void
    set_string_property(name: string, v_string: string, origin: string): void
    /* Methods of Gtk.StyleProvider */
    get_icon_factory(path: WidgetPath): IconFactory | null
    get_style(path: WidgetPath): StyleProperties | null
    get_style_property(path: WidgetPath, state: StateFlags, pspec: GObject.ParamSpec): [ /* returnType */ boolean, /* value */ any ]
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::color-hash", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-alternative-button-order", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-alternative-sort-arrows", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-application-prefer-dark-theme", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-auto-mnemonics", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-button-images", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-can-change-accels", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-color-palette", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-color-scheme", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-cursor-blink", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-cursor-blink-time", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-cursor-blink-timeout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-cursor-theme-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-cursor-theme-size", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-decoration-layout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-dialogs-use-header", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-dnd-drag-threshold", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-double-click-distance", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-double-click-time", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-accels", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-animations", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-event-sounds", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-input-feedback-sounds", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-mnemonics", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-primary-paste", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-enable-tooltips", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-entry-password-hint-timeout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-entry-select-on-focus", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-error-bell", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-fallback-icon-theme", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-file-chooser-backend", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-font-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-fontconfig-timestamp", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-icon-sizes", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-icon-theme-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-im-module", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-im-preedit-style", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-im-status-style", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-key-theme-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-keynav-cursor-only", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-keynav-use-caret", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-keynav-wrap-around", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-label-select-on-focus", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-long-press-time", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-menu-bar-accel", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-menu-bar-popup-delay", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-menu-images", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-menu-popdown-delay", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-menu-popup-delay", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-modules", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-primary-button-warps-slider", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-print-backends", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-print-preview-command", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-recent-files-enabled", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-recent-files-limit", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-recent-files-max-age", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-scrolled-window-placement", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-shell-shows-app-menu", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-shell-shows-desktop", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-shell-shows-menubar", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-show-input-method-menu", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-show-unicode-menu", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-sound-theme-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-split-cursor", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-theme-name", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-timeout-expand", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-timeout-initial", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-timeout-repeat", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-titlebar-double-click", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-titlebar-middle-click", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-titlebar-right-click", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-toolbar-icon-size", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-toolbar-style", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-tooltip-browse-mode-timeout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-tooltip-browse-timeout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-tooltip-timeout", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-touchscreen-mode", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-visible-focus", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-xft-antialias", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-xft-dpi", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-xft-hinting", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-xft-hintstyle", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gtk-xft-rgba", callback: ((obj: Settings, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Settings_ConstructProps): Settings
    constructor (config?: Settings_ConstructProps)
    static get_default(): Settings | null
    static get_for_screen(screen: Gdk.Screen): Settings
    static install_property(pspec: GObject.ParamSpec): void
    static install_property_parser(pspec: GObject.ParamSpec, parser: RcPropertyParser): void
}
export interface ShortcutLabel_ConstructProps extends Box_ConstructProps {
    accelerator?:string
    disabled_text?:string
}
export class ShortcutLabel extends Box {
    /* Properties of Gtk.ShortcutLabel */
    accelerator:string
    disabled_text:string
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Methods of Gtk.ShortcutLabel */
    get_accelerator(): string | null
    get_disabled_text(): string | null
    set_accelerator(accelerator: string): void
    set_disabled_text(disabled_text: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accelerator", callback: ((obj: ShortcutLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled-text", callback: ((obj: ShortcutLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ShortcutLabel, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ShortcutLabel_ConstructProps): ShortcutLabel
    constructor (config?: ShortcutLabel_ConstructProps)
}
export interface ShortcutsGroup_ConstructProps extends Box_ConstructProps {
    accel_size_group?:SizeGroup
    title?:string
    title_size_group?:SizeGroup
    view?:string
}
export class ShortcutsGroup extends Box {
    /* Properties of Gtk.ShortcutsGroup */
    accel_size_group:SizeGroup
    readonly height:number
    title:string
    title_size_group:SizeGroup
    view:string
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-size-group", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title-size-group", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ShortcutsGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ShortcutsGroup_ConstructProps): ShortcutsGroup
    constructor (config?: ShortcutsGroup_ConstructProps)
}
export interface ShortcutsSection_ConstructProps extends Box_ConstructProps {
    max_height?:number
    section_name?:string
    title?:string
    view_name?:string
}
export class ShortcutsSection extends Box {
    /* Properties of Gtk.ShortcutsSection */
    max_height:number
    section_name:string
    title:string
    view_name:string
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ShortcutsSection */
    connect(sigName: "change-current-page", callback: ((obj: ShortcutsSection, object: number) => boolean))
    connect(sigName: "notify::max-height", callback: ((obj: ShortcutsSection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::section-name", callback: ((obj: ShortcutsSection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: ShortcutsSection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view-name", callback: ((obj: ShortcutsSection, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ShortcutsSection, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ShortcutsSection_ConstructProps): ShortcutsSection
    constructor (config?: ShortcutsSection_ConstructProps)
}
export interface ShortcutsShortcut_ConstructProps extends Box_ConstructProps {
    accel_size_group?:SizeGroup
    accelerator?:string
    action_name?:string
    direction?:TextDirection
    icon?:Gio.Icon
    icon_set?:boolean
    shortcut_type?:ShortcutType
    subtitle?:string
    subtitle_set?:boolean
    title?:string
    title_size_group?:SizeGroup
}
export class ShortcutsShortcut extends Box {
    /* Properties of Gtk.ShortcutsShortcut */
    accel_size_group:SizeGroup
    accelerator:string
    action_name:string
    direction:TextDirection
    icon:Gio.Icon
    icon_set:boolean
    shortcut_type:ShortcutType
    subtitle:string
    subtitle_set:boolean
    title:string
    title_size_group:SizeGroup
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::accel-size-group", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accelerator", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::direction", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-set", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shortcut-type", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::subtitle", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::subtitle-set", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title-size-group", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ShortcutsShortcut, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ShortcutsShortcut_ConstructProps): ShortcutsShortcut
    constructor (config?: ShortcutsShortcut_ConstructProps)
}
export interface ShortcutsWindow_ConstructProps extends Window_ConstructProps {
    section_name?:string
    view_name?:string
}
export class ShortcutsWindow extends GObject.InitiallyUnowned {
    /* Properties of Gtk.ShortcutsWindow */
    section_name:string
    view_name:string
    /* Properties of Gtk.Window */
    accept_focus:boolean
    application:Application
    attached_to:Widget
    decorated:boolean
    default_height:number
    default_width:number
    deletable:boolean
    destroy_with_parent:boolean
    focus_on_map:boolean
    focus_visible:boolean
    gravity:Gdk.Gravity
    has_resize_grip:boolean
    readonly has_toplevel_focus:boolean
    hide_titlebar_when_maximized:boolean
    icon:GdkPixbuf.Pixbuf
    icon_name:string
    readonly is_active:boolean
    readonly is_maximized:boolean
    mnemonics_visible:boolean
    modal:boolean
    resizable:boolean
    readonly resize_grip_visible:boolean
    role:string
    screen:Gdk.Screen
    skip_pager_hint:boolean
    skip_taskbar_hint:boolean
    startup_id:string
    title:string
    transient_for:Window
    type_hint:Gdk.WindowTypeHint
    urgency_hint:boolean
    window_position:WindowPosition
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.ShortcutsWindow */
    /* Fields of Gtk.Window */
    bin:Bin
    priv:WindowPrivate
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Window */
    activate_default(): boolean
    activate_focus(): boolean
    activate_key(event: Gdk.EventKey): boolean
    add_accel_group(accel_group: AccelGroup): void
    add_mnemonic(keyval: number, target: Widget): void
    begin_move_drag(button: number, root_x: number, root_y: number, timestamp: number): void
    begin_resize_drag(edge: Gdk.WindowEdge, button: number, root_x: number, root_y: number, timestamp: number): void
    close(): void
    deiconify(): void
    fullscreen(): void
    fullscreen_on_monitor(screen: Gdk.Screen, monitor: number): void
    get_accept_focus(): boolean
    get_application(): Application | null
    get_attached_to(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_on_map(): boolean
    get_focus_visible(): boolean
    get_gravity(): Gdk.Gravity
    get_group(): WindowGroup
    get_has_resize_grip(): boolean
    get_hide_titlebar_when_maximized(): boolean
    get_icon(): GdkPixbuf.Pixbuf
    get_icon_list(): GdkPixbuf.Pixbuf[]
    get_icon_name(): string | null
    get_mnemonic_modifier(): Gdk.ModifierType
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_opacity(): number
    get_position(): [ /* root_x */ number | null, /* root_y */ number | null ]
    get_resizable(): boolean
    get_resize_grip_area(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_role(): string | null
    get_screen(): Gdk.Screen
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    get_skip_pager_hint(): boolean
    get_skip_taskbar_hint(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    get_type_hint(): Gdk.WindowTypeHint
    get_urgency_hint(): boolean
    get_window_type(): WindowType
    has_group(): boolean
    iconify(): void
    maximize(): void
    mnemonic_activate(keyval: number, modifier: Gdk.ModifierType): boolean
    move(x: number, y: number): void
    parse_geometry(geometry: string): boolean
    present(): void
    present_with_time(timestamp: number): void
    propagate_key_event(event: Gdk.EventKey): boolean
    remove_accel_group(accel_group: AccelGroup): void
    remove_mnemonic(keyval: number, target: Widget): void
    reshow_with_initial_size(): void
    resize(width: number, height: number): void
    resize_grip_is_visible(): boolean
    resize_to_geometry(width: number, height: number): void
    set_accept_focus(setting: boolean): void
    set_application(application?: Application | null): void
    set_attached_to(attach_widget?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default(default_widget?: Widget | null): void
    set_default_geometry(width: number, height: number): void
    set_default_size(width: number, height: number): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_focus(focus?: Widget | null): void
    set_focus_on_map(setting: boolean): void
    set_focus_visible(setting: boolean): void
    set_geometry_hints(geometry_widget: Widget | null, geometry: Gdk.Geometry | null, geom_mask: Gdk.WindowHints): void
    set_gravity(gravity: Gdk.Gravity): void
    set_has_resize_grip(value: boolean): void
    set_has_user_ref_count(setting: boolean): void
    set_hide_titlebar_when_maximized(setting: boolean): void
    set_icon(icon?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_file(filename: string): boolean
    set_icon_list(list: GdkPixbuf.Pixbuf[]): void
    set_icon_name(name?: string | null): void
    set_keep_above(setting: boolean): void
    set_keep_below(setting: boolean): void
    set_mnemonic_modifier(modifier: Gdk.ModifierType): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_opacity(opacity: number): void
    set_position(position: WindowPosition): void
    set_resizable(resizable: boolean): void
    set_role(role: string): void
    set_screen(screen: Gdk.Screen): void
    set_skip_pager_hint(setting: boolean): void
    set_skip_taskbar_hint(setting: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title: string): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    set_type_hint(hint: Gdk.WindowTypeHint): void
    set_urgency_hint(setting: boolean): void
    set_wmclass(wmclass_name: string, wmclass_class: string): void
    stick(): void
    unfullscreen(): void
    unmaximize(): void
    unstick(): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.ShortcutsWindow */
    vfunc_close?(): void
    vfunc_search?(): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ShortcutsWindow */
    connect(sigName: "close", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "search", callback: ((obj: ShortcutsWindow) => void))
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "activate-focus", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "enable-debugging", callback: ((obj: ShortcutsWindow, toggle: boolean) => boolean))
    connect(sigName: "keys-changed", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "set-focus", callback: ((obj: ShortcutsWindow, object: Widget) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: ShortcutsWindow, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "remove", callback: ((obj: ShortcutsWindow, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: ShortcutsWindow, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "button-press-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: ShortcutsWindow, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: ShortcutsWindow, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "configure-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: ShortcutsWindow, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "destroy-event", callback: ((obj: ShortcutsWindow, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: ShortcutsWindow, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: ShortcutsWindow, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: ShortcutsWindow, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: ShortcutsWindow, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: ShortcutsWindow, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: ShortcutsWindow, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "grab-notify", callback: ((obj: ShortcutsWindow, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: ShortcutsWindow, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: ShortcutsWindow, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "map-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: ShortcutsWindow, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: ShortcutsWindow, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: ShortcutsWindow, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: ShortcutsWindow) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: ShortcutsWindow, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "screen-changed", callback: ((obj: ShortcutsWindow, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: ShortcutsWindow, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: ShortcutsWindow, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "show-help", callback: ((obj: ShortcutsWindow, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: ShortcutsWindow, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: ShortcutsWindow, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: ShortcutsWindow, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: ShortcutsWindow, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "touch-event", callback: ((obj: ShortcutsWindow, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "unmap-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: ShortcutsWindow) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: ShortcutsWindow, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::section-name", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view-name", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accept-focus", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::application", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attached-to", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decorated", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-height", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-width", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::deletable", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::destroy-with-parent", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-map", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-visible", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gravity", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-resize-grip", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-toplevel-focus", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hide-titlebar-when-maximized", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-active", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-maximized", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonics-visible", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modal", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-grip-visible", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::role", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-pager-hint", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-taskbar-hint", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::startup-id", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transient-for", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type-hint", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::urgency-hint", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-position", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: ShortcutsWindow, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ShortcutsWindow_ConstructProps): ShortcutsWindow
    constructor (config?: ShortcutsWindow_ConstructProps)
}
export interface SizeGroup_ConstructProps extends GObject.Object_ConstructProps {
    ignore_hidden?:boolean
    mode?:SizeGroupMode
}
export class SizeGroup extends GObject.Object {
    /* Properties of Gtk.SizeGroup */
    ignore_hidden:boolean
    mode:SizeGroupMode
    /* Fields of Gtk.SizeGroup */
    parent_instance:GObject.Object
    /* Methods of Gtk.SizeGroup */
    add_widget(widget: Widget): void
    get_ignore_hidden(): boolean
    get_mode(): SizeGroupMode
    get_widgets(): GLib.SList
    remove_widget(widget: Widget): void
    set_ignore_hidden(ignore_hidden: boolean): void
    set_mode(mode: SizeGroupMode): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::ignore-hidden", callback: ((obj: SizeGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mode", callback: ((obj: SizeGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SizeGroup_ConstructProps): SizeGroup
    constructor (config?: SizeGroup_ConstructProps)
}
export interface Socket_ConstructProps extends Container_ConstructProps {
}
export class Socket extends Container {
    /* Fields of Gtk.Socket */
    container:Container
    priv:SocketPrivate
    /* Methods of Gtk.Socket */
    add_id(window: xlib.Window): void
    get_id(): xlib.Window
    get_plug_window(): Gdk.Window | null
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Socket */
    vfunc_plug_added?(): void
    vfunc_plug_removed?(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Socket */
    connect(sigName: "plug-added", callback: ((obj: Socket) => void))
    connect(sigName: "plug-removed", callback: ((obj: Socket) => boolean))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Socket_ConstructProps): Socket
    constructor (config?: Socket_ConstructProps)
}
export interface SpinButton_ConstructProps extends Entry_ConstructProps {
    adjustment?:Adjustment
    climb_rate?:number
    digits?:number
    numeric?:boolean
    snap_to_ticks?:boolean
    update_policy?:SpinButtonUpdatePolicy
    value?:number
    wrap?:boolean
}
export class SpinButton extends Entry {
    /* Properties of Gtk.SpinButton */
    adjustment:Adjustment
    climb_rate:number
    digits:number
    numeric:boolean
    snap_to_ticks:boolean
    update_policy:SpinButtonUpdatePolicy
    value:number
    wrap:boolean
    /* Properties of Gtk.CellEditable */
    editing_canceled:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.SpinButton */
    entry:Entry
    /* Methods of Gtk.SpinButton */
    configure(adjustment: Adjustment | null, climb_rate: number, digits: number): void
    get_adjustment(): Adjustment
    get_digits(): number
    get_increments(): [ /* step */ number | null, /* page */ number | null ]
    get_numeric(): boolean
    get_range(): [ /* min */ number | null, /* max */ number | null ]
    get_snap_to_ticks(): boolean
    get_update_policy(): SpinButtonUpdatePolicy
    get_value(): number
    get_value_as_int(): number
    get_wrap(): boolean
    set_adjustment(adjustment: Adjustment): void
    set_digits(digits: number): void
    set_increments(step: number, page: number): void
    set_numeric(numeric: boolean): void
    set_range(min: number, max: number): void
    set_snap_to_ticks(snap_to_ticks: boolean): void
    set_update_policy(policy: SpinButtonUpdatePolicy): void
    set_value(value: number): void
    set_wrap(wrap: boolean): void
    spin(direction: SpinType, increment: number): void
    update(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellEditable */
    editing_done(): void
    remove_widget(): void
    start_editing(event?: Gdk.Event | null): void
    /* Methods of Gtk.Editable */
    copy_clipboard(): void
    cut_clipboard(): void
    delete_selection(): void
    delete_text(start_pos: number, end_pos: number): void
    get_chars(start_pos: number, end_pos: number): string
    get_editable(): boolean
    get_position(): number
    get_selection_bounds(): [ /* returnType */ boolean, /* start_pos */ number | null, /* end_pos */ number | null ]
    insert_text(new_text: string, new_text_length: number, position: number): void
    paste_clipboard(): void
    select_region(start_pos: number, end_pos: number): void
    set_editable(is_editable: boolean): void
    set_position(position: number): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.SpinButton */
    vfunc_change_value?(scroll: ScrollType): void
    vfunc_input?(new_value: number): number
    vfunc_output?(): number
    vfunc_value_changed?(): void
    vfunc_wrapped?(): void
    /* Virtual methods of Gtk.Entry */
    vfunc_activate?(): void
    vfunc_backspace?(): void
    vfunc_copy_clipboard?(): void
    vfunc_cut_clipboard?(): void
    vfunc_delete_from_cursor?(type: DeleteType, count: number): void
    vfunc_get_frame_size?(x: number, y: number, width: number, height: number): void
    vfunc_get_text_area_size?(x: number, y: number, width: number, height: number): void
    vfunc_insert_at_cursor?(str: string): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_paste_clipboard?(): void
    vfunc_populate_popup?(popup: Widget): void
    vfunc_toggle_overwrite?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.SpinButton */
    connect(sigName: "change-value", callback: ((obj: SpinButton, scroll: ScrollType) => void))
    connect(sigName: "input", callback: ((obj: SpinButton) => number))
    connect(sigName: "output", callback: ((obj: SpinButton) => boolean))
    connect(sigName: "value-changed", callback: ((obj: SpinButton) => void))
    connect(sigName: "wrapped", callback: ((obj: SpinButton) => void))
    /* Signals of Gtk.CellEditable */
    connect(sigName: "editing-done", callback: ((obj: SpinButton) => void))
    connect(sigName: "remove-widget", callback: ((obj: SpinButton) => void))
    /* Signals of Gtk.Editable */
    connect(sigName: "changed", callback: ((obj: SpinButton) => void))
    connect(sigName: "delete-text", callback: ((obj: SpinButton, start_pos: number, end_pos: number) => void))
    connect(sigName: "insert-text", callback: ((obj: SpinButton, new_text: string, new_text_length: number, position: number) => void))
    connect(sigName: "notify::adjustment", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::climb-rate", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::digits", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::numeric", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::snap-to-ticks", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::update-policy", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-canceled", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: SpinButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SpinButton_ConstructProps): SpinButton
    constructor (config?: SpinButton_ConstructProps)
    static new_with_range(min: number, max: number, step: number): SpinButton
}
export interface SpinButtonAccessible_ConstructProps extends EntryAccessible_ConstructProps {
}
export class SpinButtonAccessible extends EntryAccessible {
    /* Fields of Gtk.SpinButtonAccessible */
    parent: any
    priv:SpinButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.EditableText */
    copy_text(start_pos: number, end_pos: number): void
    cut_text(start_pos: number, end_pos: number): void
    delete_text(start_pos: number, end_pos: number): void
    insert_text(string: string, length: number, position: number): void
    paste_text(position: number): void
    set_run_attributes(attrib_set: Atk.AttributeSet, start_offset: number, end_offset: number): boolean
    set_text_contents(string: string): void
    /* Methods of Atk.Text */
    add_selection(start_offset: number, end_offset: number): boolean
    get_bounded_ranges(rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType): Atk.TextRange[]
    get_caret_offset(): number
    get_character_at_offset(offset: number): number
    get_character_count(): number
    get_character_extents(offset: number, coords: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_default_attributes(): Atk.AttributeSet
    get_n_selections(): number
    get_offset_at_point(x: number, y: number, coords: Atk.CoordType): number
    get_range_extents(start_offset: number, end_offset: number, coord_type: Atk.CoordType): /* rect */ Atk.TextRectangle
    get_run_attributes(offset: number): [ /* returnType */ Atk.AttributeSet, /* start_offset */ number, /* end_offset */ number ]
    get_selection(selection_num: number): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_string_at_offset(offset: number, granularity: Atk.TextGranularity): [ /* returnType */ string | null, /* start_offset */ number, /* end_offset */ number ]
    get_text(start_offset: number, end_offset: number): string
    get_text_after_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_at_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_before_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    remove_selection(selection_num: number): boolean
    set_caret_offset(offset: number): boolean
    set_selection(selection_num: number, start_offset: number, end_offset: number): boolean
    /* Methods of Atk.Value */
    get_current_value(): /* value */ any
    get_increment(): number
    get_maximum_value(): /* value */ any
    get_minimum_increment(): /* value */ any
    get_minimum_value(): /* value */ any
    get_range(): Atk.Range | null
    get_sub_ranges(): GLib.SList
    get_value_and_text(): [ /* value */ number, /* text */ string | null ]
    set_current_value(value: any): boolean
    set_value(new_value: number): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: SpinButtonAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Text */
    connect(sigName: "text-attributes-changed", callback: ((obj: SpinButtonAccessible) => void))
    connect(sigName: "text-caret-moved", callback: ((obj: SpinButtonAccessible, arg1: number) => void))
    connect(sigName: "text-changed", callback: ((obj: SpinButtonAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "text-insert", callback: ((obj: SpinButtonAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-remove", callback: ((obj: SpinButtonAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-selection-changed", callback: ((obj: SpinButtonAccessible) => void))
    /* Signals of Atk.Value */
    connect(sigName: "value-changed", callback: ((obj: SpinButtonAccessible, value: number, text: string) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SpinButtonAccessible_ConstructProps): SpinButtonAccessible
    constructor (config?: SpinButtonAccessible_ConstructProps)
}
export interface Spinner_ConstructProps extends Widget_ConstructProps {
    active?:boolean
}
export class Spinner extends Widget {
    /* Properties of Gtk.Spinner */
    active:boolean
    /* Fields of Gtk.Spinner */
    parent: any
    /* Methods of Gtk.Spinner */
    start(): void
    stop(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::active", callback: ((obj: Spinner, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Spinner_ConstructProps): Spinner
    constructor (config?: Spinner_ConstructProps)
}
export interface SpinnerAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class SpinnerAccessible extends WidgetAccessible {
    /* Fields of Gtk.SpinnerAccessible */
    parent: any
    priv:SpinnerAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: SpinnerAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SpinnerAccessible_ConstructProps): SpinnerAccessible
    constructor (config?: SpinnerAccessible_ConstructProps)
}
export interface Stack_ConstructProps extends Container_ConstructProps {
    hhomogeneous?:boolean
    homogeneous?:boolean
    interpolate_size?:boolean
    transition_duration?:number
    transition_type?:StackTransitionType
    vhomogeneous?:boolean
    visible_child?:Widget
    visible_child_name?:string
}
export class Stack extends Container {
    /* Properties of Gtk.Stack */
    hhomogeneous:boolean
    homogeneous:boolean
    interpolate_size:boolean
    transition_duration:number
    readonly transition_running:boolean
    transition_type:StackTransitionType
    vhomogeneous:boolean
    visible_child:Widget
    visible_child_name:string
    /* Fields of Gtk.Stack */
    parent_instance:Container
    /* Methods of Gtk.Stack */
    add_named(child: Widget, name: string): void
    add_titled(child: Widget, name: string, title: string): void
    get_child_by_name(name: string): Widget | null
    get_hhomogeneous(): boolean
    get_homogeneous(): boolean
    get_interpolate_size(): boolean
    get_transition_duration(): number
    get_transition_running(): boolean
    get_transition_type(): StackTransitionType
    get_vhomogeneous(): boolean
    get_visible_child(): Widget | null
    get_visible_child_name(): string | null
    set_hhomogeneous(hhomogeneous: boolean): void
    set_homogeneous(homogeneous: boolean): void
    set_interpolate_size(interpolate_size: boolean): void
    set_transition_duration(duration: number): void
    set_transition_type(transition: StackTransitionType): void
    set_vhomogeneous(vhomogeneous: boolean): void
    set_visible_child(child: Widget): void
    set_visible_child_full(name: string, transition: StackTransitionType): void
    set_visible_child_name(name: string): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::hhomogeneous", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::interpolate-size", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transition-duration", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transition-running", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transition-type", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vhomogeneous", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-child", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-child-name", callback: ((obj: Stack, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Stack_ConstructProps): Stack
    constructor (config?: Stack_ConstructProps)
}
export interface StackAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class StackAccessible extends ContainerAccessible {
    /* Fields of Gtk.StackAccessible */
    parent: any
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: StackAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StackAccessible_ConstructProps): StackAccessible
    constructor (config?: StackAccessible_ConstructProps)
}
export interface StackSidebar_ConstructProps extends Bin_ConstructProps {
    stack?:Stack
}
export class StackSidebar extends Bin {
    /* Properties of Gtk.StackSidebar */
    stack:Stack
    /* Fields of Gtk.StackSidebar */
    parent: any
    /* Methods of Gtk.StackSidebar */
    get_stack(): Stack | null
    set_stack(stack: Stack): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::stack", callback: ((obj: StackSidebar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StackSidebar_ConstructProps): StackSidebar
    constructor (config?: StackSidebar_ConstructProps)
}
export interface StackSwitcher_ConstructProps extends Box_ConstructProps {
    icon_size?:number
    stack?:Stack
}
export class StackSwitcher extends Box {
    /* Properties of Gtk.StackSwitcher */
    icon_size:number
    stack:Stack
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.StackSwitcher */
    widget:Box
    /* Methods of Gtk.StackSwitcher */
    get_stack(): Stack | null
    set_stack(stack?: Stack | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::icon-size", callback: ((obj: StackSwitcher, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stack", callback: ((obj: StackSwitcher, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: StackSwitcher, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StackSwitcher_ConstructProps): StackSwitcher
    constructor (config?: StackSwitcher_ConstructProps)
}
export interface StatusIcon_ConstructProps extends GObject.Object_ConstructProps {
    file?:string
    gicon?:Gio.Icon
    has_tooltip?:boolean
    icon_name?:string
    pixbuf?:GdkPixbuf.Pixbuf
    screen?:Gdk.Screen
    stock?:string
    title?:string
    tooltip_markup?:string
    tooltip_text?:string
    visible?:boolean
}
export class StatusIcon extends GObject.Object {
    /* Properties of Gtk.StatusIcon */
    readonly embedded:boolean
    file:string
    gicon:Gio.Icon
    has_tooltip:boolean
    icon_name:string
    readonly orientation:Orientation
    pixbuf:GdkPixbuf.Pixbuf
    screen:Gdk.Screen
    readonly size:number
    stock:string
    readonly storage_type:ImageType
    title:string
    tooltip_markup:string
    tooltip_text:string
    visible:boolean
    /* Fields of Gtk.StatusIcon */
    parent_instance:GObject.Object
    priv:StatusIconPrivate
    /* Methods of Gtk.StatusIcon */
    get_geometry(): [ /* returnType */ boolean, /* screen */ Gdk.Screen | null, /* area */ Gdk.Rectangle | null, /* orientation */ Orientation | null ]
    get_gicon(): Gio.Icon | null
    get_has_tooltip(): boolean
    get_icon_name(): string | null
    get_pixbuf(): GdkPixbuf.Pixbuf | null
    get_screen(): Gdk.Screen
    get_size(): number
    get_stock(): string | null
    get_storage_type(): ImageType
    get_title(): string
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_visible(): boolean
    get_x11_window_id(): number
    is_embedded(): boolean
    set_from_file(filename: string): void
    set_from_gicon(icon: Gio.Icon): void
    set_from_icon_name(icon_name: string): void
    set_from_pixbuf(pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_from_stock(stock_id: string): void
    set_has_tooltip(has_tooltip: boolean): void
    set_name(name: string): void
    set_screen(screen: Gdk.Screen): void
    set_title(title: string): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text: string): void
    set_visible(visible: boolean): void
    /* Virtual methods of Gtk.StatusIcon */
    vfunc_activate?(): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_popup_menu?(button: number, activate_time: number): void
    vfunc_query_tooltip?(x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip): boolean
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_size_changed?(size: number): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.StatusIcon */
    connect(sigName: "activate", callback: ((obj: StatusIcon) => void))
    connect(sigName: "button-press-event", callback: ((obj: StatusIcon, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: StatusIcon, event: Gdk.EventButton) => boolean))
    connect(sigName: "popup-menu", callback: ((obj: StatusIcon, button: number, activate_time: number) => void))
    connect(sigName: "query-tooltip", callback: ((obj: StatusIcon, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "scroll-event", callback: ((obj: StatusIcon, event: Gdk.EventScroll) => boolean))
    connect(sigName: "size-changed", callback: ((obj: StatusIcon, size: number) => boolean))
    connect(sigName: "notify::embedded", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::file", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gicon", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixbuf", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::storage-type", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: StatusIcon, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StatusIcon_ConstructProps): StatusIcon
    constructor (config?: StatusIcon_ConstructProps)
    static new_from_file(filename: string): StatusIcon
    static new_from_gicon(icon: Gio.Icon): StatusIcon
    static new_from_icon_name(icon_name: string): StatusIcon
    static new_from_pixbuf(pixbuf: GdkPixbuf.Pixbuf): StatusIcon
    static new_from_stock(stock_id: string): StatusIcon
    static position_menu(menu: Menu, x: number, y: number, user_data: StatusIcon): /* push_in */ boolean
}
export interface Statusbar_ConstructProps extends Box_ConstructProps {
}
export class Statusbar extends Widget {
    /* Properties of Gtk.Box */
    baseline_position:BaselinePosition
    homogeneous:boolean
    spacing:number
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Statusbar */
    parent_widget:Box
    /* Fields of Gtk.Box */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Methods of Gtk.Statusbar */
    get_context_id(context_description: string): number
    get_message_area(): Box
    pop(context_id: number): void
    push(context_id: number, text: string): number
    remove(context_id: number, message_id: number): void
    remove_all(context_id: number): void
    /* Methods of Gtk.Box */
    get_baseline_position(): BaselinePosition
    get_center_widget(): Widget | null
    get_homogeneous(): boolean
    get_spacing(): number
    pack_end(child: Widget, expand: boolean, fill: boolean, padding: number): void
    pack_start(child: Widget, expand: boolean, fill: boolean, padding: number): void
    query_child_packing(child: Widget): [ /* expand */ boolean, /* fill */ boolean, /* padding */ number, /* pack_type */ PackType ]
    reorder_child(child: Widget, position: number): void
    set_baseline_position(position: BaselinePosition): void
    set_center_widget(widget?: Widget | null): void
    set_child_packing(child: Widget, expand: boolean, fill: boolean, padding: number, pack_type: PackType): void
    set_homogeneous(homogeneous: boolean): void
    set_spacing(spacing: number): void
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Statusbar */
    vfunc_text_popped?(context_id: number, text: string): void
    vfunc_text_pushed?(context_id: number, text: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Statusbar */
    connect(sigName: "text-popped", callback: ((obj: Statusbar, context_id: number, text: string) => void))
    connect(sigName: "text-pushed", callback: ((obj: Statusbar, context_id: number, text: string) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Statusbar, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Statusbar) => void))
    connect(sigName: "remove", callback: ((obj: Statusbar, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Statusbar, object: Widget) => void))
    connect(sigName: "notify::baseline-position", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Statusbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Statusbar_ConstructProps): Statusbar
    constructor (config?: Statusbar_ConstructProps)
}
export interface StatusbarAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class StatusbarAccessible extends ContainerAccessible {
    /* Fields of Gtk.StatusbarAccessible */
    parent: any
    priv:StatusbarAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: StatusbarAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StatusbarAccessible_ConstructProps): StatusbarAccessible
    constructor (config?: StatusbarAccessible_ConstructProps)
}
export interface Style_ConstructProps extends GObject.Object_ConstructProps {
    context?:StyleContext
}
export class Style extends GObject.Object {
    /* Properties of Gtk.Style */
    /* Fields of Gtk.Style */
    fg:Gdk.Color[]
    bg:Gdk.Color[]
    light:Gdk.Color[]
    dark:Gdk.Color[]
    mid:Gdk.Color[]
    text:Gdk.Color[]
    base:Gdk.Color[]
    text_aa:Gdk.Color[]
    black:Gdk.Color
    white:Gdk.Color
    font_desc:Pango.FontDescription
    xthickness:number
    ythickness:number
    background:cairo.Pattern[]
    /* Methods of Gtk.Style */
    apply_default_background(cr: cairo.Context, window: Gdk.Window, state_type: StateType, x: number, y: number, width: number, height: number): void
    copy(): Style
    detach(): void
    get_style_property(widget_type: number, property_name: string): /* value */ any
    has_context(): boolean
    lookup_color(color_name: string): [ /* returnType */ boolean, /* color */ Gdk.Color ]
    lookup_icon_set(stock_id: string): IconSet
    render_icon(source: IconSource, direction: TextDirection, state: StateType, size: number, widget?: Widget | null, detail?: string | null): GdkPixbuf.Pixbuf
    set_background(window: Gdk.Window, state_type: StateType): void
    /* Virtual methods of Gtk.Style */
    vfunc_copy?(src: Style): void
    vfunc_draw_arrow?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, arrow_type: ArrowType, fill: boolean, x: number, y: number, width: number, height: number): void
    vfunc_draw_box?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_box_gap?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number, gap_side: PositionType, gap_x: number, gap_width: number): void
    vfunc_draw_check?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_diamond?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_expander?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, x: number, y: number, expander_style: ExpanderStyle): void
    vfunc_draw_extension?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number, gap_side: PositionType): void
    vfunc_draw_flat_box?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_focus?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_handle?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number, orientation: Orientation): void
    vfunc_draw_hline?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, x1: number, x2: number, y: number): void
    vfunc_draw_layout?(cr: cairo.Context, state_type: StateType, use_text: boolean, widget: Widget, detail: string, x: number, y: number, layout: Pango.Layout): void
    vfunc_draw_option?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_resize_grip?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, edge: Gdk.WindowEdge, x: number, y: number, width: number, height: number): void
    vfunc_draw_shadow?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_shadow_gap?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number, gap_side: PositionType, gap_x: number, gap_width: number): void
    vfunc_draw_slider?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number, orientation: Orientation): void
    vfunc_draw_spinner?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, step: number, x: number, y: number, width: number, height: number): void
    vfunc_draw_tab?(cr: cairo.Context, state_type: StateType, shadow_type: ShadowType, widget: Widget, detail: string, x: number, y: number, width: number, height: number): void
    vfunc_draw_vline?(cr: cairo.Context, state_type: StateType, widget: Widget, detail: string, y1_: number, y2_: number, x: number): void
    vfunc_init_from_rc?(rc_style: RcStyle): void
    vfunc_realize?(): void
    vfunc_render_icon?(source: IconSource, direction: TextDirection, state: StateType, size: number, widget?: Widget | null, detail?: string | null): GdkPixbuf.Pixbuf
    vfunc_set_background?(window: Gdk.Window, state_type: StateType): void
    vfunc_unrealize?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Style */
    connect(sigName: "realize", callback: ((obj: Style) => void))
    connect(sigName: "unrealize", callback: ((obj: Style) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Style_ConstructProps): Style
    constructor (config?: Style_ConstructProps)
}
export interface StyleContext_ConstructProps extends GObject.Object_ConstructProps {
    direction?:TextDirection
    paint_clock?:Gdk.FrameClock
    parent?:StyleContext
    screen?:Gdk.Screen
}
export class StyleContext {
    /* Properties of Gtk.StyleContext */
    direction:TextDirection
    paint_clock:Gdk.FrameClock
    parent:StyleContext
    screen:Gdk.Screen
    /* Fields of Gtk.StyleContext */
    parent_object:GObject.Object
    priv:StyleContextPrivate
    /* Fields of GObject.Object */
    g_type_instance:GObject.TypeInstance
    /* Methods of Gtk.StyleContext */
    add_class(class_name: string): void
    add_provider(provider: StyleProvider, priority: number): void
    add_region(region_name: string, flags: RegionFlags): void
    cancel_animations(region_id?: object | null): void
    get_background_color(state: StateFlags): /* color */ Gdk.RGBA
    get_border(state: StateFlags): /* border */ Border
    get_border_color(state: StateFlags): /* color */ Gdk.RGBA
    get_color(state: StateFlags): /* color */ Gdk.RGBA
    get_direction(): TextDirection
    get_font(state: StateFlags): Pango.FontDescription
    get_frame_clock(): Gdk.FrameClock | null
    get_junction_sides(): JunctionSides
    get_margin(state: StateFlags): /* margin */ Border
    get_padding(state: StateFlags): /* padding */ Border
    get_parent(): StyleContext | null
    get_path(): WidgetPath
    get_property(property: string, state: StateFlags): /* value */ any
    get_scale(): number
    get_screen(): Gdk.Screen
    get_section(property: string): CssSection | null
    get_state(): StateFlags
    get_style_property(property_name: string, value: any): void
    has_class(class_name: string): boolean
    has_region(region_name: string): [ /* returnType */ boolean, /* flags_return */ RegionFlags | null ]
    invalidate(): void
    list_classes(): string[]
    list_regions(): string[]
    lookup_color(color_name: string): [ /* returnType */ boolean, /* color */ Gdk.RGBA ]
    lookup_icon_set(stock_id: string): IconSet | null
    notify_state_change(window: Gdk.Window, region_id: object | null, state: StateType, state_value: boolean): void
    pop_animatable_region(): void
    push_animatable_region(region_id?: object | null): void
    remove_class(class_name: string): void
    remove_provider(provider: StyleProvider): void
    remove_region(region_name: string): void
    restore(): void
    save(): void
    scroll_animations(window: Gdk.Window, dx: number, dy: number): void
    set_background(window: Gdk.Window): void
    set_direction(direction: TextDirection): void
    set_frame_clock(frame_clock: Gdk.FrameClock): void
    set_junction_sides(sides: JunctionSides): void
    set_parent(parent?: StyleContext | null): void
    set_path(path: WidgetPath): void
    set_scale(scale: number): void
    set_screen(screen: Gdk.Screen): void
    set_state(flags: StateFlags): void
    state_is_running(state: StateType): [ /* returnType */ boolean, /* progress */ number ]
    to_string(flags: StyleContextPrintFlags): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.StyleContext */
    vfunc_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.StyleContext */
    connect(sigName: "changed", callback: ((obj: StyleContext) => void))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((obj: StyleContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::direction", callback: ((obj: StyleContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paint-clock", callback: ((obj: StyleContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: StyleContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: StyleContext, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StyleContext_ConstructProps): StyleContext
    constructor (config?: StyleContext_ConstructProps)
    static add_provider_for_screen(screen: Gdk.Screen, provider: StyleProvider, priority: number): void
    static remove_provider_for_screen(screen: Gdk.Screen, provider: StyleProvider): void
    static reset_widgets(screen: Gdk.Screen): void
}
export interface StyleProperties_ConstructProps extends GObject.Object_ConstructProps {
}
export class StyleProperties {
    /* Fields of Gtk.StyleProperties */
    /* Fields of GObject.Object */
    g_type_instance:GObject.TypeInstance
    /* Methods of Gtk.StyleProperties */
    clear(): void
    get_property(property: string, state: StateFlags): [ /* returnType */ boolean, /* value */ any ]
    lookup_color(name: string): SymbolicColor
    map_color(name: string, color: SymbolicColor): void
    merge(props_to_merge: StyleProperties, replace: boolean): void
    set_property(property: string, state: StateFlags, value: any): void
    unset_property(property: string, state: StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Methods of Gtk.StyleProvider */
    get_icon_factory(path: WidgetPath): IconFactory | null
    get_style(path: WidgetPath): StyleProperties | null
    get_style_property(path: WidgetPath, state: StateFlags, pspec: GObject.ParamSpec): [ /* returnType */ boolean, /* value */ any ]
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((obj: StyleProperties, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: StyleProperties_ConstructProps): StyleProperties
    constructor (config?: StyleProperties_ConstructProps)
}
export interface Switch_ConstructProps extends Widget_ConstructProps {
    active?:boolean
    state?:boolean
}
export class Switch extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Switch */
    active:boolean
    state:boolean
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.Switch */
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Switch */
    get_active(): boolean
    get_state(): boolean
    set_active(is_active: boolean): void
    set_state(state: boolean): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.Switch */
    vfunc_activate?(): void
    vfunc_state_set?(state: boolean): boolean
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Switch */
    connect(sigName: "activate", callback: ((obj: Switch) => void))
    connect(sigName: "state-set", callback: ((obj: Switch, state: boolean) => boolean))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Switch) => void))
    connect(sigName: "button-press-event", callback: ((obj: Switch, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Switch, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Switch, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Switch, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Switch) => void))
    connect(sigName: "configure-event", callback: ((obj: Switch, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Switch, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Switch, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Switch) => void))
    connect(sigName: "destroy-event", callback: ((obj: Switch, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Switch, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Switch, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Switch, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Switch, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Switch, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Switch, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Switch, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Switch, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Switch, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Switch, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Switch, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Switch, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Switch, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Switch, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Switch, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Switch, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Switch, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Switch, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Switch) => void))
    connect(sigName: "grab-notify", callback: ((obj: Switch, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Switch) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Switch, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Switch, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Switch, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Switch, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Switch, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Switch) => void))
    connect(sigName: "map-event", callback: ((obj: Switch, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Switch, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Switch, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Switch, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Switch, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Switch) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Switch, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Switch, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Switch, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Switch, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Switch) => void))
    connect(sigName: "screen-changed", callback: ((obj: Switch, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Switch, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Switch, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Switch, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Switch, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Switch, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Switch, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Switch) => void))
    connect(sigName: "show-help", callback: ((obj: Switch, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Switch, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Switch, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Switch, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Switch, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Switch) => void))
    connect(sigName: "touch-event", callback: ((obj: Switch, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Switch) => void))
    connect(sigName: "unmap-event", callback: ((obj: Switch, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Switch) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Switch, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Switch, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::active", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::state", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: Switch, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Switch_ConstructProps): Switch
    constructor (config?: Switch_ConstructProps)
}
export interface SwitchAccessible_ConstructProps extends WidgetAccessible_ConstructProps {
}
export class SwitchAccessible extends WidgetAccessible {
    /* Fields of Gtk.SwitchAccessible */
    parent: any
    priv:SwitchAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: SwitchAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: SwitchAccessible_ConstructProps): SwitchAccessible
    constructor (config?: SwitchAccessible_ConstructProps)
}
export interface Table_ConstructProps extends Container_ConstructProps {
    column_spacing?:number
    homogeneous?:boolean
    n_columns?:number
    n_rows?:number
    row_spacing?:number
}
export class Table extends Container {
    /* Properties of Gtk.Table */
    column_spacing:number
    homogeneous:boolean
    n_columns:number
    n_rows:number
    row_spacing:number
    /* Fields of Gtk.Table */
    container:Container
    /* Methods of Gtk.Table */
    attach(child: Widget, left_attach: number, right_attach: number, top_attach: number, bottom_attach: number, xoptions: AttachOptions, yoptions: AttachOptions, xpadding: number, ypadding: number): void
    attach_defaults(widget: Widget, left_attach: number, right_attach: number, top_attach: number, bottom_attach: number): void
    get_col_spacing(column: number): number
    get_default_col_spacing(): number
    get_default_row_spacing(): number
    get_homogeneous(): boolean
    get_row_spacing(row: number): number
    get_size(): [ /* rows */ number | null, /* columns */ number | null ]
    resize(rows: number, columns: number): void
    set_col_spacing(column: number, spacing: number): void
    set_col_spacings(spacing: number): void
    set_homogeneous(homogeneous: boolean): void
    set_row_spacing(row: number, spacing: number): void
    set_row_spacings(spacing: number): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::column-spacing", callback: ((obj: Table, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::homogeneous", callback: ((obj: Table, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::n-columns", callback: ((obj: Table, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::n-rows", callback: ((obj: Table, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-spacing", callback: ((obj: Table, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Table_ConstructProps): Table
    constructor (config?: Table_ConstructProps)
}
export interface TearoffMenuItem_ConstructProps extends MenuItem_ConstructProps {
}
export class TearoffMenuItem extends MenuItem {
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.TearoffMenuItem */
    menu_item:MenuItem
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.MenuItem */
    vfunc_activate_item?(): void
    vfunc_deselect?(): void
    vfunc_get_label?(): string
    vfunc_select?(): void
    vfunc_set_label?(label: string): void
    vfunc_toggle_size_allocate?(allocation: number): void
    vfunc_toggle_size_request?(requisition: number): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::action-name", callback: ((obj: TearoffMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: TearoffMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: TearoffMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: TearoffMenuItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TearoffMenuItem_ConstructProps): TearoffMenuItem
    constructor (config?: TearoffMenuItem_ConstructProps)
}
export interface TextBuffer_ConstructProps extends GObject.Object_ConstructProps {
    tag_table?:TextTagTable
    text?:string
}
export class TextBuffer extends GObject.Object {
    /* Properties of Gtk.TextBuffer */
    readonly copy_target_list:TargetList
    readonly cursor_position:number
    readonly has_selection:boolean
    readonly paste_target_list:TargetList
    text:string
    /* Fields of Gtk.TextBuffer */
    parent_instance:GObject.Object
    priv:TextBufferPrivate
    /* Methods of Gtk.TextBuffer */
    add_mark(mark: TextMark, where: TextIter): void
    add_selection_clipboard(clipboard: Clipboard): void
    apply_tag(tag: TextTag, start: TextIter, end: TextIter): void
    apply_tag_by_name(name: string, start: TextIter, end: TextIter): void
    backspace(iter: TextIter, interactive: boolean, default_editable: boolean): boolean
    begin_user_action(): void
    copy_clipboard(clipboard: Clipboard): void
    create_child_anchor(iter: TextIter): TextChildAnchor
    create_mark(mark_name: string | null, where: TextIter, left_gravity: boolean): TextMark
    cut_clipboard(clipboard: Clipboard, default_editable: boolean): void
    delete(start: TextIter, end: TextIter): void
    delete_interactive(start_iter: TextIter, end_iter: TextIter, default_editable: boolean): boolean
    delete_mark(mark: TextMark): void
    delete_mark_by_name(name: string): void
    delete_selection(interactive: boolean, default_editable: boolean): boolean
    deserialize(content_buffer: TextBuffer, format: Gdk.Atom, iter: TextIter, data: Gjs.byteArray.ByteArray): boolean
    deserialize_get_can_create_tags(format: Gdk.Atom): boolean
    deserialize_set_can_create_tags(format: Gdk.Atom, can_create_tags: boolean): void
    end_user_action(): void
    get_bounds(): [ /* start */ TextIter, /* end */ TextIter ]
    get_char_count(): number
    get_copy_target_list(): TargetList
    get_deserialize_formats(): Gdk.Atom[]
    get_end_iter(): /* iter */ TextIter
    get_has_selection(): boolean
    get_insert(): TextMark
    get_iter_at_child_anchor(anchor: TextChildAnchor): /* iter */ TextIter
    get_iter_at_line(line_number: number): /* iter */ TextIter
    get_iter_at_line_index(line_number: number, byte_index: number): /* iter */ TextIter
    get_iter_at_line_offset(line_number: number, char_offset: number): /* iter */ TextIter
    get_iter_at_mark(mark: TextMark): /* iter */ TextIter
    get_iter_at_offset(char_offset: number): /* iter */ TextIter
    get_line_count(): number
    get_mark(name: string): TextMark | null
    get_modified(): boolean
    get_paste_target_list(): TargetList
    get_selection_bound(): TextMark
    get_selection_bounds(): [ /* returnType */ boolean, /* start */ TextIter, /* end */ TextIter ]
    get_serialize_formats(): Gdk.Atom[]
    get_slice(start: TextIter, end: TextIter, include_hidden_chars: boolean): string
    get_start_iter(): /* iter */ TextIter
    get_tag_table(): TextTagTable
    get_text(start: TextIter, end: TextIter, include_hidden_chars: boolean): string
    insert(iter: TextIter, text: string, len: number): void
    insert_at_cursor(text: string, len: number): void
    insert_child_anchor(iter: TextIter, anchor: TextChildAnchor): void
    insert_interactive(iter: TextIter, text: string, len: number, default_editable: boolean): boolean
    insert_interactive_at_cursor(text: string, len: number, default_editable: boolean): boolean
    insert_markup(iter: TextIter, markup: string, len: number): void
    insert_pixbuf(iter: TextIter, pixbuf: GdkPixbuf.Pixbuf): void
    insert_range(iter: TextIter, start: TextIter, end: TextIter): void
    insert_range_interactive(iter: TextIter, start: TextIter, end: TextIter, default_editable: boolean): boolean
    move_mark(mark: TextMark, where: TextIter): void
    move_mark_by_name(name: string, where: TextIter): void
    paste_clipboard(clipboard: Clipboard, override_location: TextIter | null, default_editable: boolean): void
    place_cursor(where: TextIter): void
    register_deserialize_format(mime_type: string, function_: TextBufferDeserializeFunc, user_data_destroy: GLib.DestroyNotify): Gdk.Atom
    register_deserialize_tagset(tagset_name?: string | null): Gdk.Atom
    register_serialize_format(mime_type: string, function_: TextBufferSerializeFunc, user_data_destroy: GLib.DestroyNotify): Gdk.Atom
    register_serialize_tagset(tagset_name?: string | null): Gdk.Atom
    remove_all_tags(start: TextIter, end: TextIter): void
    remove_selection_clipboard(clipboard: Clipboard): void
    remove_tag(tag: TextTag, start: TextIter, end: TextIter): void
    remove_tag_by_name(name: string, start: TextIter, end: TextIter): void
    select_range(ins: TextIter, bound: TextIter): void
    serialize(content_buffer: TextBuffer, format: Gdk.Atom, start: TextIter, end: TextIter): Gjs.byteArray.ByteArray
    set_modified(setting: boolean): void
    set_text(text: string, len: number): void
    unregister_deserialize_format(format: Gdk.Atom): void
    unregister_serialize_format(format: Gdk.Atom): void
    /* Virtual methods of Gtk.TextBuffer */
    vfunc_apply_tag?(tag: TextTag, start: TextIter, end: TextIter): void
    vfunc_begin_user_action?(): void
    vfunc_changed?(): void
    vfunc_delete_range?(start: TextIter, end: TextIter): void
    vfunc_end_user_action?(): void
    vfunc_insert_child_anchor?(iter: TextIter, anchor: TextChildAnchor): void
    vfunc_insert_pixbuf?(iter: TextIter, pixbuf: GdkPixbuf.Pixbuf): void
    vfunc_insert_text?(pos: TextIter, new_text: string, new_text_length: number): void
    vfunc_mark_deleted?(mark: TextMark): void
    vfunc_mark_set?(location: TextIter, mark: TextMark): void
    vfunc_modified_changed?(): void
    vfunc_paste_done?(clipboard: Clipboard): void
    vfunc_remove_tag?(tag: TextTag, start: TextIter, end: TextIter): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextBuffer */
    connect(sigName: "apply-tag", callback: ((obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void))
    connect(sigName: "begin-user-action", callback: ((obj: TextBuffer) => void))
    connect(sigName: "changed", callback: ((obj: TextBuffer) => void))
    connect(sigName: "delete-range", callback: ((obj: TextBuffer, start: TextIter, end: TextIter) => void))
    connect(sigName: "end-user-action", callback: ((obj: TextBuffer) => void))
    connect(sigName: "insert-child-anchor", callback: ((obj: TextBuffer, location: TextIter, anchor: TextChildAnchor) => void))
    connect(sigName: "insert-pixbuf", callback: ((obj: TextBuffer, location: TextIter, pixbuf: GdkPixbuf.Pixbuf) => void))
    connect(sigName: "insert-text", callback: ((obj: TextBuffer, location: TextIter, text: string, len: number) => void))
    connect(sigName: "mark-deleted", callback: ((obj: TextBuffer, mark: TextMark) => void))
    connect(sigName: "mark-set", callback: ((obj: TextBuffer, location: TextIter, mark: TextMark) => void))
    connect(sigName: "modified-changed", callback: ((obj: TextBuffer) => void))
    connect(sigName: "paste-done", callback: ((obj: TextBuffer, clipboard: Clipboard) => void))
    connect(sigName: "remove-tag", callback: ((obj: TextBuffer, tag: TextTag, start: TextIter, end: TextIter) => void))
    connect(sigName: "notify::copy-target-list", callback: ((obj: TextBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursor-position", callback: ((obj: TextBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-selection", callback: ((obj: TextBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paste-target-list", callback: ((obj: TextBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((obj: TextBuffer, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextBuffer_ConstructProps): TextBuffer
    constructor (config?: TextBuffer_ConstructProps)
}
export interface TextCellAccessible_ConstructProps extends RendererCellAccessible_ConstructProps {
}
export class TextCellAccessible extends RendererCellAccessible {
    /* Fields of Gtk.TextCellAccessible */
    parent: any
    priv:TextCellAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Text */
    add_selection(start_offset: number, end_offset: number): boolean
    get_bounded_ranges(rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType): Atk.TextRange[]
    get_caret_offset(): number
    get_character_at_offset(offset: number): number
    get_character_count(): number
    get_character_extents(offset: number, coords: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_default_attributes(): Atk.AttributeSet
    get_n_selections(): number
    get_offset_at_point(x: number, y: number, coords: Atk.CoordType): number
    get_range_extents(start_offset: number, end_offset: number, coord_type: Atk.CoordType): /* rect */ Atk.TextRectangle
    get_run_attributes(offset: number): [ /* returnType */ Atk.AttributeSet, /* start_offset */ number, /* end_offset */ number ]
    get_selection(selection_num: number): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_string_at_offset(offset: number, granularity: Atk.TextGranularity): [ /* returnType */ string | null, /* start_offset */ number, /* end_offset */ number ]
    get_text(start_offset: number, end_offset: number): string
    get_text_after_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_at_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_before_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    remove_selection(selection_num: number): boolean
    set_caret_offset(offset: number): boolean
    set_selection(selection_num: number, start_offset: number, end_offset: number): boolean
    /* Virtual methods of Gtk.CellAccessible */
    vfunc_update_cache?(emit_signal: boolean): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: TextCellAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Text */
    connect(sigName: "text-attributes-changed", callback: ((obj: TextCellAccessible) => void))
    connect(sigName: "text-caret-moved", callback: ((obj: TextCellAccessible, arg1: number) => void))
    connect(sigName: "text-changed", callback: ((obj: TextCellAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "text-insert", callback: ((obj: TextCellAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-remove", callback: ((obj: TextCellAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-selection-changed", callback: ((obj: TextCellAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextCellAccessible_ConstructProps): TextCellAccessible
    constructor (config?: TextCellAccessible_ConstructProps)
}
export interface TextChildAnchor_ConstructProps extends GObject.Object_ConstructProps {
}
export class TextChildAnchor extends GObject.Object {
    /* Fields of Gtk.TextChildAnchor */
    parent_instance:GObject.Object
    /* Methods of Gtk.TextChildAnchor */
    get_deleted(): boolean
    get_widgets(): Widget[]
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextChildAnchor_ConstructProps): TextChildAnchor
    constructor (config?: TextChildAnchor_ConstructProps)
}
export interface TextMark_ConstructProps extends GObject.Object_ConstructProps {
    left_gravity?:boolean
    name?:string
}
export class TextMark extends GObject.Object {
    /* Properties of Gtk.TextMark */
    /* Fields of Gtk.TextMark */
    parent_instance:GObject.Object
    /* Methods of Gtk.TextMark */
    get_buffer(): TextBuffer
    get_deleted(): boolean
    get_left_gravity(): boolean
    get_name(): string | null
    get_visible(): boolean
    set_visible(setting: boolean): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextMark_ConstructProps): TextMark
    constructor (config?: TextMark_ConstructProps)
}
export interface TextTag_ConstructProps extends GObject.Object_ConstructProps {
    accumulative_margin?:boolean
    background?:string
    background_full_height?:boolean
    background_full_height_set?:boolean
    background_gdk?:Gdk.Color
    background_rgba?:Gdk.RGBA
    background_set?:boolean
    direction?:TextDirection
    editable?:boolean
    editable_set?:boolean
    fallback?:boolean
    fallback_set?:boolean
    family?:string
    family_set?:boolean
    font?:string
    font_desc?:Pango.FontDescription
    font_features?:string
    font_features_set?:boolean
    foreground?:string
    foreground_gdk?:Gdk.Color
    foreground_rgba?:Gdk.RGBA
    foreground_set?:boolean
    indent?:number
    indent_set?:boolean
    invisible?:boolean
    invisible_set?:boolean
    justification?:Justification
    justification_set?:boolean
    language?:string
    language_set?:boolean
    left_margin?:number
    left_margin_set?:boolean
    letter_spacing?:number
    letter_spacing_set?:boolean
    name?:string
    paragraph_background?:string
    paragraph_background_gdk?:Gdk.Color
    paragraph_background_rgba?:Gdk.RGBA
    paragraph_background_set?:boolean
    pixels_above_lines?:number
    pixels_above_lines_set?:boolean
    pixels_below_lines?:number
    pixels_below_lines_set?:boolean
    pixels_inside_wrap?:number
    pixels_inside_wrap_set?:boolean
    right_margin?:number
    right_margin_set?:boolean
    rise?:number
    rise_set?:boolean
    scale?:number
    scale_set?:boolean
    size?:number
    size_points?:number
    size_set?:boolean
    stretch?:Pango.Stretch
    stretch_set?:boolean
    strikethrough?:boolean
    strikethrough_rgba?:Gdk.RGBA
    strikethrough_rgba_set?:boolean
    strikethrough_set?:boolean
    style?:Pango.Style
    style_set?:boolean
    tabs?:Pango.TabArray
    tabs_set?:boolean
    underline?:Pango.Underline
    underline_rgba?:Gdk.RGBA
    underline_rgba_set?:boolean
    underline_set?:boolean
    variant?:Pango.Variant
    variant_set?:boolean
    weight?:number
    weight_set?:boolean
    wrap_mode?:WrapMode
    wrap_mode_set?:boolean
}
export class TextTag extends GObject.Object {
    /* Properties of Gtk.TextTag */
    accumulative_margin:boolean
    background:string
    background_full_height:boolean
    background_full_height_set:boolean
    background_gdk:Gdk.Color
    background_rgba:Gdk.RGBA
    background_set:boolean
    direction:TextDirection
    editable:boolean
    editable_set:boolean
    fallback:boolean
    fallback_set:boolean
    family:string
    family_set:boolean
    font:string
    font_desc:Pango.FontDescription
    font_features:string
    font_features_set:boolean
    foreground:string
    foreground_gdk:Gdk.Color
    foreground_rgba:Gdk.RGBA
    foreground_set:boolean
    indent:number
    indent_set:boolean
    invisible:boolean
    invisible_set:boolean
    justification:Justification
    justification_set:boolean
    language:string
    language_set:boolean
    left_margin:number
    left_margin_set:boolean
    letter_spacing:number
    letter_spacing_set:boolean
    paragraph_background:string
    paragraph_background_gdk:Gdk.Color
    paragraph_background_rgba:Gdk.RGBA
    paragraph_background_set:boolean
    pixels_above_lines:number
    pixels_above_lines_set:boolean
    pixels_below_lines:number
    pixels_below_lines_set:boolean
    pixels_inside_wrap:number
    pixels_inside_wrap_set:boolean
    right_margin:number
    right_margin_set:boolean
    rise:number
    rise_set:boolean
    scale:number
    scale_set:boolean
    size:number
    size_points:number
    size_set:boolean
    stretch:Pango.Stretch
    stretch_set:boolean
    strikethrough:boolean
    strikethrough_rgba:Gdk.RGBA
    strikethrough_rgba_set:boolean
    strikethrough_set:boolean
    style:Pango.Style
    style_set:boolean
    tabs:Pango.TabArray
    tabs_set:boolean
    underline:Pango.Underline
    underline_rgba:Gdk.RGBA
    underline_rgba_set:boolean
    underline_set:boolean
    variant:Pango.Variant
    variant_set:boolean
    weight:number
    weight_set:boolean
    wrap_mode:WrapMode
    wrap_mode_set:boolean
    /* Fields of Gtk.TextTag */
    parent_instance:GObject.Object
    priv:TextTagPrivate
    /* Methods of Gtk.TextTag */
    changed(size_changed: boolean): void
    event(event_object: GObject.Object, event: Gdk.Event, iter: TextIter): boolean
    get_priority(): number
    set_priority(priority: number): void
    /* Virtual methods of Gtk.TextTag */
    vfunc_event?(event_object: GObject.Object, event: Gdk.Event, iter: TextIter): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextTag */
    connect(sigName: "event", callback: ((obj: TextTag, object: GObject.Object, event: Gdk.Event, iter: TextIter) => boolean))
    connect(sigName: "notify::accumulative-margin", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-full-height", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-full-height-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-gdk", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-rgba", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::direction", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fallback", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fallback-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::family", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::family-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-desc", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-features", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::font-features-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-gdk", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-rgba", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::foreground-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::indent", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::indent-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::invisible", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::invisible-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::justification", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::justification-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::left-margin", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::left-margin-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::letter-spacing", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::letter-spacing-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paragraph-background", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paragraph-background-gdk", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paragraph-background-rgba", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paragraph-background-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-above-lines", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-above-lines-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-below-lines", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-below-lines-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-inside-wrap", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-inside-wrap-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-margin", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-margin-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rise", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rise-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size-points", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stretch", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stretch-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough-rgba", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough-rgba-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::strikethrough-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tabs", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tabs-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline-rgba", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline-rgba-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::underline-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::variant", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::variant-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::weight", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::weight-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode-set", callback: ((obj: TextTag, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextTag_ConstructProps): TextTag
    constructor (config?: TextTag_ConstructProps)
}
export interface TextTagTable_ConstructProps extends GObject.Object_ConstructProps {
}
export class TextTagTable extends GObject.Object {
    /* Fields of Gtk.TextTagTable */
    parent_instance:GObject.Object
    priv:TextTagTablePrivate
    /* Methods of Gtk.TextTagTable */
    add(tag: TextTag): boolean
    foreach(func: TextTagTableForeach): void
    get_size(): number
    lookup(name: string): TextTag | null
    remove(tag: TextTag): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.TextTagTable */
    vfunc_tag_added?(tag: TextTag): void
    vfunc_tag_changed?(tag: TextTag, size_changed: boolean): void
    vfunc_tag_removed?(tag: TextTag): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextTagTable */
    connect(sigName: "tag-added", callback: ((obj: TextTagTable, tag: TextTag) => void))
    connect(sigName: "tag-changed", callback: ((obj: TextTagTable, tag: TextTag, size_changed: boolean) => void))
    connect(sigName: "tag-removed", callback: ((obj: TextTagTable, tag: TextTag) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextTagTable_ConstructProps): TextTagTable
    constructor (config?: TextTagTable_ConstructProps)
}
export interface TextView_ConstructProps extends Container_ConstructProps {
    accepts_tab?:boolean
    bottom_margin?:number
    buffer?:TextBuffer
    cursor_visible?:boolean
    editable?:boolean
    im_module?:string
    indent?:number
    input_hints?:InputHints
    input_purpose?:InputPurpose
    justification?:Justification
    left_margin?:number
    monospace?:boolean
    overwrite?:boolean
    pixels_above_lines?:number
    pixels_below_lines?:number
    pixels_inside_wrap?:number
    populate_all?:boolean
    right_margin?:number
    tabs?:Pango.TabArray
    top_margin?:number
    wrap_mode?:WrapMode
}
export class TextView extends Container {
    /* Properties of Gtk.TextView */
    accepts_tab:boolean
    bottom_margin:number
    buffer:TextBuffer
    cursor_visible:boolean
    editable:boolean
    im_module:string
    indent:number
    input_hints:InputHints
    input_purpose:InputPurpose
    justification:Justification
    left_margin:number
    monospace:boolean
    overwrite:boolean
    pixels_above_lines:number
    pixels_below_lines:number
    pixels_inside_wrap:number
    populate_all:boolean
    right_margin:number
    tabs:Pango.TabArray
    top_margin:number
    wrap_mode:WrapMode
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.TextView */
    parent_instance:Container
    /* Methods of Gtk.TextView */
    add_child_at_anchor(child: Widget, anchor: TextChildAnchor): void
    add_child_in_window(child: Widget, which_window: TextWindowType, xpos: number, ypos: number): void
    backward_display_line(iter: TextIter): boolean
    backward_display_line_start(iter: TextIter): boolean
    buffer_to_window_coords(win: TextWindowType, buffer_x: number, buffer_y: number): [ /* window_x */ number | null, /* window_y */ number | null ]
    forward_display_line(iter: TextIter): boolean
    forward_display_line_end(iter: TextIter): boolean
    get_accepts_tab(): boolean
    get_border_window_size(type: TextWindowType): number
    get_bottom_margin(): number
    get_buffer(): TextBuffer
    get_cursor_locations(iter?: TextIter | null): [ /* strong */ Gdk.Rectangle | null, /* weak */ Gdk.Rectangle | null ]
    get_cursor_visible(): boolean
    get_default_attributes(): TextAttributes
    get_editable(): boolean
    get_hadjustment(): Adjustment
    get_indent(): number
    get_input_hints(): InputHints
    get_input_purpose(): InputPurpose
    get_iter_at_location(x: number, y: number): [ /* returnType */ boolean, /* iter */ TextIter ]
    get_iter_at_position(x: number, y: number): [ /* returnType */ boolean, /* iter */ TextIter, /* trailing */ number | null ]
    get_iter_location(iter: TextIter): /* location */ Gdk.Rectangle
    get_justification(): Justification
    get_left_margin(): number
    get_line_at_y(y: number): [ /* target_iter */ TextIter, /* line_top */ number ]
    get_line_yrange(iter: TextIter): [ /* y */ number, /* height */ number ]
    get_monospace(): boolean
    get_overwrite(): boolean
    get_pixels_above_lines(): number
    get_pixels_below_lines(): number
    get_pixels_inside_wrap(): number
    get_right_margin(): number
    get_tabs(): Pango.TabArray | null
    get_top_margin(): number
    get_vadjustment(): Adjustment
    get_visible_rect(): /* visible_rect */ Gdk.Rectangle
    get_window_type(window: Gdk.Window): TextWindowType
    get_wrap_mode(): WrapMode
    im_context_filter_keypress(event: Gdk.EventKey): boolean
    move_child(child: Widget, xpos: number, ypos: number): void
    move_mark_onscreen(mark: TextMark): boolean
    move_visually(iter: TextIter, count: number): boolean
    place_cursor_onscreen(): boolean
    reset_cursor_blink(): void
    reset_im_context(): void
    scroll_mark_onscreen(mark: TextMark): void
    scroll_to_iter(iter: TextIter, within_margin: number, use_align: boolean, xalign: number, yalign: number): boolean
    scroll_to_mark(mark: TextMark, within_margin: number, use_align: boolean, xalign: number, yalign: number): void
    set_accepts_tab(accepts_tab: boolean): void
    set_border_window_size(type: TextWindowType, size: number): void
    set_bottom_margin(bottom_margin: number): void
    set_buffer(buffer?: TextBuffer | null): void
    set_cursor_visible(setting: boolean): void
    set_editable(setting: boolean): void
    set_indent(indent: number): void
    set_input_hints(hints: InputHints): void
    set_input_purpose(purpose: InputPurpose): void
    set_justification(justification: Justification): void
    set_left_margin(left_margin: number): void
    set_monospace(monospace: boolean): void
    set_overwrite(overwrite: boolean): void
    set_pixels_above_lines(pixels_above_lines: number): void
    set_pixels_below_lines(pixels_below_lines: number): void
    set_pixels_inside_wrap(pixels_inside_wrap: number): void
    set_right_margin(right_margin: number): void
    set_tabs(tabs: Pango.TabArray): void
    set_top_margin(top_margin: number): void
    set_wrap_mode(wrap_mode: WrapMode): void
    starts_display_line(iter: TextIter): boolean
    window_to_buffer_coords(win: TextWindowType, window_x: number, window_y: number): [ /* buffer_x */ number | null, /* buffer_y */ number | null ]
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hscroll_policy(): ScrollablePolicy
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.TextView */
    vfunc_backspace?(): void
    vfunc_copy_clipboard?(): void
    vfunc_cut_clipboard?(): void
    vfunc_delete_from_cursor?(type: DeleteType, count: number): void
    vfunc_draw_layer?(layer: TextViewLayer, cr: cairo.Context): void
    vfunc_extend_selection?(granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter): boolean
    vfunc_insert_at_cursor?(str: string): void
    vfunc_move_cursor?(step: MovementStep, count: number, extend_selection: boolean): void
    vfunc_paste_clipboard?(): void
    vfunc_populate_popup?(popup: Widget): void
    vfunc_set_anchor?(): void
    vfunc_toggle_overwrite?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TextView */
    connect(sigName: "backspace", callback: ((obj: TextView) => void))
    connect(sigName: "copy-clipboard", callback: ((obj: TextView) => void))
    connect(sigName: "cut-clipboard", callback: ((obj: TextView) => void))
    connect(sigName: "delete-from-cursor", callback: ((obj: TextView, type: DeleteType, count: number) => void))
    connect(sigName: "extend-selection", callback: ((obj: TextView, granularity: TextExtendSelection, location: TextIter, start: TextIter, end: TextIter) => boolean))
    connect(sigName: "insert-at-cursor", callback: ((obj: TextView, string: string) => void))
    connect(sigName: "move-cursor", callback: ((obj: TextView, step: MovementStep, count: number, extend_selection: boolean) => void))
    connect(sigName: "move-viewport", callback: ((obj: TextView, step: ScrollStep, count: number) => void))
    connect(sigName: "paste-clipboard", callback: ((obj: TextView) => void))
    connect(sigName: "populate-popup", callback: ((obj: TextView, popup: Widget) => void))
    connect(sigName: "preedit-changed", callback: ((obj: TextView, preedit: string) => void))
    connect(sigName: "select-all", callback: ((obj: TextView, select: boolean) => void))
    connect(sigName: "set-anchor", callback: ((obj: TextView) => void))
    connect(sigName: "toggle-cursor-visible", callback: ((obj: TextView) => void))
    connect(sigName: "toggle-overwrite", callback: ((obj: TextView) => void))
    connect(sigName: "notify::accepts-tab", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bottom-margin", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffer", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursor-visible", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::im-module", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::indent", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-hints", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-purpose", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::justification", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::left-margin", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::monospace", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::overwrite", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-above-lines", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-below-lines", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixels-inside-wrap", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::populate-all", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::right-margin", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tabs", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::top-margin", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap-mode", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: TextView, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextView_ConstructProps): TextView
    constructor (config?: TextView_ConstructProps)
    static new_with_buffer(buffer: TextBuffer): TextView
}
export interface TextViewAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class TextViewAccessible extends ContainerAccessible {
    /* Fields of Gtk.TextViewAccessible */
    parent: any
    priv:TextViewAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.EditableText */
    copy_text(start_pos: number, end_pos: number): void
    cut_text(start_pos: number, end_pos: number): void
    delete_text(start_pos: number, end_pos: number): void
    insert_text(string: string, length: number, position: number): void
    paste_text(position: number): void
    set_run_attributes(attrib_set: Atk.AttributeSet, start_offset: number, end_offset: number): boolean
    set_text_contents(string: string): void
    /* Methods of Atk.StreamableContent */
    get_mime_type(i: number): string
    get_n_mime_types(): number
    get_stream(mime_type: string): GLib.IOChannel
    get_uri(mime_type: string): string | null
    /* Methods of Atk.Text */
    add_selection(start_offset: number, end_offset: number): boolean
    get_bounded_ranges(rect: Atk.TextRectangle, coord_type: Atk.CoordType, x_clip_type: Atk.TextClipType, y_clip_type: Atk.TextClipType): Atk.TextRange[]
    get_caret_offset(): number
    get_character_at_offset(offset: number): number
    get_character_count(): number
    get_character_extents(offset: number, coords: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_default_attributes(): Atk.AttributeSet
    get_n_selections(): number
    get_offset_at_point(x: number, y: number, coords: Atk.CoordType): number
    get_range_extents(start_offset: number, end_offset: number, coord_type: Atk.CoordType): /* rect */ Atk.TextRectangle
    get_run_attributes(offset: number): [ /* returnType */ Atk.AttributeSet, /* start_offset */ number, /* end_offset */ number ]
    get_selection(selection_num: number): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_string_at_offset(offset: number, granularity: Atk.TextGranularity): [ /* returnType */ string | null, /* start_offset */ number, /* end_offset */ number ]
    get_text(start_offset: number, end_offset: number): string
    get_text_after_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_at_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    get_text_before_offset(offset: number, boundary_type: Atk.TextBoundary): [ /* returnType */ string, /* start_offset */ number, /* end_offset */ number ]
    remove_selection(selection_num: number): boolean
    set_caret_offset(offset: number): boolean
    set_selection(selection_num: number, start_offset: number, end_offset: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: TextViewAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Text */
    connect(sigName: "text-attributes-changed", callback: ((obj: TextViewAccessible) => void))
    connect(sigName: "text-caret-moved", callback: ((obj: TextViewAccessible, arg1: number) => void))
    connect(sigName: "text-changed", callback: ((obj: TextViewAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "text-insert", callback: ((obj: TextViewAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-remove", callback: ((obj: TextViewAccessible, arg1: number, arg2: number, arg3: string) => void))
    connect(sigName: "text-selection-changed", callback: ((obj: TextViewAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TextViewAccessible_ConstructProps): TextViewAccessible
    constructor (config?: TextViewAccessible_ConstructProps)
}
export interface ThemingEngine_ConstructProps extends GObject.Object_ConstructProps {
    name?:string
}
export class ThemingEngine {
    /* Properties of Gtk.ThemingEngine */
    /* Fields of Gtk.ThemingEngine */
    parent_object:GObject.Object
    priv:ThemingEnginePrivate
    /* Fields of GObject.Object */
    g_type_instance:GObject.TypeInstance
    /* Methods of Gtk.ThemingEngine */
    get_background_color(state: StateFlags): /* color */ Gdk.RGBA
    get_border(state: StateFlags): /* border */ Border
    get_border_color(state: StateFlags): /* color */ Gdk.RGBA
    get_color(state: StateFlags): /* color */ Gdk.RGBA
    get_direction(): TextDirection
    get_font(state: StateFlags): Pango.FontDescription
    get_junction_sides(): JunctionSides
    get_margin(state: StateFlags): /* margin */ Border
    get_padding(state: StateFlags): /* padding */ Border
    get_path(): WidgetPath
    get_property(property: string, state: StateFlags): /* value */ any
    get_screen(): Gdk.Screen | null
    get_state(): StateFlags
    get_style_property(property_name: string): /* value */ any
    has_class(style_class: string): boolean
    has_region(style_region: string): [ /* returnType */ boolean, /* flags */ RegionFlags | null ]
    lookup_color(color_name: string): [ /* returnType */ boolean, /* color */ Gdk.RGBA ]
    state_is_running(state: StateType): [ /* returnType */ boolean, /* progress */ number ]
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object | null
    get_qdata(quark: GLib.Quark): object | null
    getv(names: string[], values: GObject.Value[]): void
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval?: object | null, newval?: object | null, destroy?: GLib.DestroyNotify | null, old_destroy?: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data?: object | null): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object | null
    steal_qdata(quark: GLib.Quark): object | null
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of Gtk.ThemingEngine */
    vfunc_render_activity?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_arrow?(cr: cairo.Context, angle: number, x: number, y: number, size: number): void
    vfunc_render_background?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_check?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_expander?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_extension?(cr: cairo.Context, x: number, y: number, width: number, height: number, gap_side: PositionType): void
    vfunc_render_focus?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_frame?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_frame_gap?(cr: cairo.Context, x: number, y: number, width: number, height: number, gap_side: PositionType, xy0_gap: number, xy1_gap: number): void
    vfunc_render_handle?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_icon?(cr: cairo.Context, pixbuf: GdkPixbuf.Pixbuf, x: number, y: number): void
    vfunc_render_icon_surface?(cr: cairo.Context, surface: cairo.Surface, x: number, y: number): void
    vfunc_render_layout?(cr: cairo.Context, x: number, y: number, layout: Pango.Layout): void
    vfunc_render_line?(cr: cairo.Context, x0: number, y0: number, x1: number, y1: number): void
    vfunc_render_option?(cr: cairo.Context, x: number, y: number, width: number, height: number): void
    vfunc_render_slider?(cr: cairo.Context, x: number, y: number, width: number, height: number, orientation: Orientation): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((obj: ThemingEngine, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ThemingEngine_ConstructProps): ThemingEngine
    constructor (config?: ThemingEngine_ConstructProps)
    static load(name: string): ThemingEngine | null
}
export interface ToggleAction_ConstructProps extends Action_ConstructProps {
    active?:boolean
    draw_as_radio?:boolean
}
export class ToggleAction extends Action {
    /* Properties of Gtk.ToggleAction */
    active:boolean
    draw_as_radio:boolean
    /* Fields of Gtk.ToggleAction */
    parent: any
    /* Methods of Gtk.ToggleAction */
    get_active(): boolean
    get_draw_as_radio(): boolean
    set_active(is_active: boolean): void
    set_draw_as_radio(draw_as_radio: boolean): void
    toggled(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToggleAction */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Action */
    vfunc_activate?(): void
    vfunc_connect_proxy?(proxy: Widget): void
    vfunc_create_menu?(): Widget
    vfunc_create_menu_item?(): Widget
    vfunc_create_tool_item?(): Widget
    vfunc_disconnect_proxy?(proxy: Widget): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleAction */
    connect(sigName: "toggled", callback: ((obj: ToggleAction) => void))
    connect(sigName: "notify::active", callback: ((obj: ToggleAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-as-radio", callback: ((obj: ToggleAction, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToggleAction_ConstructProps): ToggleAction
    constructor (config?: ToggleAction_ConstructProps)
}
export interface ToggleButton_ConstructProps extends Button_ConstructProps {
    active?:boolean
    draw_indicator?:boolean
    inconsistent?:boolean
}
export class ToggleButton extends Button {
    /* Properties of Gtk.ToggleButton */
    active:boolean
    draw_indicator:boolean
    inconsistent:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.ToggleButton */
    /* Methods of Gtk.ToggleButton */
    get_active(): boolean
    get_inconsistent(): boolean
    get_mode(): boolean
    set_active(is_active: boolean): void
    set_inconsistent(setting: boolean): void
    set_mode(draw_indicator: boolean): void
    toggled(): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToggleButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleButton */
    connect(sigName: "toggled", callback: ((obj: ToggleButton) => void))
    connect(sigName: "notify::active", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draw-indicator", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inconsistent", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ToggleButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToggleButton_ConstructProps): ToggleButton
    constructor (config?: ToggleButton_ConstructProps)
    static new_with_label(label: string): ToggleButton
    static new_with_mnemonic(label: string): ToggleButton
}
export interface ToggleButtonAccessible_ConstructProps extends ButtonAccessible_ConstructProps {
}
export class ToggleButtonAccessible extends ButtonAccessible {
    /* Fields of Gtk.ToggleButtonAccessible */
    parent: any
    priv:ToggleButtonAccessiblePrivate
    /* Methods of Atk.Action */
    do_action(i: number): boolean
    get_description(i: number): string | null
    get_keybinding(i: number): string | null
    get_localized_name(i: number): string | null
    get_n_actions(): number
    get_name(i: number): string | null
    set_description(i: number, desc: string): boolean
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Image */
    get_image_description(): string
    get_image_locale(): string | null
    get_image_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_image_size(): [ /* width */ number | null, /* height */ number | null ]
    set_image_description(description: string): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: ToggleButtonAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToggleButtonAccessible_ConstructProps): ToggleButtonAccessible
    constructor (config?: ToggleButtonAccessible_ConstructProps)
}
export interface ToggleToolButton_ConstructProps extends ToolButton_ConstructProps {
    active?:boolean
}
export class ToggleToolButton extends ToolButton {
    /* Properties of Gtk.ToggleToolButton */
    active:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.ToggleToolButton */
    parent: any
    /* Methods of Gtk.ToggleToolButton */
    get_active(): boolean
    set_active(is_active: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToggleToolButton */
    vfunc_toggled?(): void
    /* Virtual methods of Gtk.ToolButton */
    vfunc_clicked?(): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToggleToolButton */
    connect(sigName: "toggled", callback: ((obj: ToggleToolButton) => void))
    connect(sigName: "notify::active", callback: ((obj: ToggleToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ToggleToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ToggleToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ToggleToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ToggleToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToggleToolButton_ConstructProps): ToggleToolButton
    constructor (config?: ToggleToolButton_ConstructProps)
    static new_from_stock(stock_id: string): ToggleToolButton
}
export interface ToolButton_ConstructProps extends ToolItem_ConstructProps {
    icon_name?:string
    icon_widget?:Widget
    label?:string
    label_widget?:Widget
    stock_id?:string
    use_underline?:boolean
}
export class ToolButton extends ToolItem {
    /* Properties of Gtk.ToolButton */
    icon_name:string
    icon_widget:Widget
    label:string
    label_widget:Widget
    stock_id:string
    use_underline:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.ToolButton */
    parent: any
    /* Methods of Gtk.ToolButton */
    get_icon_name(): string | null
    get_icon_widget(): Widget | null
    get_label(): string | null
    get_label_widget(): Widget | null
    get_stock_id(): string
    get_use_underline(): boolean
    set_icon_name(icon_name?: string | null): void
    set_icon_widget(icon_widget?: Widget | null): void
    set_label(label?: string | null): void
    set_label_widget(label_widget?: Widget | null): void
    set_stock_id(stock_id?: string | null): void
    set_use_underline(use_underline: boolean): void
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToolButton */
    vfunc_clicked?(): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToolButton */
    connect(sigName: "clicked", callback: ((obj: ToolButton) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-widget", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-widget", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::stock-id", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-underline", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ToolButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToolButton_ConstructProps): ToolButton
    constructor (config?: ToolButton_ConstructProps)
    static new_from_stock(stock_id: string): ToolButton
}
export interface ToolItem_ConstructProps extends Bin_ConstructProps {
    is_important?:boolean
    visible_horizontal?:boolean
    visible_vertical?:boolean
}
export class ToolItem extends Bin {
    /* Properties of Gtk.ToolItem */
    is_important:boolean
    visible_horizontal:boolean
    visible_vertical:boolean
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Fields of Gtk.ToolItem */
    parent: any
    /* Methods of Gtk.ToolItem */
    get_ellipsize_mode(): Pango.EllipsizeMode
    get_expand(): boolean
    get_homogeneous(): boolean
    get_icon_size(): number
    get_is_important(): boolean
    get_orientation(): Orientation
    get_proxy_menu_item(menu_item_id: string): Widget | null
    get_relief_style(): ReliefStyle
    get_text_alignment(): number
    get_text_orientation(): Orientation
    get_text_size_group(): SizeGroup
    get_toolbar_style(): ToolbarStyle
    get_use_drag_window(): boolean
    get_visible_horizontal(): boolean
    get_visible_vertical(): boolean
    rebuild_menu(): void
    retrieve_proxy_menu_item(): Widget
    set_expand(expand: boolean): void
    set_homogeneous(homogeneous: boolean): void
    set_is_important(is_important: boolean): void
    set_proxy_menu_item(menu_item_id: string, menu_item?: Widget | null): void
    set_tooltip_markup(markup: string): void
    set_tooltip_text(text: string): void
    set_use_drag_window(use_drag_window: boolean): void
    set_visible_horizontal(visible_horizontal: boolean): void
    set_visible_vertical(visible_vertical: boolean): void
    toolbar_reconfigured(): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.ToolItem */
    vfunc_create_menu_proxy?(): boolean
    vfunc_toolbar_reconfigured?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.ToolItem */
    connect(sigName: "create-menu-proxy", callback: ((obj: ToolItem) => boolean))
    connect(sigName: "toolbar-reconfigured", callback: ((obj: ToolItem) => void))
    connect(sigName: "notify::is-important", callback: ((obj: ToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-horizontal", callback: ((obj: ToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible-vertical", callback: ((obj: ToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: ToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: ToolItem, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToolItem_ConstructProps): ToolItem
    constructor (config?: ToolItem_ConstructProps)
}
export interface ToolItemGroup_ConstructProps extends Container_ConstructProps {
    collapsed?:boolean
    ellipsize?:Pango.EllipsizeMode
    header_relief?:ReliefStyle
    label?:string
    label_widget?:Widget
}
export class ToolItemGroup extends GObject.InitiallyUnowned {
    /* Properties of Gtk.ToolItemGroup */
    collapsed:boolean
    ellipsize:Pango.EllipsizeMode
    header_relief:ReliefStyle
    label:string
    label_widget:Widget
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.ToolItemGroup */
    parent_instance:Container
    priv:ToolItemGroupPrivate
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    /* Methods of Gtk.ToolItemGroup */
    get_collapsed(): boolean
    get_drop_item(x: number, y: number): ToolItem
    get_ellipsize(): Pango.EllipsizeMode
    get_header_relief(): ReliefStyle
    get_item_position(item: ToolItem): number
    get_label(): string
    get_label_widget(): Widget
    get_n_items(): number
    get_nth_item(index: number): ToolItem
    insert(item: ToolItem, position: number): void
    set_collapsed(collapsed: boolean): void
    set_ellipsize(ellipsize: Pango.EllipsizeMode): void
    set_header_relief(style: ReliefStyle): void
    set_item_position(item: ToolItem, position: number): void
    set_label(label: string): void
    set_label_widget(label_widget: Widget): void
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Methods of Gtk.ToolShell */
    get_ellipsize_mode(): Pango.EllipsizeMode
    get_icon_size(): number
    get_orientation(): Orientation
    get_relief_style(): ReliefStyle
    get_text_alignment(): number
    get_text_orientation(): Orientation
    get_text_size_group(): SizeGroup
    rebuild_menu(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: ToolItemGroup, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "remove", callback: ((obj: ToolItemGroup, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: ToolItemGroup, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "button-press-event", callback: ((obj: ToolItemGroup, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: ToolItemGroup, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: ToolItemGroup, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: ToolItemGroup, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "configure-event", callback: ((obj: ToolItemGroup, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: ToolItemGroup, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: ToolItemGroup, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "destroy-event", callback: ((obj: ToolItemGroup, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: ToolItemGroup, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: ToolItemGroup, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: ToolItemGroup, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: ToolItemGroup, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: ToolItemGroup, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: ToolItemGroup, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: ToolItemGroup, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: ToolItemGroup, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: ToolItemGroup, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: ToolItemGroup, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: ToolItemGroup, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: ToolItemGroup, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "grab-notify", callback: ((obj: ToolItemGroup, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: ToolItemGroup, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: ToolItemGroup, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: ToolItemGroup, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: ToolItemGroup, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "map-event", callback: ((obj: ToolItemGroup, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: ToolItemGroup, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: ToolItemGroup, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: ToolItemGroup, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: ToolItemGroup) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: ToolItemGroup, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: ToolItemGroup, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: ToolItemGroup, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "screen-changed", callback: ((obj: ToolItemGroup, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: ToolItemGroup, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: ToolItemGroup, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: ToolItemGroup, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: ToolItemGroup, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: ToolItemGroup, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "show-help", callback: ((obj: ToolItemGroup, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: ToolItemGroup, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: ToolItemGroup, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: ToolItemGroup, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: ToolItemGroup, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "touch-event", callback: ((obj: ToolItemGroup, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "unmap-event", callback: ((obj: ToolItemGroup, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: ToolItemGroup) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: ToolItemGroup, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: ToolItemGroup, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::collapsed", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ellipsize", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::header-relief", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label-widget", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: ToolItemGroup, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToolItemGroup_ConstructProps): ToolItemGroup
    constructor (config?: ToolItemGroup_ConstructProps)
}
export interface ToolPalette_ConstructProps extends Container_ConstructProps {
    icon_size?:IconSize
    icon_size_set?:boolean
    toolbar_style?:ToolbarStyle
}
export class ToolPalette extends GObject.InitiallyUnowned {
    /* Properties of Gtk.ToolPalette */
    icon_size:IconSize
    icon_size_set:boolean
    toolbar_style:ToolbarStyle
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.ToolPalette */
    parent_instance:Container
    priv:ToolPalettePrivate
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    /* Methods of Gtk.ToolPalette */
    add_drag_dest(widget: Widget, flags: DestDefaults, targets: ToolPaletteDragTargets, actions: Gdk.DragAction): void
    get_drag_item(selection: SelectionData): Widget
    get_drop_group(x: number, y: number): ToolItemGroup | null
    get_drop_item(x: number, y: number): ToolItem | null
    get_exclusive(group: ToolItemGroup): boolean
    get_expand(group: ToolItemGroup): boolean
    get_group_position(group: ToolItemGroup): number
    get_hadjustment(): Adjustment
    get_icon_size(): number
    get_style(): ToolbarStyle
    get_vadjustment(): Adjustment
    set_drag_source(targets: ToolPaletteDragTargets): void
    set_exclusive(group: ToolItemGroup, exclusive: boolean): void
    set_expand(group: ToolItemGroup, expand: boolean): void
    set_group_position(group: ToolItemGroup, position: number): void
    set_icon_size(icon_size: number): void
    set_style(style: ToolbarStyle): void
    unset_icon_size(): void
    unset_style(): void
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hscroll_policy(): ScrollablePolicy
    get_vscroll_policy(): ScrollablePolicy
    set_hadjustment(hadjustment?: Adjustment | null): void
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vadjustment(vadjustment?: Adjustment | null): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: ToolPalette, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: ToolPalette) => void))
    connect(sigName: "remove", callback: ((obj: ToolPalette, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: ToolPalette, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: ToolPalette) => void))
    connect(sigName: "button-press-event", callback: ((obj: ToolPalette, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: ToolPalette, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: ToolPalette, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: ToolPalette, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: ToolPalette) => void))
    connect(sigName: "configure-event", callback: ((obj: ToolPalette, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: ToolPalette, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: ToolPalette, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: ToolPalette) => void))
    connect(sigName: "destroy-event", callback: ((obj: ToolPalette, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: ToolPalette, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: ToolPalette, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: ToolPalette, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: ToolPalette, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: ToolPalette, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: ToolPalette, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: ToolPalette, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: ToolPalette, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: ToolPalette, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: ToolPalette, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: ToolPalette, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: ToolPalette, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: ToolPalette, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: ToolPalette, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: ToolPalette, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: ToolPalette, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: ToolPalette, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: ToolPalette) => void))
    connect(sigName: "grab-notify", callback: ((obj: ToolPalette, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: ToolPalette) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: ToolPalette, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: ToolPalette, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: ToolPalette, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: ToolPalette, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: ToolPalette) => void))
    connect(sigName: "map-event", callback: ((obj: ToolPalette, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: ToolPalette, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: ToolPalette, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: ToolPalette, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: ToolPalette) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: ToolPalette, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: ToolPalette, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: ToolPalette, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: ToolPalette) => void))
    connect(sigName: "screen-changed", callback: ((obj: ToolPalette, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: ToolPalette, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: ToolPalette, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: ToolPalette, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: ToolPalette, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: ToolPalette, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: ToolPalette) => void))
    connect(sigName: "show-help", callback: ((obj: ToolPalette, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: ToolPalette, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: ToolPalette, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: ToolPalette, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: ToolPalette, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: ToolPalette) => void))
    connect(sigName: "touch-event", callback: ((obj: ToolPalette, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: ToolPalette) => void))
    connect(sigName: "unmap-event", callback: ((obj: ToolPalette, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: ToolPalette) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: ToolPalette, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: ToolPalette, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::icon-size", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-size-set", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::toolbar-style", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: ToolPalette, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToolPalette_ConstructProps): ToolPalette
    constructor (config?: ToolPalette_ConstructProps)
    static get_drag_target_group(): TargetEntry
    static get_drag_target_item(): TargetEntry
}
export interface Toolbar_ConstructProps extends Container_ConstructProps {
    icon_size?:IconSize
    icon_size_set?:boolean
    show_arrow?:boolean
    toolbar_style?:ToolbarStyle
}
export class Toolbar extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Toolbar */
    icon_size:IconSize
    icon_size_set:boolean
    show_arrow:boolean
    toolbar_style:ToolbarStyle
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.Toolbar */
    container:Container
    priv:ToolbarPrivate
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Toolbar */
    get_drop_index(x: number, y: number): number
    get_icon_size(): IconSize
    get_item_index(item: ToolItem): number
    get_n_items(): number
    get_nth_item(n: number): ToolItem | null
    get_relief_style(): ReliefStyle
    get_show_arrow(): boolean
    get_style(): ToolbarStyle
    insert(item: ToolItem, pos: number): void
    set_drop_highlight_item(tool_item: ToolItem | null, index_: number): void
    set_icon_size(icon_size: IconSize): void
    set_show_arrow(show_arrow: boolean): void
    set_style(style: ToolbarStyle): void
    unset_icon_size(): void
    unset_style(): void
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Methods of Gtk.ToolShell */
    get_ellipsize_mode(): Pango.EllipsizeMode
    get_text_alignment(): number
    get_text_orientation(): Orientation
    get_text_size_group(): SizeGroup
    rebuild_menu(): void
    /* Virtual methods of Gtk.Toolbar */
    vfunc_orientation_changed?(orientation: Orientation): void
    vfunc_popup_context_menu?(x: number, y: number, button_number: number): boolean
    vfunc_style_changed?(style: ToolbarStyle): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Toolbar */
    connect(sigName: "focus-home-or-end", callback: ((obj: Toolbar, focus_home: boolean) => boolean))
    connect(sigName: "orientation-changed", callback: ((obj: Toolbar, orientation: Orientation) => void))
    connect(sigName: "popup-context-menu", callback: ((obj: Toolbar, x: number, y: number, button: number) => boolean))
    connect(sigName: "style-changed", callback: ((obj: Toolbar, style: ToolbarStyle) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Toolbar, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Toolbar) => void))
    connect(sigName: "remove", callback: ((obj: Toolbar, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Toolbar, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Toolbar) => void))
    connect(sigName: "button-press-event", callback: ((obj: Toolbar, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Toolbar, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Toolbar, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Toolbar, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Toolbar) => void))
    connect(sigName: "configure-event", callback: ((obj: Toolbar, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Toolbar, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Toolbar, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Toolbar) => void))
    connect(sigName: "destroy-event", callback: ((obj: Toolbar, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Toolbar, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Toolbar, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Toolbar, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Toolbar, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Toolbar, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Toolbar, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Toolbar, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Toolbar, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Toolbar, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Toolbar, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Toolbar, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Toolbar, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Toolbar, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Toolbar, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Toolbar, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Toolbar, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Toolbar, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Toolbar, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Toolbar) => void))
    connect(sigName: "grab-notify", callback: ((obj: Toolbar, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Toolbar) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Toolbar, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Toolbar, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Toolbar, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Toolbar, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Toolbar, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Toolbar) => void))
    connect(sigName: "map-event", callback: ((obj: Toolbar, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Toolbar, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Toolbar, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Toolbar, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Toolbar, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Toolbar) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Toolbar, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Toolbar, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Toolbar, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Toolbar, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Toolbar) => void))
    connect(sigName: "screen-changed", callback: ((obj: Toolbar, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Toolbar, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Toolbar, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Toolbar, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Toolbar, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Toolbar, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Toolbar, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Toolbar) => void))
    connect(sigName: "show-help", callback: ((obj: Toolbar, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Toolbar, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Toolbar, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Toolbar, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Toolbar, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Toolbar) => void))
    connect(sigName: "touch-event", callback: ((obj: Toolbar, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Toolbar) => void))
    connect(sigName: "unmap-event", callback: ((obj: Toolbar, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Toolbar) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Toolbar, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Toolbar, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::icon-size", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-size-set", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-arrow", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::toolbar-style", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: Toolbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Toolbar_ConstructProps): Toolbar
    constructor (config?: Toolbar_ConstructProps)
}
export interface Tooltip_ConstructProps extends GObject.Object_ConstructProps {
}
export class Tooltip extends GObject.Object {
    /* Methods of Gtk.Tooltip */
    set_custom(custom_widget?: Widget | null): void
    set_icon(pixbuf?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_gicon(gicon: Gio.Icon | null, size: number): void
    set_icon_from_icon_name(icon_name: string | null, size: number): void
    set_icon_from_stock(stock_id: string | null, size: number): void
    set_markup(markup?: string | null): void
    set_text(text?: string | null): void
    set_tip_area(rect: Gdk.Rectangle): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Tooltip_ConstructProps): Tooltip
    constructor (config?: Tooltip_ConstructProps)
    static trigger_tooltip_query(display: Gdk.Display): void
}
export interface ToplevelAccessible_ConstructProps extends Atk.Object_ConstructProps {
}
export class ToplevelAccessible extends Atk.Object {
    /* Fields of Gtk.ToplevelAccessible */
    parent: any
    priv:ToplevelAccessiblePrivate
    /* Methods of Gtk.ToplevelAccessible */
    get_children(): Window[]
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: ToplevelAccessible_ConstructProps): ToplevelAccessible
    constructor (config?: ToplevelAccessible_ConstructProps)
}
export interface TreeModelFilter_ConstructProps extends GObject.Object_ConstructProps {
    child_model?:TreeModel
    virtual_root?:TreePath
}
export class TreeModelFilter extends GObject.Object {
    /* Properties of Gtk.TreeModelFilter */
    /* Fields of Gtk.TreeModelFilter */
    parent: any
    /* Methods of Gtk.TreeModelFilter */
    clear_cache(): void
    convert_child_iter_to_iter(child_iter: TreeIter): [ /* returnType */ boolean, /* filter_iter */ TreeIter ]
    convert_child_path_to_path(child_path: TreePath): TreePath | null
    convert_iter_to_child_iter(filter_iter: TreeIter): /* child_iter */ TreeIter
    convert_path_to_child_path(filter_path: TreePath): TreePath | null
    get_model(): TreeModel
    refilter(): void
    set_modify_func(types: number, func: TreeModelFilterModifyFunc, destroy?: GLib.DestroyNotify | null): void
    set_visible_column(column: number): void
    set_visible_func(func: TreeModelFilterVisibleFunc, destroy?: GLib.DestroyNotify | null): void
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath, selection_data: SelectionData): boolean
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): number
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    sort_new_with_model(): TreeModel
    unref_node(iter: TreeIter): void
    /* Virtual methods of Gtk.TreeModelFilter */
    vfunc_modify?(child_model: TreeModel, iter: TreeIter, value: any, column: number): void
    vfunc_visible?(child_model: TreeModel, iter: TreeIter): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: ((obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-deleted", callback: ((obj: TreeModelFilter, path: TreePath) => void))
    connect(sigName: "row-has-child-toggled", callback: ((obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-inserted", callback: ((obj: TreeModelFilter, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "rows-reordered", callback: ((obj: TreeModelFilter, path: TreePath, iter: TreeIter, new_order?: object | null) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeModelFilter_ConstructProps): TreeModelFilter
    constructor (config?: TreeModelFilter_ConstructProps)
}
export interface TreeModelSort_ConstructProps extends GObject.Object_ConstructProps {
    model?:TreeModel
}
export class TreeModelSort extends GObject.Object {
    /* Properties of Gtk.TreeModelSort */
    /* Fields of Gtk.TreeModelSort */
    parent: any
    /* Methods of Gtk.TreeModelSort */
    clear_cache(): void
    convert_child_iter_to_iter(child_iter: TreeIter): [ /* returnType */ boolean, /* sort_iter */ TreeIter ]
    convert_child_path_to_path(child_path: TreePath): TreePath | null
    convert_iter_to_child_iter(sorted_iter: TreeIter): /* child_iter */ TreeIter
    convert_path_to_child_path(sorted_path: TreePath): TreePath | null
    get_model(): TreeModel
    iter_is_valid(iter: TreeIter): boolean
    reset_default_sort_func(): void
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath, selection_data: SelectionData): boolean
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): number
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    sort_new_with_model(): TreeModel
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: ((obj: TreeModelSort, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-deleted", callback: ((obj: TreeModelSort, path: TreePath) => void))
    connect(sigName: "row-has-child-toggled", callback: ((obj: TreeModelSort, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-inserted", callback: ((obj: TreeModelSort, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "rows-reordered", callback: ((obj: TreeModelSort, path: TreePath, iter: TreeIter, new_order?: object | null) => void))
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: ((obj: TreeModelSort) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeModelSort_ConstructProps): TreeModelSort
    constructor (config?: TreeModelSort_ConstructProps)
}
export interface TreeSelection_ConstructProps extends GObject.Object_ConstructProps {
    mode?:SelectionMode
}
export class TreeSelection extends GObject.Object {
    /* Properties of Gtk.TreeSelection */
    mode:SelectionMode
    /* Fields of Gtk.TreeSelection */
    /* Methods of Gtk.TreeSelection */
    count_selected_rows(): number
    get_mode(): SelectionMode
    get_selected(): [ /* returnType */ boolean, /* model */ TreeModel | null, /* iter */ TreeIter | null ]
    get_selected_rows(): [ /* returnType */ TreePath[], /* model */ TreeModel | null ]
    get_tree_view(): TreeView
    iter_is_selected(iter: TreeIter): boolean
    path_is_selected(path: TreePath): boolean
    select_all(): void
    select_iter(iter: TreeIter): void
    select_path(path: TreePath): void
    select_range(start_path: TreePath, end_path: TreePath): void
    selected_foreach(func: TreeSelectionForeachFunc): void
    set_mode(type: SelectionMode): void
    set_select_function(func: TreeSelectionFunc, destroy: GLib.DestroyNotify): void
    unselect_all(): void
    unselect_iter(iter: TreeIter): void
    unselect_path(path: TreePath): void
    unselect_range(start_path: TreePath, end_path: TreePath): void
    /* Virtual methods of Gtk.TreeSelection */
    vfunc_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeSelection */
    connect(sigName: "changed", callback: ((obj: TreeSelection) => void))
    connect(sigName: "notify::mode", callback: ((obj: TreeSelection, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeSelection_ConstructProps): TreeSelection
    constructor (config?: TreeSelection_ConstructProps)
}
export interface TreeStore_ConstructProps extends GObject.Object_ConstructProps {
}
export class TreeStore extends GObject.Object {
    /* Fields of Gtk.TreeStore */
    parent: any
    priv:TreeStorePrivate
    /* Methods of Gtk.TreeStore */
    append(parent?: TreeIter | null): /* iter */ TreeIter
    clear(): void
    insert(parent: TreeIter | null, position: number): /* iter */ TreeIter
    insert_after(parent?: TreeIter | null, sibling?: TreeIter | null): /* iter */ TreeIter
    insert_before(parent?: TreeIter | null, sibling?: TreeIter | null): /* iter */ TreeIter
    insert_with_values(parent: TreeIter | null, position: number, columns: number[], values: any): /* iter */ TreeIter | null
    is_ancestor(iter: TreeIter, descendant: TreeIter): boolean
    iter_depth(iter: TreeIter): number
    iter_is_valid(iter: TreeIter): boolean
    move_after(iter: TreeIter, position?: TreeIter | null): void
    move_before(iter: TreeIter, position?: TreeIter | null): void
    prepend(parent?: TreeIter | null): /* iter */ TreeIter
    remove(iter: TreeIter): boolean
    set_column_types(types: number): void
    set_value(iter: TreeIter, column: number, value: any): void
    set(iter: TreeIter, columns: number[], values: any): void
    swap(a: TreeIter, b: TreeIter): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.TreeDragDest */
    drag_data_received(dest: TreePath, selection_data: SelectionData): boolean
    row_drop_possible(dest_path: TreePath, selection_data: SelectionData): boolean
    /* Methods of Gtk.TreeDragSource */
    drag_data_delete(path: TreePath): boolean
    drag_data_get(path: TreePath, selection_data: SelectionData): boolean
    row_draggable(path: TreePath): boolean
    /* Methods of Gtk.TreeModel */
    filter_new(root?: TreePath | null): TreeModel
    foreach(func: TreeModelForeachFunc): void
    get_column_type(index_: number): number
    get_flags(): TreeModelFlags
    get_iter(path: TreePath): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_first(): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_iter_from_string(path_string: string): [ /* returnType */ boolean, /* iter */ TreeIter ]
    get_n_columns(): number
    get_path(iter: TreeIter): TreePath
    get_string_from_iter(iter: TreeIter): string
    get_value(iter: TreeIter, column: number): /* value */ any
    iter_children(parent?: TreeIter | null): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_has_child(iter: TreeIter): boolean
    iter_n_children(iter?: TreeIter | null): number
    iter_next(iter: TreeIter): boolean
    iter_nth_child(parent: TreeIter | null, n: number): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_parent(child: TreeIter): [ /* returnType */ boolean, /* iter */ TreeIter ]
    iter_previous(iter: TreeIter): boolean
    ref_node(iter: TreeIter): void
    row_changed(path: TreePath, iter: TreeIter): void
    row_deleted(path: TreePath): void
    row_has_child_toggled(path: TreePath, iter: TreeIter): void
    row_inserted(path: TreePath, iter: TreeIter): void
    rows_reordered(path: TreePath, iter: TreeIter | null, new_order: number[]): void
    sort_new_with_model(): TreeModel
    unref_node(iter: TreeIter): void
    /* Methods of Gtk.TreeSortable */
    get_sort_column_id(): [ /* returnType */ boolean, /* sort_column_id */ number, /* order */ SortType ]
    has_default_sort_func(): boolean
    set_default_sort_func(sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    set_sort_column_id(sort_column_id: number, order: SortType): void
    set_sort_func(sort_column_id: number, sort_func: TreeIterCompareFunc, destroy?: GLib.DestroyNotify | null): void
    sort_column_changed(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeModel */
    connect(sigName: "row-changed", callback: ((obj: TreeStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-deleted", callback: ((obj: TreeStore, path: TreePath) => void))
    connect(sigName: "row-has-child-toggled", callback: ((obj: TreeStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "row-inserted", callback: ((obj: TreeStore, path: TreePath, iter: TreeIter) => void))
    connect(sigName: "rows-reordered", callback: ((obj: TreeStore, path: TreePath, iter: TreeIter, new_order?: object | null) => void))
    /* Signals of Gtk.TreeSortable */
    connect(sigName: "sort-column-changed", callback: ((obj: TreeStore) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeStore_ConstructProps): TreeStore
    constructor (config?: TreeStore_ConstructProps)
}
export interface TreeView_ConstructProps extends Container_ConstructProps {
    activate_on_single_click?:boolean
    enable_grid_lines?:TreeViewGridLines
    enable_search?:boolean
    enable_tree_lines?:boolean
    expander_column?:TreeViewColumn
    fixed_height_mode?:boolean
    headers_clickable?:boolean
    headers_visible?:boolean
    hover_expand?:boolean
    hover_selection?:boolean
    level_indentation?:number
    model?:TreeModel
    reorderable?:boolean
    rubber_banding?:boolean
    rules_hint?:boolean
    search_column?:number
    show_expanders?:boolean
    tooltip_column?:number
    ubuntu_almost_fixed_height_mode?:boolean
}
export class TreeView extends Container {
    /* Properties of Gtk.TreeView */
    activate_on_single_click:boolean
    enable_grid_lines:TreeViewGridLines
    enable_search:boolean
    enable_tree_lines:boolean
    expander_column:TreeViewColumn
    fixed_height_mode:boolean
    headers_clickable:boolean
    headers_visible:boolean
    hover_expand:boolean
    hover_selection:boolean
    level_indentation:number
    model:TreeModel
    reorderable:boolean
    rubber_banding:boolean
    rules_hint:boolean
    search_column:number
    show_expanders:boolean
    tooltip_column:number
    ubuntu_almost_fixed_height_mode:boolean
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.TreeView */
    parent: any
    /* Methods of Gtk.TreeView */
    append_column(column: TreeViewColumn): number
    collapse_all(): void
    collapse_row(path: TreePath): boolean
    columns_autosize(): void
    convert_bin_window_to_tree_coords(bx: number, by: number): [ /* tx */ number, /* ty */ number ]
    convert_bin_window_to_widget_coords(bx: number, by: number): [ /* wx */ number, /* wy */ number ]
    convert_tree_to_bin_window_coords(tx: number, ty: number): [ /* bx */ number, /* by */ number ]
    convert_tree_to_widget_coords(tx: number, ty: number): [ /* wx */ number, /* wy */ number ]
    convert_widget_to_bin_window_coords(wx: number, wy: number): [ /* bx */ number, /* by */ number ]
    convert_widget_to_tree_coords(wx: number, wy: number): [ /* tx */ number, /* ty */ number ]
    create_row_drag_icon(path: TreePath): cairo.Surface
    enable_model_drag_dest(targets: TargetEntry[], actions: Gdk.DragAction): void
    enable_model_drag_source(start_button_mask: Gdk.ModifierType, targets: TargetEntry[], actions: Gdk.DragAction): void
    expand_all(): void
    expand_row(path: TreePath, open_all: boolean): boolean
    expand_to_path(path: TreePath): void
    get_activate_on_single_click(): boolean
    get_background_area(path?: TreePath | null, column?: TreeViewColumn | null): /* rect */ Gdk.Rectangle
    get_bin_window(): Gdk.Window | null
    get_cell_area(path?: TreePath | null, column?: TreeViewColumn | null): /* rect */ Gdk.Rectangle
    get_column(n: number): TreeViewColumn | null
    get_columns(): TreeViewColumn[]
    get_cursor(): [ /* path */ TreePath | null, /* focus_column */ TreeViewColumn | null ]
    get_dest_row_at_pos(drag_x: number, drag_y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* pos */ TreeViewDropPosition | null ]
    get_drag_dest_row(): [ /* path */ TreePath | null, /* pos */ TreeViewDropPosition | null ]
    get_enable_search(): boolean
    get_enable_tree_lines(): boolean
    get_expander_column(): TreeViewColumn
    get_fixed_height_mode(): boolean
    get_grid_lines(): TreeViewGridLines
    get_hadjustment(): Adjustment
    get_headers_clickable(): boolean
    get_headers_visible(): boolean
    get_hover_expand(): boolean
    get_hover_selection(): boolean
    get_level_indentation(): number
    get_model(): TreeModel | null
    get_n_columns(): number
    get_path_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* column */ TreeViewColumn | null, /* cell_x */ number | null, /* cell_y */ number | null ]
    get_reorderable(): boolean
    get_rubber_banding(): boolean
    get_rules_hint(): boolean
    get_search_column(): number
    get_search_entry(): Entry
    get_selection(): TreeSelection
    get_show_expanders(): boolean
    get_tooltip_column(): number
    get_tooltip_context(x: number, y: number, keyboard_tip: boolean): [ /* returnType */ boolean, /* model */ TreeModel | null, /* path */ TreePath | null, /* iter */ TreeIter | null ]
    get_vadjustment(): Adjustment
    get_visible_range(): [ /* returnType */ boolean, /* start_path */ TreePath | null, /* end_path */ TreePath | null ]
    get_visible_rect(): /* visible_rect */ Gdk.Rectangle
    insert_column(column: TreeViewColumn, position: number): number
    insert_column_with_data_func(position: number, title: string, cell: CellRenderer, func: TreeCellDataFunc, dnotify: GLib.DestroyNotify): number
    is_blank_at_pos(x: number, y: number): [ /* returnType */ boolean, /* path */ TreePath | null, /* column */ TreeViewColumn | null, /* cell_x */ number | null, /* cell_y */ number | null ]
    is_rubber_banding_active(): boolean
    map_expanded_rows(func: TreeViewMappingFunc): void
    move_column_after(column: TreeViewColumn, base_column?: TreeViewColumn | null): void
    remove_column(column: TreeViewColumn): number
    row_activated(path: TreePath, column: TreeViewColumn): void
    row_expanded(path: TreePath): boolean
    scroll_to_cell(path: TreePath | null, column: TreeViewColumn | null, use_align: boolean, row_align: number, col_align: number): void
    scroll_to_point(tree_x: number, tree_y: number): void
    set_activate_on_single_click(single: boolean): void
    set_column_drag_function(func?: TreeViewColumnDropFunc | null, destroy?: GLib.DestroyNotify | null): void
    set_cursor(path: TreePath, focus_column: TreeViewColumn | null, start_editing: boolean): void
    set_cursor_on_cell(path: TreePath, focus_column: TreeViewColumn | null, focus_cell: CellRenderer | null, start_editing: boolean): void
    set_destroy_count_func(func?: TreeDestroyCountFunc | null, destroy?: GLib.DestroyNotify | null): void
    set_drag_dest_row(path: TreePath | null, pos: TreeViewDropPosition): void
    set_enable_search(enable_search: boolean): void
    set_enable_tree_lines(enabled: boolean): void
    set_expander_column(column: TreeViewColumn): void
    set_fixed_height_mode(enable: boolean): void
    set_grid_lines(grid_lines: TreeViewGridLines): void
    set_hadjustment(adjustment?: Adjustment | null): void
    set_headers_clickable(setting: boolean): void
    set_headers_visible(headers_visible: boolean): void
    set_hover_expand(expand: boolean): void
    set_hover_selection(hover: boolean): void
    set_level_indentation(indentation: number): void
    set_model(model?: TreeModel | null): void
    set_reorderable(reorderable: boolean): void
    set_row_separator_func(func?: TreeViewRowSeparatorFunc | null, destroy?: GLib.DestroyNotify | null): void
    set_rubber_banding(enable: boolean): void
    set_rules_hint(setting: boolean): void
    set_search_column(column: number): void
    set_search_entry(entry?: Entry | null): void
    set_search_equal_func(search_equal_func: TreeViewSearchEqualFunc, search_destroy?: GLib.DestroyNotify | null): void
    set_search_position_func(func?: TreeViewSearchPositionFunc | null, destroy?: GLib.DestroyNotify | null): void
    set_show_expanders(enabled: boolean): void
    set_tooltip_cell(tooltip: Tooltip, path?: TreePath | null, column?: TreeViewColumn | null, cell?: CellRenderer | null): void
    set_tooltip_column(column: number): void
    set_tooltip_row(tooltip: Tooltip, path: TreePath): void
    set_vadjustment(adjustment?: Adjustment | null): void
    unset_rows_drag_dest(): void
    unset_rows_drag_source(): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hscroll_policy(): ScrollablePolicy
    get_vscroll_policy(): ScrollablePolicy
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.TreeView */
    vfunc_columns_changed?(): void
    vfunc_cursor_changed?(): void
    vfunc_expand_collapse_cursor_row?(logical: boolean, expand: boolean, open_all: boolean): boolean
    vfunc_move_cursor?(step: MovementStep, count: number): boolean
    vfunc_row_activated?(path: TreePath, column: TreeViewColumn): void
    vfunc_row_collapsed?(iter: TreeIter, path: TreePath): void
    vfunc_row_expanded?(iter: TreeIter, path: TreePath): void
    vfunc_select_all?(): boolean
    vfunc_select_cursor_parent?(): boolean
    vfunc_select_cursor_row?(start_editing: boolean): boolean
    vfunc_start_interactive_search?(): boolean
    vfunc_test_collapse_row?(iter: TreeIter, path: TreePath): boolean
    vfunc_test_expand_row?(iter: TreeIter, path: TreePath): boolean
    vfunc_toggle_cursor_row?(): boolean
    vfunc_unselect_all?(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeView */
    connect(sigName: "columns-changed", callback: ((obj: TreeView) => void))
    connect(sigName: "cursor-changed", callback: ((obj: TreeView) => void))
    connect(sigName: "expand-collapse-cursor-row", callback: ((obj: TreeView, object: boolean, p0: boolean, p1: boolean) => boolean))
    connect(sigName: "move-cursor", callback: ((obj: TreeView, step: MovementStep, direction: number) => boolean))
    connect(sigName: "row-activated", callback: ((obj: TreeView, path: TreePath, column: TreeViewColumn) => void))
    connect(sigName: "row-collapsed", callback: ((obj: TreeView, iter: TreeIter, path: TreePath) => void))
    connect(sigName: "row-expanded", callback: ((obj: TreeView, iter: TreeIter, path: TreePath) => void))
    connect(sigName: "select-all", callback: ((obj: TreeView) => boolean))
    connect(sigName: "select-cursor-parent", callback: ((obj: TreeView) => boolean))
    connect(sigName: "select-cursor-row", callback: ((obj: TreeView, object: boolean) => boolean))
    connect(sigName: "start-interactive-search", callback: ((obj: TreeView) => boolean))
    connect(sigName: "test-collapse-row", callback: ((obj: TreeView, iter: TreeIter, path: TreePath) => boolean))
    connect(sigName: "test-expand-row", callback: ((obj: TreeView, iter: TreeIter, path: TreePath) => boolean))
    connect(sigName: "toggle-cursor-row", callback: ((obj: TreeView) => boolean))
    connect(sigName: "unselect-all", callback: ((obj: TreeView) => boolean))
    connect(sigName: "notify::activate-on-single-click", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-grid-lines", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-search", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-tree-lines", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expander-column", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fixed-height-mode", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::headers-clickable", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::headers-visible", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hover-expand", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hover-selection", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::level-indentation", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::model", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reorderable", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rubber-banding", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rules-hint", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::search-column", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::show-expanders", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-column", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ubuntu-almost-fixed-height-mode", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: TreeView, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeView_ConstructProps): TreeView
    constructor (config?: TreeView_ConstructProps)
    static new_with_model(model: TreeModel): TreeView
}
export interface TreeViewAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class TreeViewAccessible extends ContainerAccessible {
    /* Fields of Gtk.TreeViewAccessible */
    parent: any
    priv:TreeViewAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Methods of Atk.Selection */
    add_selection(i: number): boolean
    clear_selection(): boolean
    get_selection_count(): number
    is_child_selected(i: number): boolean
    ref_selection(i: number): Atk.Object | null
    remove_selection(i: number): boolean
    select_all_selection(): boolean
    /* Methods of Atk.Table */
    add_column_selection(column: number): boolean
    add_row_selection(row: number): boolean
    get_caption(): Atk.Object | null
    get_column_at_index(index_: number): number
    get_column_description(column: number): string
    get_column_extent_at(row: number, column: number): number
    get_column_header(column: number): Atk.Object | null
    get_index_at(row: number, column: number): number
    get_n_columns(): number
    get_n_rows(): number
    get_row_at_index(index_: number): number
    get_row_description(row: number): string | null
    get_row_extent_at(row: number, column: number): number
    get_row_header(row: number): Atk.Object | null
    get_selected_columns(selected: number): number
    get_selected_rows(selected: number): number
    get_summary(): Atk.Object
    is_column_selected(column: number): boolean
    is_row_selected(row: number): boolean
    is_selected(row: number, column: number): boolean
    ref_at(row: number, column: number): Atk.Object
    remove_column_selection(column: number): boolean
    remove_row_selection(row: number): boolean
    set_caption(caption: Atk.Object): void
    set_column_description(column: number, description: string): void
    set_column_header(column: number, header: Atk.Object): void
    set_row_description(row: number, description: string): void
    set_row_header(row: number, header: Atk.Object): void
    set_summary(accessible: Atk.Object): void
    /* Methods of Gtk.CellAccessibleParent */
    activate(cell: CellAccessible): void
    edit(cell: CellAccessible): void
    expand_collapse(cell: CellAccessible): void
    get_cell_area(cell: CellAccessible, cell_rect: Gdk.Rectangle): void
    get_cell_extents(cell: CellAccessible, x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): void
    get_child_index(cell: CellAccessible): number
    get_renderer_state(cell: CellAccessible): CellRendererState
    update_relationset(cell: CellAccessible, relationset: Atk.RelationSet): void
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: TreeViewAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Selection */
    connect(sigName: "selection-changed", callback: ((obj: TreeViewAccessible) => void))
    /* Signals of Atk.Table */
    connect(sigName: "column-deleted", callback: ((obj: TreeViewAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "column-inserted", callback: ((obj: TreeViewAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "column-reordered", callback: ((obj: TreeViewAccessible) => void))
    connect(sigName: "model-changed", callback: ((obj: TreeViewAccessible) => void))
    connect(sigName: "row-deleted", callback: ((obj: TreeViewAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "row-inserted", callback: ((obj: TreeViewAccessible, arg1: number, arg2: number) => void))
    connect(sigName: "row-reordered", callback: ((obj: TreeViewAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeViewAccessible_ConstructProps): TreeViewAccessible
    constructor (config?: TreeViewAccessible_ConstructProps)
}
export interface TreeViewColumn_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    alignment?:number
    cell_area?:CellArea
    clickable?:boolean
    expand?:boolean
    fixed_width?:number
    max_width?:number
    min_width?:number
    reorderable?:boolean
    resizable?:boolean
    sizing?:TreeViewColumnSizing
    sort_column_id?:number
    sort_indicator?:boolean
    sort_order?:SortType
    spacing?:number
    title?:string
    visible?:boolean
    widget?:Widget
}
export class TreeViewColumn extends GObject.InitiallyUnowned {
    /* Properties of Gtk.TreeViewColumn */
    alignment:number
    clickable:boolean
    expand:boolean
    fixed_width:number
    max_width:number
    min_width:number
    reorderable:boolean
    resizable:boolean
    sizing:TreeViewColumnSizing
    sort_column_id:number
    sort_indicator:boolean
    sort_order:SortType
    spacing:number
    title:string
    visible:boolean
    widget:Widget
    readonly width:number
    readonly x_offset:number
    /* Fields of Gtk.TreeViewColumn */
    parent_instance:GObject.InitiallyUnowned
    priv:TreeViewColumnPrivate
    /* Methods of Gtk.TreeViewColumn */
    add_attribute(cell_renderer: CellRenderer, attribute: string, column: number): void
    cell_get_position(cell_renderer: CellRenderer): [ /* returnType */ boolean, /* x_offset */ number | null, /* width */ number | null ]
    cell_get_size(cell_area?: Gdk.Rectangle | null): [ /* x_offset */ number | null, /* y_offset */ number | null, /* width */ number | null, /* height */ number | null ]
    cell_is_visible(): boolean
    cell_set_cell_data(tree_model: TreeModel, iter: TreeIter, is_expander: boolean, is_expanded: boolean): void
    clear(): void
    clear_attributes(cell_renderer: CellRenderer): void
    clicked(): void
    focus_cell(cell: CellRenderer): void
    get_alignment(): number
    get_button(): Widget
    get_clickable(): boolean
    get_expand(): boolean
    get_fixed_width(): number
    get_max_width(): number
    get_min_width(): number
    get_reorderable(): boolean
    get_resizable(): boolean
    get_sizing(): TreeViewColumnSizing
    get_sort_column_id(): number
    get_sort_indicator(): boolean
    get_sort_order(): SortType
    get_spacing(): number
    get_title(): string
    get_tree_view(): Widget | null
    get_visible(): boolean
    get_widget(): Widget | null
    get_width(): number
    get_x_offset(): number
    pack_end(cell: CellRenderer, expand: boolean): void
    pack_start(cell: CellRenderer, expand: boolean): void
    queue_resize(): void
    set_alignment(xalign: number): void
    set_cell_data_func(cell_renderer: CellRenderer, func: TreeCellDataFunc | null, destroy: GLib.DestroyNotify): void
    set_clickable(clickable: boolean): void
    set_expand(expand: boolean): void
    set_fixed_width(fixed_width: number): void
    set_max_width(max_width: number): void
    set_min_width(min_width: number): void
    set_reorderable(reorderable: boolean): void
    set_resizable(resizable: boolean): void
    set_sizing(type: TreeViewColumnSizing): void
    set_sort_column_id(sort_column_id: number): void
    set_sort_indicator(setting: boolean): void
    set_sort_order(order: SortType): void
    set_spacing(spacing: number): void
    set_title(title: string): void
    set_visible(visible: boolean): void
    set_widget(widget?: Widget | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.CellLayout */
    get_area(): CellArea | null
    get_cells(): CellRenderer[]
    reorder(cell: CellRenderer, position: number): void
    /* Virtual methods of Gtk.TreeViewColumn */
    vfunc_clicked?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.TreeViewColumn */
    connect(sigName: "clicked", callback: ((obj: TreeViewColumn) => void))
    connect(sigName: "notify::alignment", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::clickable", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fixed-width", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-width", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min-width", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reorderable", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sizing", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-column-id", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-indicator", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sort-order", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spacing", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::widget", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x-offset", callback: ((obj: TreeViewColumn, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: TreeViewColumn_ConstructProps): TreeViewColumn
    constructor (config?: TreeViewColumn_ConstructProps)
    static new_with_area(area: CellArea): TreeViewColumn
}
export interface UIManager_ConstructProps extends GObject.Object_ConstructProps {
    add_tearoffs?:boolean
}
export class UIManager extends GObject.Object {
    /* Properties of Gtk.UIManager */
    add_tearoffs:boolean
    readonly ui:string
    /* Fields of Gtk.UIManager */
    parent: any
    /* Methods of Gtk.UIManager */
    add_ui(merge_id: number, path: string, name: string, action: string | null, type: UIManagerItemType, top: boolean): void
    add_ui_from_file(filename: string): number
    add_ui_from_resource(resource_path: string): number
    add_ui_from_string(buffer: string, length: number): number
    ensure_update(): void
    get_accel_group(): AccelGroup
    get_action(path: string): Action
    get_action_groups(): ActionGroup[]
    get_add_tearoffs(): boolean
    get_toplevels(types: UIManagerItemType): GLib.SList
    get_ui(): string
    get_widget(path: string): Widget
    insert_action_group(action_group: ActionGroup, pos: number): void
    new_merge_id(): number
    remove_action_group(action_group: ActionGroup): void
    remove_ui(merge_id: number): void
    set_add_tearoffs(add_tearoffs: boolean): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Virtual methods of Gtk.UIManager */
    vfunc_actions_changed?(): void
    vfunc_add_widget?(widget: Widget): void
    vfunc_connect_proxy?(action: Action, proxy: Widget): void
    vfunc_disconnect_proxy?(action: Action, proxy: Widget): void
    vfunc_get_action?(path: string): Action
    vfunc_get_widget?(path: string): Widget
    vfunc_post_activate?(action: Action): void
    vfunc_pre_activate?(action: Action): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.UIManager */
    connect(sigName: "actions-changed", callback: ((obj: UIManager) => void))
    connect(sigName: "add-widget", callback: ((obj: UIManager, widget: Widget) => void))
    connect(sigName: "connect-proxy", callback: ((obj: UIManager, action: Action, proxy: Widget) => void))
    connect(sigName: "disconnect-proxy", callback: ((obj: UIManager, action: Action, proxy: Widget) => void))
    connect(sigName: "post-activate", callback: ((obj: UIManager, action: Action) => void))
    connect(sigName: "pre-activate", callback: ((obj: UIManager, action: Action) => void))
    connect(sigName: "notify::add-tearoffs", callback: ((obj: UIManager, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ui", callback: ((obj: UIManager, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: UIManager_ConstructProps): UIManager
    constructor (config?: UIManager_ConstructProps)
}
export interface VBox_ConstructProps extends Box_ConstructProps {
}
export class VBox extends Box {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VBox */
    box:Box
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VBox_ConstructProps): VBox
    constructor (config?: VBox_ConstructProps)
}
export interface VButtonBox_ConstructProps extends ButtonBox_ConstructProps {
}
export class VButtonBox extends ButtonBox {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VButtonBox */
    button_box:ButtonBox
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VButtonBox, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VButtonBox_ConstructProps): VButtonBox
    constructor (config?: VButtonBox_ConstructProps)
}
export interface VPaned_ConstructProps extends Paned_ConstructProps {
}
export class VPaned extends Paned {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VPaned */
    paned:Paned
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Paned */
    vfunc_accept_position?(): boolean
    vfunc_cancel_position?(): boolean
    vfunc_cycle_child_focus?(reverse: boolean): boolean
    vfunc_cycle_handle_focus?(reverse: boolean): boolean
    vfunc_move_handle?(scroll: ScrollType): boolean
    vfunc_toggle_handle_focus?(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VPaned, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VPaned_ConstructProps): VPaned
    constructor (config?: VPaned_ConstructProps)
}
export interface VScale_ConstructProps extends Scale_ConstructProps {
}
export class VScale extends Scale {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VScale */
    scale:Scale
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Scale */
    vfunc_draw_value?(): void
    vfunc_format_value?(value: number): string
    vfunc_get_layout_offsets?(): [ /* x */ number | null, /* y */ number | null ]
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VScale, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VScale_ConstructProps): VScale
    constructor (config?: VScale_ConstructProps)
    static new_with_range(min: number, max: number, step: number): VScale
}
export interface VScrollbar_ConstructProps extends Scrollbar_ConstructProps {
}
export class VScrollbar extends Scrollbar {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VScrollbar */
    scrollbar:Scrollbar
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Range */
    vfunc_adjust_bounds?(new_value: number): void
    vfunc_change_value?(scroll: ScrollType, new_value: number): boolean
    vfunc_get_range_border?(border_: Border): void
    vfunc_get_range_size_request?(orientation: Orientation, minimum: number, natural: number): void
    vfunc_move_slider?(scroll: ScrollType): void
    vfunc_value_changed?(): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VScrollbar, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VScrollbar_ConstructProps): VScrollbar
    constructor (config?: VScrollbar_ConstructProps)
}
export interface VSeparator_ConstructProps extends Separator_ConstructProps {
}
export class VSeparator extends Separator {
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VSeparator */
    separator:Separator
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::orientation", callback: ((obj: VSeparator, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VSeparator_ConstructProps): VSeparator
    constructor (config?: VSeparator_ConstructProps)
}
export interface Viewport_ConstructProps extends Bin_ConstructProps {
    shadow_type?:ShadowType
}
export class Viewport extends Bin {
    /* Properties of Gtk.Viewport */
    shadow_type:ShadowType
    /* Properties of Gtk.Scrollable */
    hadjustment:Adjustment
    hscroll_policy:ScrollablePolicy
    vadjustment:Adjustment
    vscroll_policy:ScrollablePolicy
    /* Fields of Gtk.Viewport */
    bin:Bin
    /* Methods of Gtk.Viewport */
    get_bin_window(): Gdk.Window
    get_hadjustment(): Adjustment
    get_shadow_type(): ShadowType
    get_vadjustment(): Adjustment
    get_view_window(): Gdk.Window
    set_hadjustment(adjustment?: Adjustment | null): void
    set_shadow_type(type: ShadowType): void
    set_vadjustment(adjustment?: Adjustment | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Scrollable */
    get_border(): [ /* returnType */ boolean, /* border */ Border ]
    get_hscroll_policy(): ScrollablePolicy
    get_vscroll_policy(): ScrollablePolicy
    set_hscroll_policy(policy: ScrollablePolicy): void
    set_vscroll_policy(policy: ScrollablePolicy): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::shadow-type", callback: ((obj: Viewport, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hadjustment", callback: ((obj: Viewport, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hscroll-policy", callback: ((obj: Viewport, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vadjustment", callback: ((obj: Viewport, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vscroll-policy", callback: ((obj: Viewport, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Viewport_ConstructProps): Viewport
    constructor (config?: Viewport_ConstructProps)
}
export interface VolumeButton_ConstructProps extends ScaleButton_ConstructProps {
    use_symbolic?:boolean
}
export class VolumeButton extends ScaleButton {
    /* Properties of Gtk.VolumeButton */
    use_symbolic:boolean
    /* Properties of Gtk.Actionable */
    action_name:string
    action_target:GLib.Variant
    /* Properties of Gtk.Activatable */
    related_action:Action
    use_action_appearance:boolean
    /* Properties of Gtk.Orientable */
    orientation:Orientation
    /* Fields of Gtk.VolumeButton */
    parent: any
    /* Methods of Gtk.Actionable */
    get_action_name(): string | null
    get_action_target_value(): GLib.Variant
    set_action_name(action_name?: string | null): void
    set_action_target_value(target_value: GLib.Variant): void
    set_detailed_action_name(detailed_action_name: string): void
    /* Methods of Gtk.Activatable */
    do_set_related_action(action: Action): void
    get_related_action(): Action
    get_use_action_appearance(): boolean
    set_related_action(action: Action): void
    set_use_action_appearance(use_appearance: boolean): void
    sync_action_properties(action?: Action | null): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    get_name(): string
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    set_name(name: string): void
    /* Methods of Gtk.Orientable */
    get_orientation(): Orientation
    set_orientation(orientation: Orientation): void
    /* Virtual methods of Gtk.ScaleButton */
    vfunc_value_changed?(value: number): void
    /* Virtual methods of Gtk.Button */
    vfunc_activate?(): void
    vfunc_clicked?(): void
    vfunc_enter?(): void
    vfunc_leave?(): void
    vfunc_pressed?(): void
    vfunc_released?(): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: "notify::use-symbolic", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-name", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action-target", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-action", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-action-appearance", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::orientation", callback: ((obj: VolumeButton, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: VolumeButton_ConstructProps): VolumeButton
    constructor (config?: VolumeButton_ConstructProps)
}
export interface Widget_ConstructProps extends GObject.InitiallyUnowned_ConstructProps {
    app_paintable?:boolean
    can_default?:boolean
    can_focus?:boolean
    double_buffered?:boolean
    events?:Gdk.EventMask
    expand?:boolean
    focus_on_click?:boolean
    halign?:Align
    has_default?:boolean
    has_focus?:boolean
    has_tooltip?:boolean
    height_request?:number
    hexpand?:boolean
    hexpand_set?:boolean
    is_focus?:boolean
    margin?:number
    margin_bottom?:number
    margin_end?:number
    margin_left?:number
    margin_right?:number
    margin_start?:number
    margin_top?:number
    name?:string
    no_show_all?:boolean
    opacity?:number
    parent?:Container
    receives_default?:boolean
    sensitive?:boolean
    style?:Style
    tooltip_markup?:string
    tooltip_text?:string
    valign?:Align
    vexpand?:boolean
    vexpand_set?:boolean
    visible?:boolean
    width_request?:number
}
export class Widget extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Widget) => void))
    connect(sigName: "button-press-event", callback: ((obj: Widget, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Widget, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Widget, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Widget, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Widget) => void))
    connect(sigName: "configure-event", callback: ((obj: Widget, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Widget, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Widget, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Widget) => void))
    connect(sigName: "destroy-event", callback: ((obj: Widget, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Widget, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Widget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Widget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Widget, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Widget, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Widget, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Widget, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Widget, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Widget, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Widget, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Widget, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Widget, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Widget, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Widget, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Widget, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Widget, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Widget, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Widget, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Widget) => void))
    connect(sigName: "grab-notify", callback: ((obj: Widget, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Widget) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Widget, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Widget, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Widget, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Widget, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Widget, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Widget) => void))
    connect(sigName: "map-event", callback: ((obj: Widget, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Widget, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Widget, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Widget, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Widget, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Widget) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Widget, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Widget, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Widget, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Widget, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Widget) => void))
    connect(sigName: "screen-changed", callback: ((obj: Widget, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Widget, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Widget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Widget, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Widget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Widget, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Widget, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Widget) => void))
    connect(sigName: "show-help", callback: ((obj: Widget, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Widget, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Widget, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Widget, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Widget, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Widget) => void))
    connect(sigName: "touch-event", callback: ((obj: Widget, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Widget) => void))
    connect(sigName: "unmap-event", callback: ((obj: Widget, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Widget) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Widget, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Widget, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::app-paintable", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Widget, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Widget_ConstructProps): Widget
    constructor (config?: Widget_ConstructProps)
    static get_default_direction(): TextDirection
    static get_default_style(): Style
    static pop_composite_child(): void
    static push_composite_child(): void
    static set_default_direction(dir: TextDirection): void
}
export interface WidgetAccessible_ConstructProps extends Accessible_ConstructProps {
}
export class WidgetAccessible extends Accessible {
    /* Fields of Gtk.WidgetAccessible */
    parent: any
    priv:WidgetAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: WidgetAccessible, arg1: Atk.Rectangle) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: WidgetAccessible_ConstructProps): WidgetAccessible
    constructor (config?: WidgetAccessible_ConstructProps)
}
export interface Window_ConstructProps extends Bin_ConstructProps {
    accept_focus?:boolean
    application?:Application
    attached_to?:Widget
    decorated?:boolean
    default_height?:number
    default_width?:number
    deletable?:boolean
    destroy_with_parent?:boolean
    focus_on_map?:boolean
    focus_visible?:boolean
    gravity?:Gdk.Gravity
    has_resize_grip?:boolean
    hide_titlebar_when_maximized?:boolean
    icon?:GdkPixbuf.Pixbuf
    icon_name?:string
    mnemonics_visible?:boolean
    modal?:boolean
    resizable?:boolean
    role?:string
    screen?:Gdk.Screen
    skip_pager_hint?:boolean
    skip_taskbar_hint?:boolean
    startup_id?:string
    title?:string
    transient_for?:Window
    type?:WindowType
    type_hint?:Gdk.WindowTypeHint
    urgency_hint?:boolean
    window_position?:WindowPosition
}
export class Window extends GObject.InitiallyUnowned {
    /* Properties of Gtk.Window */
    accept_focus:boolean
    application:Application
    attached_to:Widget
    decorated:boolean
    default_height:number
    default_width:number
    deletable:boolean
    destroy_with_parent:boolean
    focus_on_map:boolean
    focus_visible:boolean
    gravity:Gdk.Gravity
    has_resize_grip:boolean
    readonly has_toplevel_focus:boolean
    hide_titlebar_when_maximized:boolean
    icon:GdkPixbuf.Pixbuf
    icon_name:string
    readonly is_active:boolean
    readonly is_maximized:boolean
    mnemonics_visible:boolean
    modal:boolean
    resizable:boolean
    readonly resize_grip_visible:boolean
    role:string
    screen:Gdk.Screen
    skip_pager_hint:boolean
    skip_taskbar_hint:boolean
    startup_id:string
    title:string
    transient_for:Window
    type_hint:Gdk.WindowTypeHint
    urgency_hint:boolean
    window_position:WindowPosition
    /* Properties of Gtk.Container */
    border_width:number
    child:Widget
    resize_mode:ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    focus_on_click:boolean
    halign:Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Style
    tooltip_markup:string
    tooltip_text:string
    valign:Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Fields of Gtk.Window */
    bin:Bin
    priv:WindowPrivate
    /* Fields of Gtk.Bin */
    container:Container
    /* Fields of Gtk.Container */
    widget:Widget
    /* Fields of Gtk.Widget */
    parent_instance:GObject.InitiallyUnowned
    /* Methods of Gtk.Window */
    activate_default(): boolean
    activate_focus(): boolean
    activate_key(event: Gdk.EventKey): boolean
    add_accel_group(accel_group: AccelGroup): void
    add_mnemonic(keyval: number, target: Widget): void
    begin_move_drag(button: number, root_x: number, root_y: number, timestamp: number): void
    begin_resize_drag(edge: Gdk.WindowEdge, button: number, root_x: number, root_y: number, timestamp: number): void
    close(): void
    deiconify(): void
    fullscreen(): void
    fullscreen_on_monitor(screen: Gdk.Screen, monitor: number): void
    get_accept_focus(): boolean
    get_application(): Application | null
    get_attached_to(): Widget | null
    get_decorated(): boolean
    get_default_size(): [ /* width */ number | null, /* height */ number | null ]
    get_default_widget(): Widget | null
    get_deletable(): boolean
    get_destroy_with_parent(): boolean
    get_focus(): Widget | null
    get_focus_on_map(): boolean
    get_focus_visible(): boolean
    get_gravity(): Gdk.Gravity
    get_group(): WindowGroup
    get_has_resize_grip(): boolean
    get_hide_titlebar_when_maximized(): boolean
    get_icon(): GdkPixbuf.Pixbuf
    get_icon_list(): GdkPixbuf.Pixbuf[]
    get_icon_name(): string | null
    get_mnemonic_modifier(): Gdk.ModifierType
    get_mnemonics_visible(): boolean
    get_modal(): boolean
    get_opacity(): number
    get_position(): [ /* root_x */ number | null, /* root_y */ number | null ]
    get_resizable(): boolean
    get_resize_grip_area(): [ /* returnType */ boolean, /* rect */ Gdk.Rectangle ]
    get_role(): string | null
    get_screen(): Gdk.Screen
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    get_skip_pager_hint(): boolean
    get_skip_taskbar_hint(): boolean
    get_title(): string | null
    get_titlebar(): Widget | null
    get_transient_for(): Window | null
    get_type_hint(): Gdk.WindowTypeHint
    get_urgency_hint(): boolean
    get_window_type(): WindowType
    has_group(): boolean
    iconify(): void
    maximize(): void
    mnemonic_activate(keyval: number, modifier: Gdk.ModifierType): boolean
    move(x: number, y: number): void
    parse_geometry(geometry: string): boolean
    present(): void
    present_with_time(timestamp: number): void
    propagate_key_event(event: Gdk.EventKey): boolean
    remove_accel_group(accel_group: AccelGroup): void
    remove_mnemonic(keyval: number, target: Widget): void
    reshow_with_initial_size(): void
    resize(width: number, height: number): void
    resize_grip_is_visible(): boolean
    resize_to_geometry(width: number, height: number): void
    set_accept_focus(setting: boolean): void
    set_application(application?: Application | null): void
    set_attached_to(attach_widget?: Widget | null): void
    set_decorated(setting: boolean): void
    set_default(default_widget?: Widget | null): void
    set_default_geometry(width: number, height: number): void
    set_default_size(width: number, height: number): void
    set_deletable(setting: boolean): void
    set_destroy_with_parent(setting: boolean): void
    set_focus(focus?: Widget | null): void
    set_focus_on_map(setting: boolean): void
    set_focus_visible(setting: boolean): void
    set_geometry_hints(geometry_widget: Widget | null, geometry: Gdk.Geometry | null, geom_mask: Gdk.WindowHints): void
    set_gravity(gravity: Gdk.Gravity): void
    set_has_resize_grip(value: boolean): void
    set_has_user_ref_count(setting: boolean): void
    set_hide_titlebar_when_maximized(setting: boolean): void
    set_icon(icon?: GdkPixbuf.Pixbuf | null): void
    set_icon_from_file(filename: string): boolean
    set_icon_list(list: GdkPixbuf.Pixbuf[]): void
    set_icon_name(name?: string | null): void
    set_keep_above(setting: boolean): void
    set_keep_below(setting: boolean): void
    set_mnemonic_modifier(modifier: Gdk.ModifierType): void
    set_mnemonics_visible(setting: boolean): void
    set_modal(modal: boolean): void
    set_opacity(opacity: number): void
    set_position(position: WindowPosition): void
    set_resizable(resizable: boolean): void
    set_role(role: string): void
    set_screen(screen: Gdk.Screen): void
    set_skip_pager_hint(setting: boolean): void
    set_skip_taskbar_hint(setting: boolean): void
    set_startup_id(startup_id: string): void
    set_title(title: string): void
    set_titlebar(titlebar?: Widget | null): void
    set_transient_for(parent?: Window | null): void
    set_type_hint(hint: Gdk.WindowTypeHint): void
    set_urgency_hint(setting: boolean): void
    set_wmclass(wmclass_name: string, wmclass_class: string): void
    stick(): void
    unfullscreen(): void
    unmaximize(): void
    unstick(): void
    /* Methods of Gtk.Bin */
    get_child(): Widget | null
    /* Methods of Gtk.Container */
    add(widget: Widget): void
    check_resize(): void
    child_get_property(child: Widget, property_name: string, value: any): void
    child_notify_by_pspec(child: Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Widget, property_name: string, value: any): void
    child_type(): number
    forall(callback: Callback): void
    foreach(callback: Callback): void
    get_border_width(): number
    get_children(): Widget[]
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ Widget[] ]
    get_focus_child(): Widget | null
    get_focus_hadjustment(): Adjustment | null
    get_focus_vadjustment(): Adjustment | null
    get_path_for_child(child: Widget): WidgetPath
    get_resize_mode(): ResizeMode
    propagate_draw(child: Widget, cr: cairo.Context): void
    remove(widget: Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: Widget[]): void
    set_focus_child(child?: Widget | null): void
    set_focus_hadjustment(adjustment: Adjustment): void
    set_focus_vadjustment(adjustment: Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Widget): void
    add_tick_callback(callback: TickCallback, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: DirectionType): boolean
    child_notify(child_property: string): void
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text?: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: TargetList, actions: Gdk.DragAction, button: number, event?: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list?: TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): TargetList | null
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: DestDefaults, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list?: TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): TargetList | null
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: TargetEntry[] | null, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list?: TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_size(): [ /* allocation */ Allocation, /* baseline */ number | null ]
    get_allocated_width(): number
    get_allocation(): /* allocation */ Allocation
    get_ancestor(widget_type: number): Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Allocation
    get_clipboard(selection: Gdk.Atom): Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_focus_on_click(): boolean
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock | null
    get_halign(): Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_pango_context(): Pango.Context
    get_parent(): Widget | null
    get_parent_window(): Gdk.Window | null
    get_path(): WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Requisition | null, /* natural_size */ Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): SizeRequestMode
    get_requisition(): /* requisition */ Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_sensitive(): boolean
    get_settings(): Settings
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): StateType
    get_state_flags(): StateFlags
    get_style(): Style
    get_style_context(): StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Window
    get_toplevel(): Widget
    get_valign(): Align
    get_valign_with_baseline(): Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window | null
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region?: cairo.Region | null): void
    insert_action_group(name: string, group?: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle): [ /* returnType */ boolean, /* intersection */ Gdk.Rectangle | null ]
    is_ancestor(ancestor: Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: DirectionType): boolean
    list_accel_closures(): Function
    list_action_prefixes(): string[]
    list_mnemonic_labels(): Widget[]
    map(): void
    modify_base(state: StateType, color?: Gdk.Color | null): void
    modify_bg(state: StateType, color?: Gdk.Color | null): void
    modify_cursor(primary?: Gdk.Color | null, secondary?: Gdk.Color | null): void
    modify_fg(state: StateType, color?: Gdk.Color | null): void
    modify_font(font_desc?: Pango.FontDescription | null): void
    modify_style(style: RcStyle): void
    modify_text(state: StateType, color?: Gdk.Color | null): void
    override_background_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_color(state: StateFlags, color?: Gdk.RGBA | null): void
    override_cursor(cursor?: Gdk.RGBA | null, secondary_cursor?: Gdk.RGBA | null): void
    override_font(font_desc?: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color?: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_allocate(): void
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail?: string | null): GdkPixbuf.Pixbuf | null
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path?: string | null, accel_group?: AccelGroup | null): void
    set_allocation(allocation: Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_focus_on_click(focus_on_click: boolean): void
    set_font_map(font_map?: Pango.FontMap | null): void
    set_font_options(options?: cairo.FontOptions | null): void
    set_halign(align: Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_parent(parent: Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: StateType): void
    set_state_flags(flags: StateFlags, clear: boolean): void
    set_style(style?: Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup?: string | null): void
    set_tooltip_text(text?: string | null): void
    set_tooltip_window(custom_window?: Window | null): void
    set_valign(align: Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual?: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region?: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Allocation): void
    size_allocate_with_baseline(allocation: Allocation, baseline: number): void
    size_request(): /* requisition */ Requisition
    style_attach(): void
    style_get_property(property_name: string, value: any): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number | null, /* dest_y */ number | null ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: StateFlags): void
    /* Methods of Gtk.Buildable */
    add_child(builder: Builder, child: GObject.Object, type?: string | null): void
    construct_child(builder: Builder, name: string): GObject.Object
    custom_finished(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_end(builder: Builder, child: GObject.Object | null, tagname: string, data?: object | null): void
    custom_tag_start(builder: Builder, child: GObject.Object | null, tagname: string): [ /* returnType */ boolean, /* parser */ GLib.MarkupParser, /* data */ object | null ]
    get_internal_child(builder: Builder, childname: string): GObject.Object
    parser_finished(builder: Builder): void
    set_buildable_property(builder: Builder, name: string, value: any): void
    /* Virtual methods of Gtk.Window */
    vfunc_activate_default?(): void
    vfunc_activate_focus?(): void
    vfunc_enable_debugging?(toggle: boolean): boolean
    vfunc_keys_changed?(): void
    vfunc_set_focus?(focus?: Widget | null): void
    /* Virtual methods of Gtk.Container */
    vfunc_add?(widget: Widget): void
    vfunc_check_resize?(): void
    vfunc_child_type?(): number
    vfunc_composite_name?(child: Widget): string
    vfunc_forall?(include_internals: boolean, callback: Callback): void
    vfunc_get_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child?(child: Widget): WidgetPath
    vfunc_remove?(widget: Widget): void
    vfunc_set_child_property?(child: Widget, property_id: number, value: any, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child?(child?: Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation?(baseline: number): void
    vfunc_adjust_baseline_request?(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation?(orientation: Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request?(orientation: Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event?(event: Gdk.EventButton): boolean
    vfunc_button_release_event?(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel?(signal_id: number): boolean
    vfunc_child_notify?(child_property: GObject.ParamSpec): void
    vfunc_composited_changed?(): void
    vfunc_compute_expand?(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event?(event: Gdk.EventConfigure): boolean
    vfunc_damage_event?(event: Gdk.EventExpose): boolean
    vfunc_delete_event?(event: Gdk.EventAny): boolean
    vfunc_destroy?(): void
    vfunc_destroy_event?(event: Gdk.EventAny): boolean
    vfunc_direction_changed?(previous_direction: TextDirection): void
    vfunc_dispatch_child_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin?(context: Gdk.DragContext): void
    vfunc_drag_data_delete?(context: Gdk.DragContext): void
    vfunc_drag_data_get?(context: Gdk.DragContext, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_data_received?(context: Gdk.DragContext, x: number, y: number, selection_data: SelectionData, info: number, time_: number): void
    vfunc_drag_drop?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end?(context: Gdk.DragContext): void
    vfunc_drag_failed?(context: Gdk.DragContext, result: DragResult): boolean
    vfunc_drag_leave?(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion?(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw?(cr: cairo.Context): boolean
    vfunc_enter_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_event?(event: Gdk.Event): boolean
    vfunc_focus?(direction: DirectionType): boolean
    vfunc_focus_in_event?(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event?(event: Gdk.EventFocus): boolean
    vfunc_get_accessible?(): Atk.Object
    vfunc_get_preferred_height?(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width?(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width?(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height?(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode?(): SizeRequestMode
    vfunc_grab_broken_event?(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus?(): void
    vfunc_grab_notify?(was_grabbed: boolean): void
    vfunc_hide?(): void
    vfunc_hierarchy_changed?(previous_toplevel: Widget): void
    vfunc_key_press_event?(event: Gdk.EventKey): boolean
    vfunc_key_release_event?(event: Gdk.EventKey): boolean
    vfunc_keynav_failed?(direction: DirectionType): boolean
    vfunc_leave_notify_event?(event: Gdk.EventCrossing): boolean
    vfunc_map?(): void
    vfunc_map_event?(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate?(group_cycling: boolean): boolean
    vfunc_motion_notify_event?(event: Gdk.EventMotion): boolean
    vfunc_move_focus?(direction: DirectionType): void
    vfunc_parent_set?(previous_parent: Widget): void
    vfunc_popup_menu?(): boolean
    vfunc_property_notify_event?(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event?(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event?(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip?(x: number, y: number, keyboard_tooltip: boolean, tooltip: Tooltip): boolean
    vfunc_queue_draw_region?(region: cairo.Region): void
    vfunc_realize?(): void
    vfunc_screen_changed?(previous_screen: Gdk.Screen): void
    vfunc_scroll_event?(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_get?(selection_data: SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event?(event: Gdk.EventSelection): boolean
    vfunc_selection_received?(selection_data: SelectionData, time_: number): void
    vfunc_selection_request_event?(event: Gdk.EventSelection): boolean
    vfunc_show?(): void
    vfunc_show_all?(): void
    vfunc_show_help?(help_type: WidgetHelpType): boolean
    vfunc_size_allocate?(allocation: Allocation): void
    vfunc_state_changed?(previous_state: StateType): void
    vfunc_state_flags_changed?(previous_state_flags: StateFlags): void
    vfunc_style_set?(previous_style: Style): void
    vfunc_style_updated?(): void
    vfunc_touch_event?(event: Gdk.EventTouch): boolean
    vfunc_unmap?(): void
    vfunc_unmap_event?(event: Gdk.EventAny): boolean
    vfunc_unrealize?(): void
    vfunc_visibility_notify_event?(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event?(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Gtk.Window */
    connect(sigName: "activate-default", callback: ((obj: Window) => void))
    connect(sigName: "activate-focus", callback: ((obj: Window) => void))
    connect(sigName: "enable-debugging", callback: ((obj: Window, toggle: boolean) => boolean))
    connect(sigName: "keys-changed", callback: ((obj: Window) => void))
    connect(sigName: "set-focus", callback: ((obj: Window, object: Widget) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((obj: Window, object: Widget) => void))
    connect(sigName: "check-resize", callback: ((obj: Window) => void))
    connect(sigName: "remove", callback: ((obj: Window, object: Widget) => void))
    connect(sigName: "set-focus-child", callback: ((obj: Window, object: Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: ((obj: Window) => void))
    connect(sigName: "button-press-event", callback: ((obj: Window, event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((obj: Window, event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((obj: Window, signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((obj: Window, child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: ((obj: Window) => void))
    connect(sigName: "configure-event", callback: ((obj: Window, event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((obj: Window, event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((obj: Window, event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: ((obj: Window) => void))
    connect(sigName: "destroy-event", callback: ((obj: Window, event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((obj: Window, previous_direction: TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((obj: Window, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((obj: Window, context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((obj: Window, context: Gdk.DragContext, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((obj: Window, context: Gdk.DragContext, x: number, y: number, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((obj: Window, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((obj: Window, context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((obj: Window, context: Gdk.DragContext, result: DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((obj: Window, context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((obj: Window, context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((obj: Window, cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((obj: Window, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((obj: Window, event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((obj: Window, event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((obj: Window, direction: DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((obj: Window, event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((obj: Window, event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((obj: Window, event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: ((obj: Window) => void))
    connect(sigName: "grab-notify", callback: ((obj: Window, was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: ((obj: Window) => void))
    connect(sigName: "hierarchy-changed", callback: ((obj: Window, previous_toplevel?: Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((obj: Window, event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((obj: Window, event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((obj: Window, direction: DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((obj: Window, event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: ((obj: Window) => void))
    connect(sigName: "map-event", callback: ((obj: Window, event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((obj: Window, group_cycling: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((obj: Window, event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((obj: Window, direction: DirectionType) => void))
    connect(sigName: "parent-set", callback: ((obj: Window, old_parent?: Widget | null) => void))
    connect(sigName: "popup-menu", callback: ((obj: Window) => boolean))
    connect(sigName: "property-notify-event", callback: ((obj: Window, event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((obj: Window, event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((obj: Window, event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((obj: Window, x: number, y: number, keyboard_mode: boolean, tooltip: Tooltip) => boolean))
    connect(sigName: "realize", callback: ((obj: Window) => void))
    connect(sigName: "screen-changed", callback: ((obj: Window, previous_screen?: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((obj: Window, event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((obj: Window, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((obj: Window, data: SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((obj: Window, event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((obj: Window, data: SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((obj: Window, event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: ((obj: Window) => void))
    connect(sigName: "show-help", callback: ((obj: Window, help_type: WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((obj: Window, allocation: Allocation) => void))
    connect(sigName: "state-changed", callback: ((obj: Window, state: StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((obj: Window, flags: StateFlags) => void))
    connect(sigName: "style-set", callback: ((obj: Window, previous_style?: Style | null) => void))
    connect(sigName: "style-updated", callback: ((obj: Window) => void))
    connect(sigName: "touch-event", callback: ((obj: Window, object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: ((obj: Window) => void))
    connect(sigName: "unmap-event", callback: ((obj: Window, event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: ((obj: Window) => void))
    connect(sigName: "visibility-notify-event", callback: ((obj: Window, event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((obj: Window, event: Gdk.EventWindowState) => boolean))
    connect(sigName: "notify::accept-focus", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::application", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attached-to", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::decorated", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-height", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-width", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::deletable", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::destroy-with-parent", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-map", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-visible", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::gravity", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-resize-grip", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-toplevel-focus", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hide-titlebar-when-maximized", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-name", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-active", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-maximized", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mnemonics-visible", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::modal", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-grip-visible", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::role", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-pager-hint", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::skip-taskbar-hint", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::startup-id", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transient-for", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type-hint", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::urgency-hint", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-position", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-on-click", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((obj: Window, pspec: GObject.ParamSpec) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: Window_ConstructProps): Window
    constructor (config?: Window_ConstructProps)
    static get_default_icon_list(): GdkPixbuf.Pixbuf[]
    static get_default_icon_name(): string
    static list_toplevels(): Widget[]
    static set_auto_startup_notification(setting: boolean): void
    static set_default_icon(icon: GdkPixbuf.Pixbuf): void
    static set_default_icon_from_file(filename: string): boolean
    static set_default_icon_list(list: GdkPixbuf.Pixbuf[]): void
    static set_default_icon_name(name: string): void
    static set_interactive_debugging(enable: boolean): void
}
export interface WindowAccessible_ConstructProps extends ContainerAccessible_ConstructProps {
}
export class WindowAccessible extends ContainerAccessible {
    /* Fields of Gtk.WindowAccessible */
    parent: any
    priv:WindowAccessiblePrivate
    /* Methods of Atk.Component */
    contains(x: number, y: number, coord_type: Atk.CoordType): boolean
    get_alpha(): number
    get_extents(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null, /* width */ number | null, /* height */ number | null ]
    get_layer(): Atk.Layer
    get_mdi_zorder(): number
    get_position(coord_type: Atk.CoordType): [ /* x */ number | null, /* y */ number | null ]
    get_size(): [ /* width */ number | null, /* height */ number | null ]
    grab_focus(): boolean
    ref_accessible_at_point(x: number, y: number, coord_type: Atk.CoordType): Atk.Object | null
    remove_focus_handler(handler_id: number): void
    set_extents(x: number, y: number, width: number, height: number, coord_type: Atk.CoordType): boolean
    set_position(x: number, y: number, coord_type: Atk.CoordType): boolean
    set_size(width: number, height: number): boolean
    /* Virtual methods of Gtk.Accessible */
    vfunc_connect_widget_destroyed?(): void
    vfunc_widget_set?(): void
    vfunc_widget_unset?(): void
    /* Virtual methods of Atk.Object */
    vfunc_active_descendant_changed?(child?: object | null): void
    vfunc_children_changed?(change_index: number, changed_child?: object | null): void
    vfunc_focus_event?(focus_in: boolean): void
    vfunc_get_attributes?(): Atk.AttributeSet
    vfunc_get_description?(): string | null
    vfunc_get_index_in_parent?(): number
    vfunc_get_layer?(): Atk.Layer
    vfunc_get_mdi_zorder?(): number
    vfunc_get_n_children?(): number
    vfunc_get_name?(): string | null
    vfunc_get_object_locale?(): string
    vfunc_get_parent?(): Atk.Object
    vfunc_get_role?(): Atk.Role
    vfunc_initialize?(data?: object | null): void
    vfunc_property_change?(values: Atk.PropertyValues): void
    vfunc_ref_relation_set?(): Atk.RelationSet
    vfunc_ref_state_set?(): Atk.StateSet
    vfunc_remove_property_change_handler?(handler_id: number): void
    vfunc_set_description?(description: string): boolean | null
    vfunc_set_name?(name: string): void
    vfunc_set_parent?(parent: Atk.Object): void
    vfunc_set_role?(role: Atk.Role): void
    vfunc_state_change?(name: string, state_set: boolean): void
    vfunc_visible_data_changed?(): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of Atk.Component */
    connect(sigName: "bounds-changed", callback: ((obj: WindowAccessible, arg1: Atk.Rectangle) => void))
    /* Signals of Atk.Window */
    connect(sigName: "activate", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "create", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "deactivate", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "destroy", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "maximize", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "minimize", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "move", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "resize", callback: ((obj: WindowAccessible) => void))
    connect(sigName: "restore", callback: ((obj: WindowAccessible) => void))
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: WindowAccessible_ConstructProps): WindowAccessible
    constructor (config?: WindowAccessible_ConstructProps)
}
export interface WindowGroup_ConstructProps extends GObject.Object_ConstructProps {
}
export class WindowGroup extends GObject.Object {
    /* Fields of Gtk.WindowGroup */
    parent_instance:GObject.Object
    priv:WindowGroupPrivate
    /* Methods of Gtk.WindowGroup */
    add_window(window: Window): void
    get_current_device_grab(device: Gdk.Device): Widget | null
    get_current_grab(): Widget
    list_windows(): Window[]
    remove_window(window: Window): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed?(): void
    vfunc_dispatch_properties_changed?(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose?(): void
    vfunc_finalize?(): void
    vfunc_get_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify?(pspec: GObject.ParamSpec): void
    vfunc_set_property?(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    connect(sigName: string, callback: any)
    static name: string
    static new (config?: WindowGroup_ConstructProps): WindowGroup
    constructor (config?: WindowGroup_ConstructProps)
}
export class AboutDialogPrivate {
    static name: string
}
export class AccelGroupEntry {
    /* Fields of Gtk.AccelGroupEntry */
    key:AccelKey
    closure:Function
    accel_path_quark:GLib.Quark
    static name: string
}
export class AccelGroupPrivate {
    static name: string
}
export class AccelKey {
    /* Fields of Gtk.AccelKey */
    accel_key:number
    accel_mods:Gdk.ModifierType
    accel_flags:number
    static name: string
}
export class AccelLabelPrivate {
    static name: string
}
export class AccessiblePrivate {
    static name: string
}
export class ActionBarPrivate {
    static name: string
}
export class ActionEntry {
    /* Fields of Gtk.ActionEntry */
    name:string
    stock_id:string
    label:string
    accelerator:string
    tooltip:string
    callback:GObject.Callback
    static name: string
}
export class ActionGroupPrivate {
    static name: string
}
export class ActionPrivate {
    static name: string
}
export class AdjustmentPrivate {
    static name: string
}
export class AlignmentPrivate {
    static name: string
}
export class AppChooserButtonPrivate {
    static name: string
}
export class AppChooserDialogPrivate {
    static name: string
}
export class AppChooserWidgetPrivate {
    static name: string
}
export class ApplicationPrivate {
    static name: string
}
export class ApplicationWindowPrivate {
    static name: string
}
export class ArrowAccessiblePrivate {
    static name: string
}
export class ArrowPrivate {
    static name: string
}
export class AspectFramePrivate {
    static name: string
}
export class AssistantPrivate {
    static name: string
}
export class BinPrivate {
    static name: string
}
export class BindingArg {
    /* Fields of Gtk.BindingArg */
    arg_type:number
    static name: string
}
export class BindingEntry {
    /* Fields of Gtk.BindingEntry */
    keyval:number
    modifiers:Gdk.ModifierType
    binding_set:BindingSet
    destroyed:number
    in_emission:number
    marks_unbound:number
    set_next:BindingEntry
    hash_next:BindingEntry
    signals:BindingSignal
    static name: string
    static add_signal_from_string(binding_set: BindingSet, signal_desc: string): GLib.TokenType
    static add_signall(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType, signal_name: string, binding_args: GLib.SList): void
    static remove(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType): void
    static skip(binding_set: BindingSet, keyval: number, modifiers: Gdk.ModifierType): void
}
export class BindingSet {
    /* Fields of Gtk.BindingSet */
    set_name:string
    priority:number
    widget_path_pspecs:GLib.SList
    widget_class_pspecs:GLib.SList
    class_branch_pspecs:GLib.SList
    entries:BindingEntry
    current:BindingEntry
    parsed:number
    /* Methods of Gtk.BindingSet */
    activate(keyval: number, modifiers: Gdk.ModifierType, object: GObject.Object): boolean
    add_path(path_type: PathType, path_pattern: string, priority: PathPriorityType): void
    static name: string
    static find(set_name: string): BindingSet | null
}
export class BindingSignal {
    /* Fields of Gtk.BindingSignal */
    next:BindingSignal
    signal_name:string
    n_args:number
    args:BindingArg[]
    static name: string
}
export class BooleanCellAccessiblePrivate {
    static name: string
}
export class Border {
    /* Fields of Gtk.Border */
    left:number
    right:number
    top:number
    bottom:number
    /* Methods of Gtk.Border */
    copy(): Border
    free(): void
    static name: string
    static new(): Border
    constructor()
}
export class BoxPrivate {
    static name: string
}
export class BuilderPrivate {
    static name: string
}
export class ButtonAccessiblePrivate {
    static name: string
}
export class ButtonBoxPrivate {
    static name: string
}
export class ButtonPrivate {
    static name: string
}
export class CalendarPrivate {
    static name: string
}
export class CellAccessiblePrivate {
    static name: string
}
export class CellAreaBoxPrivate {
    static name: string
}
export class CellAreaContextPrivate {
    static name: string
}
export class CellAreaPrivate {
    static name: string
}
export class CellRendererAccelPrivate {
    static name: string
}
export class CellRendererClassPrivate {
    static name: string
}
export class CellRendererComboPrivate {
    static name: string
}
export class CellRendererPixbufPrivate {
    static name: string
}
export class CellRendererPrivate {
    static name: string
}
export class CellRendererProgressPrivate {
    static name: string
}
export class CellRendererSpinPrivate {
    static name: string
}
export class CellRendererSpinnerPrivate {
    static name: string
}
export class CellRendererTextPrivate {
    static name: string
}
export class CellRendererTogglePrivate {
    static name: string
}
export class CellViewPrivate {
    static name: string
}
export class CheckMenuItemAccessiblePrivate {
    static name: string
}
export class CheckMenuItemPrivate {
    static name: string
}
export class ColorButtonPrivate {
    static name: string
}
export class ColorChooserDialogPrivate {
    static name: string
}
export class ColorChooserWidgetPrivate {
    static name: string
}
export class ColorSelectionDialogPrivate {
    static name: string
}
export class ColorSelectionPrivate {
    static name: string
}
export class ComboBoxAccessiblePrivate {
    static name: string
}
export class ComboBoxPrivate {
    static name: string
}
export class ComboBoxTextPrivate {
    static name: string
}
export class ContainerAccessiblePrivate {
    static name: string
}
export class ContainerCellAccessiblePrivate {
    static name: string
}
export class ContainerPrivate {
    static name: string
}
export class CssProviderPrivate {
    static name: string
}
export class CssSection {
    /* Methods of Gtk.CssSection */
    get_end_line(): number
    get_end_position(): number
    get_file(): Gio.File
    get_parent(): CssSection | null
    get_section_type(): CssSectionType
    get_start_line(): number
    get_start_position(): number
    ref(): CssSection
    unref(): void
    static name: string
}
export class DialogPrivate {
    static name: string
}
export class EntryAccessiblePrivate {
    static name: string
}
export class EntryBufferPrivate {
    static name: string
}
export class EntryCompletionPrivate {
    static name: string
}
export class EntryPrivate {
    static name: string
}
export class EventBoxPrivate {
    static name: string
}
export class ExpanderAccessiblePrivate {
    static name: string
}
export class ExpanderPrivate {
    static name: string
}
export class FileChooserButtonPrivate {
    static name: string
}
export class FileChooserDialogPrivate {
    static name: string
}
export class FileChooserWidgetPrivate {
    static name: string
}
export class FileFilterInfo {
    /* Fields of Gtk.FileFilterInfo */
    contains:FileFilterFlags
    filename:string
    uri:string
    display_name:string
    mime_type:string
    static name: string
}
export class FixedChild {
    /* Fields of Gtk.FixedChild */
    widget:Widget
    x:number
    y:number
    static name: string
}
export class FixedPrivate {
    static name: string
}
export class FlowBoxAccessiblePrivate {
    static name: string
}
export class FontButtonPrivate {
    static name: string
}
export class FontChooserDialogPrivate {
    static name: string
}
export class FontChooserWidgetPrivate {
    static name: string
}
export class FontSelectionDialogPrivate {
    static name: string
}
export class FontSelectionPrivate {
    static name: string
}
export class FrameAccessiblePrivate {
    static name: string
}
export class FramePrivate {
    static name: string
}
export class Gradient {
    /* Methods of Gtk.Gradient */
    add_color_stop(offset: number, color: SymbolicColor): void
    ref(): Gradient
    resolve(props: StyleProperties): [ /* returnType */ boolean, /* resolved_gradient */ cairo.Pattern ]
    resolve_for_context(context: StyleContext): cairo.Pattern
    to_string(): string
    unref(): void
    static name: string
    static new_linear(x0: number, y0: number, x1: number, y1: number): Gradient
    static new_radial(x0: number, y0: number, radius0: number, x1: number, y1: number, radius1: number): Gradient
}
export class GridPrivate {
    static name: string
}
export class HSVPrivate {
    static name: string
}
export class HandleBoxPrivate {
    static name: string
}
export class HeaderBarPrivate {
    static name: string
}
export class IMContextInfo {
    /* Fields of Gtk.IMContextInfo */
    context_id:string
    context_name:string
    domain:string
    domain_dirname:string
    default_locales:string
    static name: string
}
export class IMContextSimplePrivate {
    static name: string
}
export class IMMulticontextPrivate {
    static name: string
}
export class IconFactoryPrivate {
    static name: string
}
export class IconSet {
    /* Methods of Gtk.IconSet */
    add_source(source: IconSource): void
    copy(): IconSet
    get_sizes(): /* sizes */ number[]
    ref(): IconSet
    render_icon(style: Style | null, direction: TextDirection, state: StateType, size: number, widget?: Widget | null, detail?: string | null): GdkPixbuf.Pixbuf
    render_icon_pixbuf(context: StyleContext, size: number): GdkPixbuf.Pixbuf
    render_icon_surface(context: StyleContext, size: number, scale: number, for_window?: Gdk.Window | null): cairo.Surface
    unref(): void
    static name: string
    static new(): IconSet
    constructor()
    static new_from_pixbuf(pixbuf: GdkPixbuf.Pixbuf): IconSet
}
export class IconSource {
    /* Methods of Gtk.IconSource */
    copy(): IconSource
    free(): void
    get_direction(): TextDirection
    get_direction_wildcarded(): boolean
    get_filename(): string
    get_icon_name(): string
    get_pixbuf(): GdkPixbuf.Pixbuf
    get_size(): number
    get_size_wildcarded(): boolean
    get_state(): StateType
    get_state_wildcarded(): boolean
    set_direction(direction: TextDirection): void
    set_direction_wildcarded(setting: boolean): void
    set_filename(filename: string): void
    set_icon_name(icon_name?: string | null): void
    set_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    set_size(size: number): void
    set_size_wildcarded(setting: boolean): void
    set_state(state: StateType): void
    set_state_wildcarded(setting: boolean): void
    static name: string
    static new(): IconSource
    constructor()
}
export class IconThemePrivate {
    static name: string
}
export class IconViewAccessiblePrivate {
    static name: string
}
export class IconViewPrivate {
    static name: string
}
export class ImageAccessiblePrivate {
    static name: string
}
export class ImageCellAccessiblePrivate {
    static name: string
}
export class ImageMenuItemPrivate {
    static name: string
}
export class ImagePrivate {
    static name: string
}
export class InfoBarPrivate {
    static name: string
}
export class InvisiblePrivate {
    static name: string
}
export class LabelAccessiblePrivate {
    static name: string
}
export class LabelPrivate {
    static name: string
}
export class LabelSelectionInfo {
    static name: string
}
export class LayoutPrivate {
    static name: string
}
export class LevelBarAccessiblePrivate {
    static name: string
}
export class LevelBarPrivate {
    static name: string
}
export class LinkButtonAccessiblePrivate {
    static name: string
}
export class LinkButtonPrivate {
    static name: string
}
export class ListBoxAccessiblePrivate {
    static name: string
}
export class ListStorePrivate {
    static name: string
}
export class LockButtonAccessiblePrivate {
    static name: string
}
export class LockButtonPrivate {
    static name: string
}
export class MenuAccessiblePrivate {
    static name: string
}
export class MenuBarPrivate {
    static name: string
}
export class MenuButtonAccessiblePrivate {
    static name: string
}
export class MenuButtonPrivate {
    static name: string
}
export class MenuItemAccessiblePrivate {
    static name: string
}
export class MenuItemPrivate {
    static name: string
}
export class MenuPrivate {
    static name: string
}
export class MenuShellAccessiblePrivate {
    static name: string
}
export class MenuShellPrivate {
    static name: string
}
export class MenuToolButtonPrivate {
    static name: string
}
export class MessageDialogPrivate {
    static name: string
}
export class MiscPrivate {
    static name: string
}
export class MountOperationPrivate {
    static name: string
}
export class NotebookAccessiblePrivate {
    static name: string
}
export class NotebookPageAccessiblePrivate {
    static name: string
}
export class NotebookPrivate {
    static name: string
}
export class NumerableIconPrivate {
    static name: string
}
export class OverlayPrivate {
    static name: string
}
export class PadActionEntry {
    /* Fields of Gtk.PadActionEntry */
    type:PadActionType
    index:number
    mode:number
    label:string
    action_name:string
    static name: string
}
export class PageRange {
    /* Fields of Gtk.PageRange */
    start:number
    end:number
    static name: string
}
export class PanedAccessiblePrivate {
    static name: string
}
export class PanedPrivate {
    static name: string
}
export class PaperSize {
    /* Methods of Gtk.PaperSize */
    copy(): PaperSize
    free(): void
    get_default_bottom_margin(unit: Unit): number
    get_default_left_margin(unit: Unit): number
    get_default_right_margin(unit: Unit): number
    get_default_top_margin(unit: Unit): number
    get_display_name(): string
    get_height(unit: Unit): number
    get_name(): string
    get_ppd_name(): string
    get_width(unit: Unit): number
    is_custom(): boolean
    is_equal(size2: PaperSize): boolean
    is_ipp(): boolean
    set_size(width: number, height: number, unit: Unit): void
    to_gvariant(): GLib.Variant
    to_key_file(key_file: GLib.KeyFile, group_name: string): void
    static name: string
    static new(name?: string | null): PaperSize
    constructor(name?: string | null)
    static new_custom(name: string, display_name: string, width: number, height: number, unit: Unit): PaperSize
    static new_from_gvariant(variant: GLib.Variant): PaperSize
    static new_from_ipp(ipp_name: string, width: number, height: number): PaperSize
    static new_from_key_file(key_file: GLib.KeyFile, group_name: string): PaperSize
    static new_from_ppd(ppd_name: string, ppd_display_name: string, width: number, height: number): PaperSize
    static get_default(): string
    static get_paper_sizes(include_custom: boolean): PaperSize[]
}
export class PlugPrivate {
    static name: string
}
export class PopoverPrivate {
    static name: string
}
export class PrintOperationPrivate {
    static name: string
}
export class ProgressBarAccessiblePrivate {
    static name: string
}
export class ProgressBarPrivate {
    static name: string
}
export class RadioActionEntry {
    /* Fields of Gtk.RadioActionEntry */
    name:string
    stock_id:string
    label:string
    accelerator:string
    tooltip:string
    value:number
    static name: string
}
export class RadioActionPrivate {
    static name: string
}
export class RadioButtonAccessiblePrivate {
    static name: string
}
export class RadioButtonPrivate {
    static name: string
}
export class RadioMenuItemAccessiblePrivate {
    static name: string
}
export class RadioMenuItemPrivate {
    static name: string
}
export class RangeAccessiblePrivate {
    static name: string
}
export class RangePrivate {
    static name: string
}
export class RcContext {
    static name: string
}
export class RcProperty {
    /* Fields of Gtk.RcProperty */
    type_name:GLib.Quark
    property_name:GLib.Quark
    origin:string
    value:any
    static name: string
    static parse_border(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
    static parse_color(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
    static parse_enum(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
    static parse_flags(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
    static parse_requisition(pspec: GObject.ParamSpec, gstring: GLib.String, property_value: any): boolean
}
export class RecentActionPrivate {
    static name: string
}
export class RecentChooserDialogPrivate {
    static name: string
}
export class RecentChooserMenuPrivate {
    static name: string
}
export class RecentChooserWidgetPrivate {
    static name: string
}
export class RecentData {
    /* Fields of Gtk.RecentData */
    display_name:string
    description:string
    mime_type:string
    app_name:string
    app_exec:string
    groups:string[]
    is_private:boolean
    static name: string
}
export class RecentFilterInfo {
    /* Fields of Gtk.RecentFilterInfo */
    contains:RecentFilterFlags
    uri:string
    display_name:string
    mime_type:string
    applications:string[]
    groups:string[]
    age:number
    static name: string
}
export class RecentInfo {
    /* Methods of Gtk.RecentInfo */
    create_app_info(app_name?: string | null): Gio.AppInfo | null
    exists(): boolean
    get_added(): number
    get_age(): number
    get_application_info(app_name: string): [ /* returnType */ boolean, /* app_exec */ string, /* count */ number, /* time_ */ number ]
    get_applications(): string[]
    get_description(): string
    get_display_name(): string
    get_gicon(): Gio.Icon | null
    get_groups(): string[]
    get_icon(size: number): GdkPixbuf.Pixbuf | null
    get_mime_type(): string
    get_modified(): number
    get_private_hint(): boolean
    get_short_name(): string
    get_uri(): string
    get_uri_display(): string | null
    get_visited(): number
    has_application(app_name: string): boolean
    has_group(group_name: string): boolean
    is_local(): boolean
    last_application(): string
    match(info_b: RecentInfo): boolean
    ref(): RecentInfo
    unref(): void
    static name: string
}
export class RecentManagerPrivate {
    static name: string
}
export class RendererCellAccessiblePrivate {
    static name: string
}
export class RequestedSize {
    /* Fields of Gtk.RequestedSize */
    data:object
    minimum_size:number
    natural_size:number
    static name: string
}
export class Requisition {
    /* Fields of Gtk.Requisition */
    width:number
    height:number
    /* Methods of Gtk.Requisition */
    copy(): Requisition
    free(): void
    static name: string
    static new(): Requisition
    constructor()
}
export class ScaleAccessiblePrivate {
    static name: string
}
export class ScaleButtonAccessiblePrivate {
    static name: string
}
export class ScaleButtonPrivate {
    static name: string
}
export class ScalePrivate {
    static name: string
}
export class ScrolledWindowAccessiblePrivate {
    static name: string
}
export class ScrolledWindowPrivate {
    static name: string
}
export class SelectionData {
    /* Methods of Gtk.SelectionData */
    copy(): SelectionData
    free(): void
    get_data_type(): Gdk.Atom
    get_data(): Gjs.byteArray.ByteArray
    get_display(): Gdk.Display
    get_format(): number
    get_length(): number
    get_pixbuf(): GdkPixbuf.Pixbuf | null
    get_selection(): Gdk.Atom
    get_target(): Gdk.Atom
    get_targets(): [ /* returnType */ boolean, /* targets */ Gdk.Atom[] ]
    get_text(): string | null
    get_uris(): string[]
    set(type: Gdk.Atom, format: number, data: Gjs.byteArray.ByteArray): void
    set_pixbuf(pixbuf: GdkPixbuf.Pixbuf): boolean
    set_text(str: string, len: number): boolean
    set_uris(uris: string[]): boolean
    targets_include_image(writable: boolean): boolean
    targets_include_rich_text(buffer: TextBuffer): boolean
    targets_include_text(): boolean
    targets_include_uri(): boolean
    static name: string
}
export class SeparatorPrivate {
    static name: string
}
export class SeparatorToolItemPrivate {
    static name: string
}
export class SettingsPrivate {
    static name: string
}
export class SettingsValue {
    /* Fields of Gtk.SettingsValue */
    origin:string
    value:any
    static name: string
}
export class SizeGroupPrivate {
    static name: string
}
export class SocketPrivate {
    static name: string
}
export class SpinButtonAccessiblePrivate {
    static name: string
}
export class SpinButtonPrivate {
    static name: string
}
export class SpinnerAccessiblePrivate {
    static name: string
}
export class SpinnerPrivate {
    static name: string
}
export class StackSidebarPrivate {
    static name: string
}
export class StatusIconPrivate {
    static name: string
}
export class StatusbarAccessiblePrivate {
    static name: string
}
export class StatusbarPrivate {
    static name: string
}
export class StockItem {
    /* Fields of Gtk.StockItem */
    stock_id:string
    label:string
    modifier:Gdk.ModifierType
    keyval:number
    translation_domain:string
    /* Methods of Gtk.StockItem */
    free(): void
    static name: string
}
export class StyleContextPrivate {
    static name: string
}
export class StylePropertiesPrivate {
    static name: string
}
export class SwitchAccessiblePrivate {
    static name: string
}
export class SwitchPrivate {
    static name: string
}
export class SymbolicColor {
    /* Methods of Gtk.SymbolicColor */
    ref(): SymbolicColor
    resolve(props?: StyleProperties | null): [ /* returnType */ boolean, /* resolved_color */ Gdk.RGBA ]
    to_string(): string
    unref(): void
    static name: string
    static new_alpha(color: SymbolicColor, factor: number): SymbolicColor
    static new_literal(color: Gdk.RGBA): SymbolicColor
    static new_mix(color1: SymbolicColor, color2: SymbolicColor, factor: number): SymbolicColor
    static new_name(name: string): SymbolicColor
    static new_shade(color: SymbolicColor, factor: number): SymbolicColor
    static new_win32(theme_class: string, id: number): SymbolicColor
}
export class TableChild {
    /* Fields of Gtk.TableChild */
    widget:Widget
    left_attach:number
    right_attach:number
    top_attach:number
    bottom_attach:number
    xpadding:number
    ypadding:number
    xexpand:number
    yexpand:number
    xshrink:number
    yshrink:number
    xfill:number
    yfill:number
    static name: string
}
export class TablePrivate {
    static name: string
}
export class TableRowCol {
    /* Fields of Gtk.TableRowCol */
    requisition:number
    allocation:number
    spacing:number
    need_expand:number
    need_shrink:number
    expand:number
    shrink:number
    empty:number
    static name: string
}
export class TargetEntry {
    /* Fields of Gtk.TargetEntry */
    target:string
    flags:number
    info:number
    /* Methods of Gtk.TargetEntry */
    copy(): TargetEntry
    free(): void
    static name: string
    static new(target: string, flags: number, info: number): TargetEntry
    constructor(target: string, flags: number, info: number)
}
export class TargetList {
    /* Methods of Gtk.TargetList */
    add(target: Gdk.Atom, flags: number, info: number): void
    add_image_targets(info: number, writable: boolean): void
    add_rich_text_targets(info: number, deserializable: boolean, buffer: TextBuffer): void
    add_table(targets: TargetEntry[]): void
    add_text_targets(info: number): void
    add_uri_targets(info: number): void
    find(target: Gdk.Atom): [ /* returnType */ boolean, /* info */ number | null ]
    ref(): TargetList
    remove(target: Gdk.Atom): void
    unref(): void
    static name: string
    static new(targets: TargetEntry[] | null): TargetList
    constructor(targets: TargetEntry[] | null)
}
export class TargetPair {
    /* Fields of Gtk.TargetPair */
    target:Gdk.Atom
    flags:number
    info:number
    static name: string
}
export class TearoffMenuItemPrivate {
    static name: string
}
export class TextAppearance {
    /* Fields of Gtk.TextAppearance */
    bg_color:Gdk.Color
    fg_color:Gdk.Color
    rise:number
    underline:number
    strikethrough:number
    draw_bg:number
    inside_selection:number
    is_text:number
    static name: string
}
export class TextAttributes {
    /* Fields of Gtk.TextAttributes */
    appearance:TextAppearance
    justification:Justification
    direction:TextDirection
    font:Pango.FontDescription
    font_scale:number
    left_margin:number
    right_margin:number
    indent:number
    pixels_above_lines:number
    pixels_below_lines:number
    pixels_inside_wrap:number
    tabs:Pango.TabArray
    wrap_mode:WrapMode
    language:Pango.Language
    invisible:number
    bg_full_height:number
    editable:number
    no_fallback:number
    letter_spacing:number
    /* Methods of Gtk.TextAttributes */
    copy(): TextAttributes
    copy_values(dest: TextAttributes): void
    ref(): TextAttributes
    unref(): void
    static name: string
    static new(): TextAttributes
    constructor()
}
export class TextBTree {
    static name: string
}
export class TextBufferPrivate {
    static name: string
}
export class TextCellAccessiblePrivate {
    static name: string
}
export class TextIter {
    /* Fields of Gtk.TextIter */
    /* Methods of Gtk.TextIter */
    assign(other: TextIter): void
    backward_char(): boolean
    backward_chars(count: number): boolean
    backward_cursor_position(): boolean
    backward_cursor_positions(count: number): boolean
    backward_find_char(pred: TextCharPredicate, limit?: TextIter | null): boolean
    backward_line(): boolean
    backward_lines(count: number): boolean
    backward_search(str: string, flags: TextSearchFlags, limit?: TextIter | null): [ /* returnType */ boolean, /* match_start */ TextIter | null, /* match_end */ TextIter | null ]
    backward_sentence_start(): boolean
    backward_sentence_starts(count: number): boolean
    backward_to_tag_toggle(tag?: TextTag | null): boolean
    backward_visible_cursor_position(): boolean
    backward_visible_cursor_positions(count: number): boolean
    backward_visible_line(): boolean
    backward_visible_lines(count: number): boolean
    backward_visible_word_start(): boolean
    backward_visible_word_starts(count: number): boolean
    backward_word_start(): boolean
    backward_word_starts(count: number): boolean
    begins_tag(tag?: TextTag | null): boolean
    can_insert(default_editability: boolean): boolean
    compare(rhs: TextIter): number
    copy(): TextIter
    editable(default_setting: boolean): boolean
    ends_line(): boolean
    ends_sentence(): boolean
    ends_tag(tag?: TextTag | null): boolean
    ends_word(): boolean
    equal(rhs: TextIter): boolean
    forward_char(): boolean
    forward_chars(count: number): boolean
    forward_cursor_position(): boolean
    forward_cursor_positions(count: number): boolean
    forward_find_char(pred: TextCharPredicate, limit?: TextIter | null): boolean
    forward_line(): boolean
    forward_lines(count: number): boolean
    forward_search(str: string, flags: TextSearchFlags, limit?: TextIter | null): [ /* returnType */ boolean, /* match_start */ TextIter | null, /* match_end */ TextIter | null ]
    forward_sentence_end(): boolean
    forward_sentence_ends(count: number): boolean
    forward_to_end(): void
    forward_to_line_end(): boolean
    forward_to_tag_toggle(tag?: TextTag | null): boolean
    forward_visible_cursor_position(): boolean
    forward_visible_cursor_positions(count: number): boolean
    forward_visible_line(): boolean
    forward_visible_lines(count: number): boolean
    forward_visible_word_end(): boolean
    forward_visible_word_ends(count: number): boolean
    forward_word_end(): boolean
    forward_word_ends(count: number): boolean
    free(): void
    get_attributes(): [ /* returnType */ boolean, /* values */ TextAttributes ]
    get_buffer(): TextBuffer
    get_bytes_in_line(): number
    get_char(): number
    get_chars_in_line(): number
    get_child_anchor(): TextChildAnchor
    get_language(): Pango.Language
    get_line(): number
    get_line_index(): number
    get_line_offset(): number
    get_marks(): GLib.SList
    get_offset(): number
    get_pixbuf(): GdkPixbuf.Pixbuf
    get_slice(end: TextIter): string
    get_tags(): GLib.SList
    get_text(end: TextIter): string
    get_toggled_tags(toggled_on: boolean): GLib.SList
    get_visible_line_index(): number
    get_visible_line_offset(): number
    get_visible_slice(end: TextIter): string
    get_visible_text(end: TextIter): string
    has_tag(tag: TextTag): boolean
    in_range(start: TextIter, end: TextIter): boolean
    inside_sentence(): boolean
    inside_word(): boolean
    is_cursor_position(): boolean
    is_end(): boolean
    is_start(): boolean
    order(second: TextIter): void
    set_line(line_number: number): void
    set_line_index(byte_on_line: number): void
    set_line_offset(char_on_line: number): void
    set_offset(char_offset: number): void
    set_visible_line_index(byte_on_line: number): void
    set_visible_line_offset(char_on_line: number): void
    starts_line(): boolean
    starts_sentence(): boolean
    starts_tag(tag?: TextTag | null): boolean
    starts_word(): boolean
    toggles_tag(tag?: TextTag | null): boolean
    static name: string
}
export class TextTagPrivate {
    static name: string
}
export class TextTagTablePrivate {
    static name: string
}
export class TextViewAccessiblePrivate {
    static name: string
}
export class TextViewPrivate {
    static name: string
}
export class ThemeEngine {
    static name: string
}
export class ThemingEnginePrivate {
    static name: string
}
export class ToggleActionEntry {
    /* Fields of Gtk.ToggleActionEntry */
    name:string
    stock_id:string
    label:string
    accelerator:string
    tooltip:string
    callback:GObject.Callback
    is_active:boolean
    static name: string
}
export class ToggleActionPrivate {
    static name: string
}
export class ToggleButtonAccessiblePrivate {
    static name: string
}
export class ToggleButtonPrivate {
    static name: string
}
export class ToggleToolButtonPrivate {
    static name: string
}
export class ToolButtonPrivate {
    static name: string
}
export class ToolItemGroupPrivate {
    static name: string
}
export class ToolItemPrivate {
    static name: string
}
export class ToolPalettePrivate {
    static name: string
}
export class ToolbarPrivate {
    static name: string
}
export class ToplevelAccessiblePrivate {
    static name: string
}
export class TreeIter {
    /* Fields of Gtk.TreeIter */
    stamp:number
    user_data:object
    user_data2:object
    user_data3:object
    /* Methods of Gtk.TreeIter */
    copy(): TreeIter
    free(): void
    static name: string
}
export class TreeModelFilterPrivate {
    static name: string
}
export class TreeModelSortPrivate {
    static name: string
}
export class TreePath {
    /* Methods of Gtk.TreePath */
    append_index(index_: number): void
    compare(b: TreePath): number
    copy(): TreePath
    down(): void
    free(): void
    get_depth(): number
    get_indices(): number[]
    is_ancestor(descendant: TreePath): boolean
    is_descendant(ancestor: TreePath): boolean
    next(): void
    prepend_index(index_: number): void
    prev(): boolean
    to_string(): string
    up(): boolean
    static name: string
    static new(): TreePath
    constructor()
    static new_first(): TreePath
    static new_from_indices(indices: number[]): TreePath
    static new_from_string(path: string): TreePath
}
export class TreeRowReference {
    /* Methods of Gtk.TreeRowReference */
    copy(): TreeRowReference
    free(): void
    get_model(): TreeModel
    get_path(): TreePath | null
    valid(): boolean
    static name: string
    static new(model: TreeModel, path: TreePath): TreeRowReference
    constructor(model: TreeModel, path: TreePath)
    static new_proxy(proxy: GObject.Object, model: TreeModel, path: TreePath): TreeRowReference
    static deleted(proxy: GObject.Object, path: TreePath): void
    static inserted(proxy: GObject.Object, path: TreePath): void
}
export class TreeSelectionPrivate {
    static name: string
}
export class TreeStorePrivate {
    static name: string
}
export class TreeViewAccessiblePrivate {
    static name: string
}
export class TreeViewColumnPrivate {
    static name: string
}
export class TreeViewPrivate {
    static name: string
}
export class UIManagerPrivate {
    static name: string
}
export class ViewportPrivate {
    static name: string
}
export class WidgetAccessiblePrivate {
    static name: string
}
export class WidgetClassPrivate {
    static name: string
}
export class WidgetPath {
    /* Methods of Gtk.WidgetPath */
    append_for_widget(widget: Widget): number
    append_type(type: number): number
    append_with_siblings(siblings: WidgetPath, sibling_index: number): number
    copy(): WidgetPath
    free(): void
    get_object_type(): number
    has_parent(type: number): boolean
    is_type(type: number): boolean
    iter_add_class(pos: number, name: string): void
    iter_add_region(pos: number, name: string, flags: RegionFlags): void
    iter_clear_classes(pos: number): void
    iter_clear_regions(pos: number): void
    iter_get_name(pos: number): string | null
    iter_get_object_name(pos: number): string | null
    iter_get_object_type(pos: number): number
    iter_get_sibling_index(pos: number): number
    iter_get_siblings(pos: number): WidgetPath
    iter_get_state(pos: number): StateFlags
    iter_has_class(pos: number, name: string): boolean
    iter_has_name(pos: number, name: string): boolean
    iter_has_qclass(pos: number, qname: GLib.Quark): boolean
    iter_has_qname(pos: number, qname: GLib.Quark): boolean
    iter_has_qregion(pos: number, qname: GLib.Quark): [ /* returnType */ boolean, /* flags */ RegionFlags ]
    iter_has_region(pos: number, name: string): [ /* returnType */ boolean, /* flags */ RegionFlags ]
    iter_list_classes(pos: number): GLib.SList
    iter_list_regions(pos: number): GLib.SList
    iter_remove_class(pos: number, name: string): void
    iter_remove_region(pos: number, name: string): void
    iter_set_name(pos: number, name: string): void
    iter_set_object_name(pos: number, name?: string | null): void
    iter_set_object_type(pos: number, type: number): void
    iter_set_state(pos: number, state: StateFlags): void
    length(): number
    prepend_type(type: number): void
    ref(): WidgetPath
    to_string(): string
    unref(): void
    static name: string
    static new(): WidgetPath
    constructor()
}
export class WidgetPrivate {
    static name: string
}
export class WindowAccessiblePrivate {
    static name: string
}
export class WindowGeometryInfo {
    static name: string
}
export class WindowGroupPrivate {
    static name: string
}
export class WindowPrivate {
    static name: string
}
type Allocation = Gdk.Rectangle
type Stock = string