/**
 * WebKit-3.0
 */

import * as Soup from './Soup'
import * as Gio from './Gio'
import * as GObject from './GObject'
import * as GLib from './GLib'
import * as JavaScriptCore from './JavaScriptCore'
import * as Gtk from './Gtk'
import * as xlib from './xlib'
import * as Gdk from './Gdk'
import * as cairo from './cairo'
import * as Pango from './Pango'
import * as GdkPixbuf from './GdkPixbuf'
import * as GModule from './GModule'
import * as Atk from './Atk'
export enum CacheModel {
    DEFAULT,
    DOCUMENT_VIEWER,
    WEB_BROWSER,
    DOCUMENT_BROWSER,
}
export enum ContextMenuAction {
    NO_ACTION,
    OPEN_LINK,
    OPEN_LINK_IN_NEW_WINDOW,
    DOWNLOAD_LINK_TO_DISK,
    COPY_LINK_TO_CLIPBOARD,
    OPEN_IMAGE_IN_NEW_WINDOW,
    DOWNLOAD_IMAGE_TO_DISK,
    COPY_IMAGE_TO_CLIPBOARD,
    COPY_IMAGE_URL_TO_CLIPBOARD,
    OPEN_FRAME_IN_NEW_WINDOW,
    GO_BACK,
    GO_FORWARD,
    STOP,
    RELOAD,
    COPY,
    CUT,
    PASTE,
    DELETE,
    SELECT_ALL,
    INPUT_METHODS,
    UNICODE,
    SPELLING_GUESS,
    NO_GUESSES_FOUND,
    IGNORE_SPELLING,
    LEARN_SPELLING,
    IGNORE_GRAMMAR,
    FONT_MENU,
    BOLD,
    ITALIC,
    UNDERLINE,
    OUTLINE,
    INSPECT_ELEMENT,
    OPEN_MEDIA_IN_NEW_WINDOW,
    COPY_MEDIA_LINK_TO_CLIPBOARD,
    TOGGLE_MEDIA_CONTROLS,
    TOGGLE_MEDIA_LOOP,
    ENTER_VIDEO_FULLSCREEN,
    MEDIA_PLAY_PAUSE,
    MEDIA_MUTE,
}
export enum DownloadError {
    CANCELLED_BY_USER,
    DESTINATION,
    NETWORK,
}
export enum DownloadStatus {
    ERROR,
    CREATED,
    STARTED,
    CANCELLED,
    FINISHED,
}
export enum EditingBehavior {
    MAC,
    WINDOWS,
    UNIX,
}
export enum InsertAction {
    TYPED,
    PASTED,
    DROPPED,
}
export enum LoadStatus {
    PROVISIONAL,
    COMMITTED,
    FINISHED,
    FIRST_VISUALLY_NON_EMPTY_LAYOUT,
    FAILED,
}
export enum NavigationResponse {
    ACCEPT,
    IGNORE,
    DOWNLOAD,
}
export enum NetworkError {
    FAILED,
    TRANSPORT,
    UNKNOWN_PROTOCOL,
    CANCELLED,
    FILE_DOES_NOT_EXIST,
}
export enum PluginError {
    FAILED,
    CANNOT_FIND_PLUGIN,
    CANNOT_LOAD_PLUGIN,
    JAVA_UNAVAILABLE,
    CONNECTION_CANCELLED,
    WILL_HANDLE_LOAD,
}
export enum PolicyError {
    FAILED,
    CANNOT_SHOW_MIME_TYPE,
    CANNOT_SHOW_URL,
    FRAME_LOAD_INTERRUPTED_BY_POLICY_CHANGE,
    CANNOT_USE_RESTRICTED_PORT,
}
export enum SelectionAffinity {
    UPSTREAM,
    DOWNSTREAM,
}
export enum WebNavigationReason {
    LINK_CLICKED,
    FORM_SUBMITTED,
    BACK_FORWARD,
    RELOAD,
    FORM_RESUBMITTED,
    OTHER,
}
export enum WebViewTargetInfo {
    HTML,
    TEXT,
    IMAGE,
    URI_LIST,
    NETSCAPE_URL,
}
export enum WebViewViewMode {
    WINDOWED,
    FLOATING,
    FULLSCREEN,
    MAXIMIZED,
    MINIMIZED,
}
export enum HitTestResultContext {
    DOCUMENT,
    LINK,
    IMAGE,
    MEDIA,
    SELECTION,
    EDITABLE,
}
export enum SecurityPolicy {
    LOCAL,
    NO_ACCESS_TO_OTHER_SCHEME,
    DISPLAY_ISOLATED,
    SECURE,
    CORS_ENABLED,
    EMPTY_DOCUMENT,
}
export const MAJOR_VERSION:number
export const MICRO_VERSION:number
export const MINOR_VERSION:number
export const USER_AGENT_MAJOR_VERSION:number
export const USER_AGENT_MINOR_VERSION:number
export function application_cache_get_database_directory_path(): string
export function check_version(major: number, minor: number, micro: number): boolean
export function context_menu_item_get_action(item: Gtk.MenuItem): ContextMenuAction
export function geolocation_policy_allow(decision: GeolocationPolicyDecision): void
export function geolocation_policy_deny(decision: GeolocationPolicyDecision): void
export function get_cache_model(): CacheModel
export function get_default_session(): Soup.Session
export function get_default_web_database_quota(): number
export function get_favicon_database(): FaviconDatabase
export function get_icon_database(): IconDatabase
export function get_security_policy_for_uri_scheme(scheme: string): SecurityPolicy
export function get_text_checker(): GObject.Object
export function get_web_database_directory_path(): string
export function get_web_plugin_database(): WebPluginDatabase
export function major_version(): number
export function micro_version(): number
export function minor_version(): number
export function network_error_quark(): GLib.Quark
export function plugin_error_quark(): GLib.Quark
export function policy_error_quark(): GLib.Quark
export function remove_all_web_databases(): void
export function set_cache_model(cache_model: CacheModel): void
export function set_default_web_database_quota(defaultQuota: number): void
export function set_security_policy_for_uri_scheme(scheme: string, policy: SecurityPolicy): void
export function set_text_checker(checker: GObject.Object): void
export function set_web_database_directory_path(path: string): void
export interface DOMEventTarget {
    /* Methods of WebKit.DOMEventTarget */
    add_event_listener(event_name: string, handler: GObject.Callback, use_capture: boolean, user_data: object): boolean
    add_event_listener_with_closure(event_name: string, handler: GObject.Closure, use_capture: boolean): boolean
    dispatch_event(event: DOMEvent): boolean
    remove_event_listener(event_name: string, handler: GObject.Callback, use_capture: boolean): boolean
    remove_event_listener_with_closure(event_name: string, handler: GObject.Closure, use_capture: boolean): boolean
    /* Virtual methods of WebKit.DOMEventTarget */
    vfunc_add_event_listener(event_name: string, handler: GObject.Closure, use_capture: boolean): boolean
    vfunc_dispatch_event(event: DOMEvent): boolean
    vfunc_remove_event_listener(event_name: string, handler: GObject.Closure, use_capture: boolean): boolean
}
export interface DOMEventTarget_Static {
}
export declare var DOMEventTarget: DOMEventTarget_Static
export interface SpellChecker {
    /* Methods of WebKit.SpellChecker */
    check_spelling_of_string(string: string): [ /* misspelling_location */ number | null, /* misspelling_length */ number | null ]
    get_autocorrect_suggestions_for_misspelled_word(word: string): string
    get_guesses_for_word(word: string, context: string | null): string[]
    ignore_word(word: string): void
    learn_word(word: string): void
    update_spell_checking_languages(languages: string | null): void
    /* Virtual methods of WebKit.SpellChecker */
    vfunc_check_spelling_of_string(string: string): [ /* misspelling_location */ number | null, /* misspelling_length */ number | null ]
    vfunc_get_autocorrect_suggestions_for_misspelled_word(word: string): string
    vfunc_get_guesses_for_word(word: string, context: string | null): string[]
    vfunc_ignore_word(word: string): void
    vfunc_learn_word(word: string): void
    vfunc_update_spell_checking_languages(languages: string | null): void
}
export interface SpellChecker_Static {
}
export declare var SpellChecker: SpellChecker_Static
export interface DOMAttr_ConstructProps {
    /* Properties of WebKit.DOMAttr */
    value?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMAttr {
    /* Properties of WebKit.DOMAttr */
    readonly is_id:boolean
    readonly name:string
    readonly owner_element:DOMElement
    readonly specified:boolean
    value:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMAttr */
    get_is_id(): boolean
    get_name(): string
    get_owner_element(): DOMElement
    get_specified(): boolean
    get_value(): string
    set_value(value: string): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::specified", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMAttr_Static {
    new (config: DOMAttr_ConstructProps): DOMAttr
}
export declare var DOMAttr: DOMAttr_Static
export interface DOMAudioTrack_ConstructProps {
    /* Properties of WebKit.DOMAudioTrack */
    enabled?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMAudioTrack {
    /* Properties of WebKit.DOMAudioTrack */
    enabled:boolean
    readonly id:string
    readonly kind:string
    readonly label:string
    readonly language:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMAudioTrack */
    get_enabled(): boolean
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    set_enabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::kind", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMAudioTrack_Static {
    new (config: DOMAudioTrack_ConstructProps): DOMAudioTrack
}
export declare var DOMAudioTrack: DOMAudioTrack_Static
export interface DOMAudioTrackList_ConstructProps {
    /* Properties of WebKit.DOMAudioTrackList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMAudioTrackList {
    /* Properties of WebKit.DOMAudioTrackList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMAudioTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMAudioTrack
    item(index: number): DOMAudioTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMAudioTrackList_Static {
    new (config: DOMAudioTrackList_ConstructProps): DOMAudioTrackList
}
export declare var DOMAudioTrackList: DOMAudioTrackList_Static
export interface DOMBarInfo_ConstructProps {
    /* Properties of WebKit.DOMBarInfo */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMBarInfo {
    /* Properties of WebKit.DOMBarInfo */
    readonly visible:boolean
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMBarInfo_Static {
    new (config: DOMBarInfo_ConstructProps): DOMBarInfo
}
export declare class DOMBarInfo_Static {
    get_visible(self: object): boolean
}
export declare var DOMBarInfo: DOMBarInfo_Static
export interface DOMBarProp_ConstructProps {
    /* Properties of WebKit.DOMBarProp */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMBarProp {
    /* Properties of WebKit.DOMBarProp */
    readonly visible:boolean
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMBarProp */
    get_visible(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMBarProp_Static {
    new (config: DOMBarProp_ConstructProps): DOMBarProp
}
export declare var DOMBarProp: DOMBarProp_Static
export interface DOMBatteryManager_ConstructProps {
    /* Properties of WebKit.DOMBatteryManager */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMBatteryManager {
    /* Properties of WebKit.DOMBatteryManager */
    readonly charging:boolean
    readonly charging_time:number
    readonly discharging_time:number
    readonly level:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMBatteryManager */
    dispatch_event(event: DOMEvent): boolean
    get_charging(): boolean
    get_charging_time(): number
    get_discharging_time(): number
    get_level(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charging", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charging-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::discharging-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::level", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMBatteryManager_Static {
    new (config: DOMBatteryManager_ConstructProps): DOMBatteryManager
}
export declare var DOMBatteryManager: DOMBatteryManager_Static
export interface DOMBlob_ConstructProps {
    /* Properties of WebKit.DOMBlob */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMBlob {
    /* Properties of WebKit.DOMBlob */
    readonly size:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMBlob */
    get_size(): number
    slice(start: number, end: number, contentType: string): DOMBlob
    webkit_slice(start: number, end: number, content_type: string): DOMBlob
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMBlob_Static {
    new (config: DOMBlob_ConstructProps): DOMBlob
}
export declare var DOMBlob: DOMBlob_Static
export interface DOMCDATASection_ConstructProps {
    /* Properties of WebKit.DOMText */
    /* Properties of WebKit.DOMCharacterData */
    data?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCDATASection {
    /* Properties of WebKit.DOMText */
    readonly whole_text:string
    /* Properties of WebKit.DOMCharacterData */
    data:string
    readonly length:number
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMText */
    get_whole_text(): string
    replace_whole_text(content: string): DOMText
    split_text(offset: number): DOMText
    /* Methods of WebKit.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::whole-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCDATASection_Static {
    new (config: DOMCDATASection_ConstructProps): DOMCDATASection
}
export declare var DOMCDATASection: DOMCDATASection_Static
export interface DOMCSSRule_ConstructProps {
    /* Properties of WebKit.DOMCSSRule */
    css_text?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCSSRule {
    /* Properties of WebKit.DOMCSSRule */
    css_text:string
    readonly parent_rule:DOMCSSRule
    readonly parent_style_sheet:DOMCSSStyleSheet
    readonly type:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCSSRule */
    get_css_text(): string
    get_parent_rule(): DOMCSSRule
    get_parent_style_sheet(): DOMCSSStyleSheet
    set_css_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-rule", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-style-sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCSSRule_Static {
    new (config: DOMCSSRule_ConstructProps): DOMCSSRule
}
export declare var DOMCSSRule: DOMCSSRule_Static
export interface DOMCSSRuleList_ConstructProps {
    /* Properties of WebKit.DOMCSSRuleList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCSSRuleList {
    /* Properties of WebKit.DOMCSSRuleList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCSSRuleList */
    get_length(): number
    item(index: number): DOMCSSRule
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCSSRuleList_Static {
    new (config: DOMCSSRuleList_ConstructProps): DOMCSSRuleList
}
export declare var DOMCSSRuleList: DOMCSSRuleList_Static
export interface DOMCSSStyleDeclaration_ConstructProps {
    /* Properties of WebKit.DOMCSSStyleDeclaration */
    css_text?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCSSStyleDeclaration {
    /* Properties of WebKit.DOMCSSStyleDeclaration */
    css_text:string
    readonly length:number
    readonly parent_rule:DOMCSSRule
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCSSStyleDeclaration */
    get_css_text(): string
    get_length(): number
    get_parent_rule(): DOMCSSRule
    get_property_css_value(propertyName: string): DOMCSSValue
    get_property_priority(propertyName: string): string
    get_property_shorthand(propertyName: string): string
    get_property_value(propertyName: string): string
    is_property_implicit(propertyName: string): boolean
    item(index: number): string
    remove_property(propertyName: string): string
    set_css_text(value: string): void
    set_property(propertyName: string, value: string, priority: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-rule", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCSSStyleDeclaration_Static {
    new (config: DOMCSSStyleDeclaration_ConstructProps): DOMCSSStyleDeclaration
}
export declare var DOMCSSStyleDeclaration: DOMCSSStyleDeclaration_Static
export interface DOMCSSStyleSheet_ConstructProps {
    /* Properties of WebKit.DOMCSSStyleSheet */
    /* Properties of WebKit.DOMStyleSheet */
    disabled?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCSSStyleSheet {
    /* Properties of WebKit.DOMCSSStyleSheet */
    readonly css_rules:DOMCSSRuleList
    readonly owner_rule:DOMCSSRule
    readonly rules:DOMCSSRuleList
    /* Properties of WebKit.DOMStyleSheet */
    disabled:boolean
    readonly href:string
    readonly media:DOMMediaList
    readonly owner_node:DOMNode
    readonly parent_style_sheet:DOMStyleSheet
    readonly title:string
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCSSStyleSheet */
    add_rule(selector: string, style: string, index: number): number
    delete_rule(index: number): void
    get_css_rules(): DOMCSSRuleList
    get_owner_rule(): DOMCSSRule
    get_rules(): DOMCSSRuleList
    insert_rule(rule: string, index: number): number
    remove_rule(index: number): void
    /* Methods of WebKit.DOMStyleSheet */
    get_disabled(): boolean
    get_href(): string
    get_media(): DOMMediaList
    get_owner_node(): DOMNode
    get_parent_style_sheet(): DOMStyleSheet
    get_title(): string
    set_disabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css-rules", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-rule", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rules", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-style-sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCSSStyleSheet_Static {
    new (config: DOMCSSStyleSheet_ConstructProps): DOMCSSStyleSheet
}
export declare var DOMCSSStyleSheet: DOMCSSStyleSheet_Static
export interface DOMCSSValue_ConstructProps {
    /* Properties of WebKit.DOMCSSValue */
    css_text?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCSSValue {
    /* Properties of WebKit.DOMCSSValue */
    css_text:string
    readonly css_value_type:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCSSValue */
    get_css_text(): string
    get_css_value_type(): number
    set_css_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css-value-type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCSSValue_Static {
    new (config: DOMCSSValue_ConstructProps): DOMCSSValue
}
export declare var DOMCSSValue: DOMCSSValue_Static
export interface DOMCharacterData_ConstructProps {
    /* Properties of WebKit.DOMCharacterData */
    data?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMCharacterData {
    /* Properties of WebKit.DOMCharacterData */
    data:string
    readonly length:number
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMCharacterData_Static {
    new (config: DOMCharacterData_ConstructProps): DOMCharacterData
}
export declare var DOMCharacterData: DOMCharacterData_Static
export interface DOMComment_ConstructProps {
    /* Properties of WebKit.DOMCharacterData */
    data?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMComment {
    /* Properties of WebKit.DOMCharacterData */
    data:string
    readonly length:number
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMComment_Static {
    new (config: DOMComment_ConstructProps): DOMComment
}
export declare var DOMComment: DOMComment_Static
export interface DOMConsole_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMConsole {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMConsole */
    get_memory(): object
    group_end(): void
    time(title: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMConsole_Static {
    new (config: DOMConsole_ConstructProps): DOMConsole
}
export declare var DOMConsole: DOMConsole_Static
export interface DOMDOMApplicationCache_ConstructProps {
    /* Properties of WebKit.DOMDOMApplicationCache */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMApplicationCache {
    /* Properties of WebKit.DOMDOMApplicationCache */
    readonly status:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMApplicationCache */
    abort(): void
    dispatch_event(evt: DOMEvent): boolean
    get_status(): number
    swap_cache(): void
    update(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::status", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMApplicationCache_Static {
    new (config: DOMDOMApplicationCache_ConstructProps): DOMDOMApplicationCache
}
export declare var DOMDOMApplicationCache: DOMDOMApplicationCache_Static
export interface DOMDOMImplementation_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMImplementation {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMImplementation */
    create_css_style_sheet(title: string, media: string): DOMCSSStyleSheet
    create_document(namespaceURI: string | null, qualifiedName: string, doctype: DOMDocumentType | null): DOMDocument
    create_document_type(qualifiedName: string, publicId: string, systemId: string): DOMDocumentType
    create_html_document(title: string): DOMHTMLDocument
    has_feature(feature: string, version: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMImplementation_Static {
    new (config: DOMDOMImplementation_ConstructProps): DOMDOMImplementation
}
export declare var DOMDOMImplementation: DOMDOMImplementation_Static
export interface DOMDOMMimeType_ConstructProps {
    /* Properties of WebKit.DOMDOMMimeType */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMMimeType {
    /* Properties of WebKit.DOMDOMMimeType */
    readonly description:string
    readonly enabled_plugin:DOMDOMPlugin
    readonly suffixes:string
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMMimeType */
    get_description(): string
    get_enabled_plugin(): DOMDOMPlugin
    get_suffixes(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::description", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enabled-plugin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::suffixes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMMimeType_Static {
    new (config: DOMDOMMimeType_ConstructProps): DOMDOMMimeType
}
export declare var DOMDOMMimeType: DOMDOMMimeType_Static
export interface DOMDOMMimeTypeArray_ConstructProps {
    /* Properties of WebKit.DOMDOMMimeTypeArray */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMMimeTypeArray {
    /* Properties of WebKit.DOMDOMMimeTypeArray */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMMimeTypeArray */
    get_length(): number
    item(index: number): DOMDOMMimeType
    named_item(name: string): DOMDOMMimeType
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMMimeTypeArray_Static {
    new (config: DOMDOMMimeTypeArray_ConstructProps): DOMDOMMimeTypeArray
}
export declare var DOMDOMMimeTypeArray: DOMDOMMimeTypeArray_Static
export interface DOMDOMNamedFlowCollection_ConstructProps {
    /* Properties of WebKit.DOMDOMNamedFlowCollection */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMNamedFlowCollection {
    /* Properties of WebKit.DOMDOMNamedFlowCollection */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMNamedFlowCollection */
    get_length(): number
    item(index: number): DOMWebKitNamedFlow
    named_item(name: string): DOMWebKitNamedFlow
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMNamedFlowCollection_Static {
    new (config: DOMDOMNamedFlowCollection_ConstructProps): DOMDOMNamedFlowCollection
}
export declare var DOMDOMNamedFlowCollection: DOMDOMNamedFlowCollection_Static
export interface DOMDOMPlugin_ConstructProps {
    /* Properties of WebKit.DOMDOMPlugin */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMPlugin {
    /* Properties of WebKit.DOMDOMPlugin */
    readonly description:string
    readonly filename:string
    readonly length:number
    readonly name:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMPlugin */
    get_description(): string
    get_filename(): string
    get_length(): number
    get_name(): string
    item(index: number): DOMDOMMimeType
    named_item(name: string): DOMDOMMimeType
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::description", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filename", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMPlugin_Static {
    new (config: DOMDOMPlugin_ConstructProps): DOMDOMPlugin
}
export declare var DOMDOMPlugin: DOMDOMPlugin_Static
export interface DOMDOMPluginArray_ConstructProps {
    /* Properties of WebKit.DOMDOMPluginArray */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMPluginArray {
    /* Properties of WebKit.DOMDOMPluginArray */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMPluginArray */
    get_length(): number
    item(index: number): DOMDOMPlugin
    named_item(name: string): DOMDOMPlugin
    refresh(reload: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMPluginArray_Static {
    new (config: DOMDOMPluginArray_ConstructProps): DOMDOMPluginArray
}
export declare var DOMDOMPluginArray: DOMDOMPluginArray_Static
export interface DOMDOMSecurityPolicy_ConstructProps {
    /* Properties of WebKit.DOMDOMSecurityPolicy */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMSecurityPolicy {
    /* Properties of WebKit.DOMDOMSecurityPolicy */
    readonly allows_eval:boolean
    readonly allows_inline_script:boolean
    readonly allows_inline_style:boolean
    readonly is_active:boolean
    readonly report_ur_is:DOMDOMStringList
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMSecurityPolicy */
    allows_connection_to(url: string): boolean
    allows_font_from(url: string): boolean
    allows_form_action(url: string): boolean
    allows_frame_from(url: string): boolean
    allows_image_from(url: string): boolean
    allows_media_from(url: string): boolean
    allows_object_from(url: string): boolean
    allows_plugin_type(type: string): boolean
    allows_script_from(url: string): boolean
    allows_style_from(url: string): boolean
    get_allows_eval(): boolean
    get_allows_inline_script(): boolean
    get_allows_inline_style(): boolean
    get_is_active(): boolean
    get_report_ur_is(): DOMDOMStringList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::allows-eval", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::allows-inline-script", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::allows-inline-style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-active", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::report-ur-is", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMSecurityPolicy_Static {
    new (config: DOMDOMSecurityPolicy_ConstructProps): DOMDOMSecurityPolicy
}
export declare var DOMDOMSecurityPolicy: DOMDOMSecurityPolicy_Static
export interface DOMDOMSelection_ConstructProps {
    /* Properties of WebKit.DOMDOMSelection */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMSelection {
    /* Properties of WebKit.DOMDOMSelection */
    readonly anchor_node:DOMNode
    readonly anchor_offset:number
    readonly base_node:DOMNode
    readonly base_offset:number
    readonly extent_node:DOMNode
    readonly extent_offset:number
    readonly focus_node:DOMNode
    readonly focus_offset:number
    readonly is_collapsed:boolean
    readonly range_count:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMSelection */
    add_range(range: DOMRange): void
    collapse(node: DOMNode, index: number): void
    collapse_to_end(): void
    collapse_to_start(): void
    contains_node(node: DOMNode, allowPartial: boolean): boolean
    delete_from_document(): void
    empty(): void
    extend(node: DOMNode, offset: number): void
    get_anchor_node(): DOMNode
    get_anchor_offset(): number
    get_base_node(): DOMNode
    get_base_offset(): number
    get_extent_node(): DOMNode
    get_extent_offset(): number
    get_focus_node(): DOMNode
    get_focus_offset(): number
    get_is_collapsed(): boolean
    get_range_at(index: number): DOMRange
    get_range_count(): number
    modify(alter: string, direction: string, granularity: string): void
    remove_all_ranges(): void
    select_all_children(node: DOMNode): void
    set_base_and_extent(baseNode: DOMNode, baseOffset: number, extentNode: DOMNode, extentOffset: number): void
    set_position(node: DOMNode, offset: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::anchor-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::anchor-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::extent-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::focus-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-collapsed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::range-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMSelection_Static {
    new (config: DOMDOMSelection_ConstructProps): DOMDOMSelection
}
export declare var DOMDOMSelection: DOMDOMSelection_Static
export interface DOMDOMSettableTokenList_ConstructProps {
    /* Properties of WebKit.DOMDOMSettableTokenList */
    value?:string
    /* Properties of WebKit.DOMDOMTokenList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMSettableTokenList {
    /* Properties of WebKit.DOMDOMSettableTokenList */
    value:string
    /* Properties of WebKit.DOMDOMTokenList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMSettableTokenList */
    get_value(): string
    set_value(value: string): void
    /* Methods of WebKit.DOMDOMTokenList */
    add(tokens: string): void
    contains(token: string): boolean
    get_length(): number
    item(index: number): string
    remove(tokens: string): void
    toggle(token: string, force: boolean): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMSettableTokenList_Static {
    new (config: DOMDOMSettableTokenList_ConstructProps): DOMDOMSettableTokenList
}
export declare var DOMDOMSettableTokenList: DOMDOMSettableTokenList_Static
export interface DOMDOMStringList_ConstructProps {
    /* Properties of WebKit.DOMDOMStringList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMStringList {
    /* Properties of WebKit.DOMDOMStringList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMStringList */
    contains(string: string): boolean
    get_length(): number
    item(index: number): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMStringList_Static {
    new (config: DOMDOMStringList_ConstructProps): DOMDOMStringList
}
export declare var DOMDOMStringList: DOMDOMStringList_Static
export interface DOMDOMStringMap_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMStringMap {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMStringMap_Static {
    new (config: DOMDOMStringMap_ConstructProps): DOMDOMStringMap
}
export declare var DOMDOMStringMap: DOMDOMStringMap_Static
export interface DOMDOMTokenList_ConstructProps {
    /* Properties of WebKit.DOMDOMTokenList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMTokenList {
    /* Properties of WebKit.DOMDOMTokenList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMTokenList */
    add(tokens: string): void
    contains(token: string): boolean
    get_length(): number
    item(index: number): string
    remove(tokens: string): void
    toggle(token: string, force: boolean): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMTokenList_Static {
    new (config: DOMDOMTokenList_ConstructProps): DOMDOMTokenList
}
export declare var DOMDOMTokenList: DOMDOMTokenList_Static
export interface DOMDOMWindow_ConstructProps {
    /* Properties of WebKit.DOMDOMWindow */
    default_status?:string
    name?:string
    status?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMWindow {
    /* Properties of WebKit.DOMDOMWindow */
    readonly application_cache:DOMDOMApplicationCache
    readonly client_information:DOMNavigator
    readonly closed:boolean
    readonly console:DOMConsole
    readonly css:DOMDOMWindowCSS
    default_status:string
    readonly device_pixel_ratio:number
    readonly document:DOMDocument
    readonly frame_element:DOMElement
    readonly frames:DOMDOMWindow
    readonly history:DOMHistory
    readonly inner_height:number
    readonly inner_width:number
    readonly length:number
    readonly local_storage:DOMStorage
    readonly locationbar:DOMBarProp
    readonly menubar:DOMBarProp
    name:string
    readonly navigator:DOMNavigator
    readonly offscreen_buffering:boolean
    readonly opener:DOMDOMWindow
    readonly outer_height:number
    readonly outer_width:number
    readonly page_x_offset:number
    readonly page_y_offset:number
    readonly parent:DOMDOMWindow
    readonly performance:DOMPerformance
    readonly personalbar:DOMBarProp
    readonly screen:DOMScreen
    readonly screen_left:number
    readonly screen_top:number
    readonly screen_x:number
    readonly screen_y:number
    readonly scroll_x:number
    readonly scroll_y:number
    readonly scrollbars:DOMBarProp
    readonly self:DOMDOMWindow
    readonly session_storage:DOMStorage
    status:string
    readonly statusbar:DOMBarProp
    readonly style_media:DOMStyleMedia
    readonly toolbar:DOMBarProp
    readonly top:DOMDOMWindow
    readonly webkit_storage_info:DOMStorageInfo
    readonly window:DOMDOMWindow
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMWindow */
    alert(message: string): void
    atob(string: string): string
    blur(): void
    btoa(string: string): string
    cancel_animation_frame(id: number): void
    capture_events(): void
    clear_interval(handle: number): void
    clear_timeout(handle: number): void
    close(): void
    confirm(message: string): boolean
    dispatch_event(evt: DOMEvent): boolean
    find(string: string, caseSensitive: boolean, backwards: boolean, wrap: boolean, wholeWord: boolean, searchInFrames: boolean, showDialog: boolean): boolean
    focus(): void
    get_application_cache(): DOMDOMApplicationCache
    get_client_information(): DOMNavigator
    get_closed(): boolean
    get_computed_style(element: DOMElement, pseudoElement: string | null): DOMCSSStyleDeclaration
    get_console(): DOMConsole
    get_css(): DOMDOMWindowCSS
    get_default_status(): string
    get_device_pixel_ratio(): number
    get_document(): DOMDocument
    get_frame_element(): DOMElement
    get_frames(): DOMDOMWindow
    get_history(): DOMHistory
    get_inner_height(): number
    get_inner_width(): number
    get_length(): number
    get_local_storage(): DOMStorage
    get_locationbar(): DOMBarProp
    get_menubar(): DOMBarProp
    get_name(): string
    get_navigator(): DOMNavigator
    get_offscreen_buffering(): boolean
    get_opener(): DOMDOMWindow
    get_outer_height(): number
    get_outer_width(): number
    get_page_x_offset(): number
    get_page_y_offset(): number
    get_parent(): DOMDOMWindow
    get_performance(): DOMPerformance
    get_personalbar(): DOMBarProp
    get_screen(): DOMScreen
    get_screen_left(): number
    get_screen_top(): number
    get_screen_x(): number
    get_screen_y(): number
    get_scroll_x(): number
    get_scroll_y(): number
    get_scrollbars(): DOMBarProp
    get_selection(): DOMDOMSelection
    get_self(): DOMDOMWindow
    get_session_storage(): DOMStorage
    get_status(): string
    get_statusbar(): DOMBarProp
    get_style_media(): DOMStyleMedia
    get_toolbar(): DOMBarProp
    get_top(): DOMDOMWindow
    get_webkit_storage_info(): DOMStorageInfo
    get_window(): DOMDOMWindow
    match_media(query: string): DOMMediaQueryList
    move_by(x: number, y: number): void
    move_to(x: number, y: number): void
    print(): void
    prompt(message: string, defaultValue: string): string
    release_events(): void
    resize_by(x: number, y: number): void
    resize_to(width: number, height: number): void
    scroll(x: number, y: number): void
    scroll_by(x: number, y: number): void
    scroll_to(x: number, y: number): void
    set_default_status(value: string): void
    set_name(value: string): void
    set_status(value: string): void
    stop(): void
    webkit_cancel_animation_frame(id: number): void
    webkit_cancel_request_animation_frame(id: number): void
    webkit_convert_point_from_node_to_page(node: DOMNode, p: DOMWebKitPoint): DOMWebKitPoint
    webkit_convert_point_from_page_to_node(node: DOMNode, p: DOMWebKitPoint): DOMWebKitPoint
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::application-cache", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-information", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::closed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::console", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::css", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-status", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::device-pixel-ratio", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frame-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frames", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::history", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-storage", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::locationbar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menubar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::navigator", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offscreen-buffering", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opener", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::performance", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::personalbar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scrollbars", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::self", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::session-storage", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::status", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::statusbar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-media", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::toolbar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-storage-info", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMWindow_Static {
    new (config: DOMDOMWindow_ConstructProps): DOMDOMWindow
}
export declare var DOMDOMWindow: DOMDOMWindow_Static
export interface DOMDOMWindowCSS_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDOMWindowCSS {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDOMWindowCSS */
    supports(property: string, value: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDOMWindowCSS_Static {
    new (config: DOMDOMWindowCSS_ConstructProps): DOMDOMWindowCSS
}
export declare var DOMDOMWindowCSS: DOMDOMWindowCSS_Static
export interface DOMDatabase_ConstructProps {
    /* Properties of WebKit.DOMDatabase */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDatabase {
    /* Properties of WebKit.DOMDatabase */
    readonly version:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDatabase */
    get_version(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::version", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDatabase_Static {
    new (config: DOMDatabase_ConstructProps): DOMDatabase
}
export declare var DOMDatabase: DOMDatabase_Static
export interface DOMDocument_ConstructProps {
    /* Properties of WebKit.DOMDocument */
    charset?:string
    cookie?:string
    document_uri?:string
    selected_stylesheet_set?:string
    title?:string
    xml_standalone?:boolean
    xml_version?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDocument {
    /* Properties of WebKit.DOMDocument */
    readonly anchors:DOMHTMLCollection
    readonly applets:DOMHTMLCollection
    readonly body:DOMHTMLElement
    readonly character_set:string
    charset:string
    readonly compat_mode:string
    cookie:string
    readonly current_script:DOMHTMLScriptElement
    readonly default_charset:string
    readonly default_view:DOMDOMWindow
    readonly doctype:DOMDocumentType
    readonly document_element:DOMElement
    document_uri:string
    readonly domain:string
    readonly forms:DOMHTMLCollection
    readonly head:DOMHTMLHeadElement
    readonly hidden:boolean
    readonly images:DOMHTMLCollection
    readonly implementation:DOMDOMImplementation
    readonly input_encoding:string
    readonly last_modified:string
    readonly links:DOMHTMLCollection
    readonly preferred_stylesheet_set:string
    readonly ready_state:string
    readonly referrer:string
    readonly security_policy:DOMDOMSecurityPolicy
    selected_stylesheet_set:string
    readonly style_sheets:DOMStyleSheetList
    title:string
    readonly url:string
    readonly visibility_state:string
    readonly webkit_current_full_screen_element:DOMElement
    readonly webkit_full_screen_keyboard_input_allowed:boolean
    readonly webkit_fullscreen_element:DOMElement
    readonly webkit_fullscreen_enabled:boolean
    readonly webkit_is_full_screen:boolean
    readonly webkit_pointer_lock_element:DOMElement
    readonly xml_encoding:string
    xml_standalone:boolean
    xml_version:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDocument */
    adopt_node(source: DOMNode): DOMNode
    caret_range_from_point(x: number, y: number): DOMRange
    create_attribute(name: string): DOMAttr
    create_attribute_ns(namespaceURI: string | null, qualifiedName: string): DOMAttr
    create_cdata_section(data: string): DOMCDATASection
    create_comment(data: string): DOMComment
    create_css_style_declaration(): DOMCSSStyleDeclaration
    create_document_fragment(): DOMDocumentFragment
    create_element(tagName: string): DOMElement
    create_element_ns(namespaceURI: string | null, qualifiedName: string): DOMElement
    create_entity_reference(name: string | null): DOMEntityReference
    create_event(eventType: string): DOMEvent
    create_expression(expression: string, resolver: DOMXPathNSResolver): DOMXPathExpression
    create_node_iterator(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMNodeIterator
    create_ns_resolver(nodeResolver: DOMNode): DOMXPathNSResolver
    create_processing_instruction(target: string, data: string): DOMProcessingInstruction
    create_range(): DOMRange
    create_text_node(data: string): DOMText
    create_touch(window: DOMDOMWindow, target: DOMEventTarget, identifier: number, pageX: number, pageY: number, screenX: number, screenY: number, webkitRadiusX: number, webkitRadiusY: number, webkitRotationAngle: number, webkitForce: number): DOMTouch
    create_tree_walker(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMTreeWalker
    element_from_point(x: number, y: number): DOMElement
    evaluate(expression: string, contextNode: DOMNode, resolver: DOMXPathNSResolver | null, type: number, inResult: DOMXPathResult | null): DOMXPathResult
    exec_command(command: string, userInterface: boolean, value: string): boolean
    get_anchors(): DOMHTMLCollection
    get_applets(): DOMHTMLCollection
    get_body(): DOMHTMLElement
    get_character_set(): string
    get_charset(): string
    get_compat_mode(): string
    get_cookie(): string
    get_current_script(): DOMHTMLScriptElement
    get_default_charset(): string
    get_default_view(): DOMDOMWindow
    get_doctype(): DOMDocumentType
    get_document_element(): DOMElement
    get_document_uri(): string
    get_domain(): string
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(tagname: string): DOMNodeList
    get_elements_by_name(elementName: string): DOMNodeList
    get_elements_by_tag_name(tagname: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_forms(): DOMHTMLCollection
    get_head(): DOMHTMLHeadElement
    get_hidden(): boolean
    get_images(): DOMHTMLCollection
    get_implementation(): DOMDOMImplementation
    get_input_encoding(): string
    get_last_modified(): string
    get_links(): DOMHTMLCollection
    get_override_style(element: DOMElement, pseudoElement: string | null): DOMCSSStyleDeclaration
    get_preferred_stylesheet_set(): string
    get_ready_state(): string
    get_referrer(): string
    get_security_policy(): DOMDOMSecurityPolicy
    get_selected_stylesheet_set(): string
    get_style_sheets(): DOMStyleSheetList
    get_title(): string
    get_url(): string
    get_visibility_state(): string
    get_webkit_current_full_screen_element(): DOMElement
    get_webkit_full_screen_keyboard_input_allowed(): boolean
    get_webkit_fullscreen_element(): DOMElement
    get_webkit_fullscreen_enabled(): boolean
    get_webkit_hidden(): boolean
    get_webkit_is_full_screen(): boolean
    get_webkit_pointer_lock_element(): DOMElement
    get_webkit_visibility_state(): string
    get_xml_encoding(): string
    get_xml_standalone(): boolean
    get_xml_version(): string
    import_node(importedNode: DOMNode, deep: boolean): DOMNode
    query_command_enabled(command: string): boolean
    query_command_indeterm(command: string): boolean
    query_command_state(command: string): boolean
    query_command_supported(command: string): boolean
    query_command_value(command: string): string
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    set_body(value: DOMHTMLElement): void
    set_charset(value: string): void
    set_cookie(value: string): void
    set_document_uri(value: string): void
    set_selected_stylesheet_set(value: string): void
    set_title(value: string): void
    set_xml_standalone(value: boolean): void
    set_xml_version(value: string): void
    webkit_cancel_full_screen(): void
    webkit_exit_fullscreen(): void
    webkit_exit_pointer_lock(): void
    webkit_get_named_flows(): DOMDOMNamedFlowCollection
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::anchors", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::applets", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::body", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::character-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compat-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cookie", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-script", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::doctype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::document-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::document-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::domain", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::forms", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::head", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::images", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::implementation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-modified", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::links", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preferred-stylesheet-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ready-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::referrer", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::security-policy", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-stylesheet-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-sheets", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::url", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visibility-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-current-full-screen-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-fullscreen-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-is-full-screen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-pointer-lock-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-standalone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-version", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDocument_Static {
    new (config: DOMDocument_ConstructProps): DOMDocument
}
export declare var DOMDocument: DOMDocument_Static
export interface DOMDocumentFragment_ConstructProps {
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDocumentFragment {
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDocumentFragment */
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDocumentFragment_Static {
    new (config: DOMDocumentFragment_ConstructProps): DOMDocumentFragment
}
export declare var DOMDocumentFragment: DOMDocumentFragment_Static
export interface DOMDocumentType_ConstructProps {
    /* Properties of WebKit.DOMDocumentType */
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMDocumentType {
    /* Properties of WebKit.DOMDocumentType */
    readonly entities:DOMNamedNodeMap
    readonly internal_subset:string
    readonly name:string
    readonly notations:DOMNamedNodeMap
    readonly public_id:string
    readonly system_id:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMDocumentType */
    get_entities(): DOMNamedNodeMap
    get_internal_subset(): string
    get_name(): string
    get_notations(): DOMNamedNodeMap
    get_public_id(): string
    get_system_id(): string
    remove(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::entities", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::internal-subset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::notations", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::public-id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::system-id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMDocumentType_Static {
    new (config: DOMDocumentType_ConstructProps): DOMDocumentType
}
export declare var DOMDocumentType: DOMDocumentType_Static
export interface DOMElement_ConstructProps {
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMElement {
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_id(): string
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_class_name(value: string): void
    set_id(value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMElement_Static {
    new (config: DOMElement_ConstructProps): DOMElement
}
export declare var DOMElement: DOMElement_Static
export interface DOMEntityReference_ConstructProps {
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMEntityReference {
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMEntityReference_Static {
    new (config: DOMEntityReference_ConstructProps): DOMEntityReference
}
export declare var DOMEntityReference: DOMEntityReference_Static
export interface DOMEvent_ConstructProps {
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMEvent {
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMEvent_Static {
    new (config: DOMEvent_ConstructProps): DOMEvent
}
export declare var DOMEvent: DOMEvent_Static
export interface DOMFile_ConstructProps {
    /* Properties of WebKit.DOMFile */
    /* Properties of WebKit.DOMBlob */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMFile {
    /* Properties of WebKit.DOMFile */
    readonly name:string
    readonly webkit_relative_path:string
    /* Properties of WebKit.DOMBlob */
    readonly size:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMFile */
    get_name(): string
    get_webkit_relative_path(): string
    /* Methods of WebKit.DOMBlob */
    get_size(): number
    slice(start: number, end: number, contentType: string): DOMBlob
    webkit_slice(start: number, end: number, content_type: string): DOMBlob
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-relative-path", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMFile_Static {
    new (config: DOMFile_ConstructProps): DOMFile
}
export declare var DOMFile: DOMFile_Static
export interface DOMFileList_ConstructProps {
    /* Properties of WebKit.DOMFileList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMFileList {
    /* Properties of WebKit.DOMFileList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMFileList */
    get_length(): number
    item(index: number): DOMFile
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMFileList_Static {
    new (config: DOMFileList_ConstructProps): DOMFileList
}
export declare var DOMFileList: DOMFileList_Static
export interface DOMGamepad_ConstructProps {
    /* Properties of WebKit.DOMGamepad */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMGamepad {
    /* Properties of WebKit.DOMGamepad */
    readonly id:string
    readonly index:number
    readonly timestamp:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMGamepad */
    get_id(): string
    get_index(): number
    get_timestamp(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::timestamp", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMGamepad_Static {
    new (config: DOMGamepad_ConstructProps): DOMGamepad
}
export declare var DOMGamepad: DOMGamepad_Static
export interface DOMGamepadList_ConstructProps {
    /* Properties of WebKit.DOMGamepadList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMGamepadList {
    /* Properties of WebKit.DOMGamepadList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMGamepadList */
    get_length(): number
    item(index: number): DOMGamepad
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMGamepadList_Static {
    new (config: DOMGamepadList_ConstructProps): DOMGamepadList
}
export declare var DOMGamepadList: DOMGamepadList_Static
export interface DOMGeolocation_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMGeolocation {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMGeolocation */
    clear_watch(watchID: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMGeolocation_Static {
    new (config: DOMGeolocation_ConstructProps): DOMGeolocation
}
export declare var DOMGeolocation: DOMGeolocation_Static
export interface DOMHTMLAnchorElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLAnchorElement */
    charset?:string
    coords?:string
    download?:string
    hash?:string
    host?:string
    hostname?:string
    href?:string
    hreflang?:string
    name?:string
    pathname?:string
    ping?:string
    port?:string
    protocol?:string
    rel?:string
    rev?:string
    search?:string
    shape?:string
    target?:string
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLAnchorElement {
    /* Properties of WebKit.DOMHTMLAnchorElement */
    charset:string
    coords:string
    download:string
    hash:string
    host:string
    hostname:string
    href:string
    hreflang:string
    name:string
    readonly origin:string
    pathname:string
    ping:string
    port:string
    protocol:string
    rel:string
    rev:string
    search:string
    shape:string
    target:string
    readonly text:string
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLAnchorElement */
    get_charset(): string
    get_coords(): string
    get_download(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_hreflang(): string
    get_name(): string
    get_origin(): string
    get_pathname(): string
    get_ping(): string
    get_port(): string
    get_protocol(): string
    get_rel(): string
    get_rev(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    get_text(): string
    set_charset(value: string): void
    set_coords(value: string): void
    set_download(value: string): void
    set_hash(value: string): void
    set_host(value: string): void
    set_hostname(value: string): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_name(value: string): void
    set_pathname(value: string): void
    set_ping(value: string): void
    set_port(value: string): void
    set_protocol(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_search(value: string): void
    set_shape(value: string): void
    set_target(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::coords", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::download", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hash", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::host", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hostname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hreflang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::origin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pathname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ping", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::port", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::protocol", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rel", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rev", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::search", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shape", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLAnchorElement_Static {
    new (config: DOMHTMLAnchorElement_ConstructProps): DOMHTMLAnchorElement
}
export declare var DOMHTMLAnchorElement: DOMHTMLAnchorElement_Static
export interface DOMHTMLAppletElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLAppletElement */
    align?:string
    alt?:string
    archive?:string
    code?:string
    code_base?:string
    height?:string
    hspace?:number
    name?:string
    object?:string
    vspace?:number
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLAppletElement {
    /* Properties of WebKit.DOMHTMLAppletElement */
    align:string
    alt:string
    archive:string
    code:string
    code_base:string
    height:string
    hspace:number
    name:string
    object:string
    vspace:number
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLAppletElement */
    get_align(): string
    get_alt(): string
    get_archive(): string
    get_code(): string
    get_code_base(): string
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_object(): string
    get_vspace(): number
    get_width(): string
    set_align(value: string): void
    set_alt(value: string): void
    set_archive(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_object(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::archive", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code-base", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::object", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLAppletElement_Static {
    new (config: DOMHTMLAppletElement_ConstructProps): DOMHTMLAppletElement
}
export declare var DOMHTMLAppletElement: DOMHTMLAppletElement_Static
export interface DOMHTMLAreaElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLAreaElement */
    alt?:string
    coords?:string
    href?:string
    no_href?:boolean
    ping?:string
    shape?:string
    target?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLAreaElement {
    /* Properties of WebKit.DOMHTMLAreaElement */
    alt:string
    coords:string
    readonly hash:string
    readonly host:string
    readonly hostname:string
    href:string
    no_href:boolean
    readonly pathname:string
    ping:string
    readonly port:string
    readonly protocol:string
    readonly search:string
    shape:string
    target:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLAreaElement */
    get_alt(): string
    get_coords(): string
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_no_href(): boolean
    get_pathname(): string
    get_ping(): string
    get_port(): string
    get_protocol(): string
    get_search(): string
    get_shape(): string
    get_target(): string
    set_alt(value: string): void
    set_coords(value: string): void
    set_href(value: string): void
    set_no_href(value: boolean): void
    set_ping(value: string): void
    set_shape(value: string): void
    set_target(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::coords", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hash", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::host", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hostname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pathname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ping", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::port", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::protocol", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::search", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shape", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLAreaElement_Static {
    new (config: DOMHTMLAreaElement_ConstructProps): DOMHTMLAreaElement
}
export declare var DOMHTMLAreaElement: DOMHTMLAreaElement_Static
export interface DOMHTMLAudioElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMediaElement */
    autoplay?:boolean
    controls?:boolean
    current_time?:number
    default_muted?:boolean
    default_playback_rate?:number
    loop?:boolean
    media_group?:string
    muted?:boolean
    playback_rate?:number
    preload?:string
    src?:string
    volume?:number
    webkit_closed_captions_visible?:boolean
    webkit_preserves_pitch?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLAudioElement {
    /* Properties of WebKit.DOMHTMLMediaElement */
    readonly audio_tracks:DOMAudioTrackList
    autoplay:boolean
    readonly buffered:DOMTimeRanges
    readonly controller:DOMMediaController
    controls:boolean
    readonly current_src:string
    current_time:number
    default_muted:boolean
    default_playback_rate:number
    readonly duration:number
    readonly ended:boolean
    readonly error:DOMMediaError
    loop:boolean
    media_group:string
    muted:boolean
    readonly network_state:number
    readonly paused:boolean
    playback_rate:number
    readonly played:DOMTimeRanges
    preload:string
    readonly ready_state:number
    readonly seekable:DOMTimeRanges
    readonly seeking:boolean
    src:string
    readonly text_tracks:DOMTextTrackList
    readonly video_tracks:DOMVideoTrackList
    volume:number
    readonly webkit_audio_decoded_byte_count:number
    webkit_closed_captions_visible:boolean
    readonly webkit_current_playback_target_is_wireless:boolean
    readonly webkit_has_closed_captions:boolean
    webkit_preserves_pitch:boolean
    readonly webkit_video_decoded_byte_count:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMediaElement */
    add_text_track(kind: string, label: string, language: string): DOMTextTrack
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_audio_tracks(): DOMAudioTrackList
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_text_tracks(): DOMTextTrackList
    get_video_tracks(): DOMVideoTrackList
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::audio-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autoplay", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffered", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controller", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controls", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::duration", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ended", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::error", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::loop", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-group", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::network-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paused", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::played", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preload", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ready-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seekable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seeking", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::video-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::volume", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-closed-captions-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-has-closed-captions", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-preserves-pitch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLAudioElement_Static {
    new (config: DOMHTMLAudioElement_ConstructProps): DOMHTMLAudioElement
}
export declare var DOMHTMLAudioElement: DOMHTMLAudioElement_Static
export interface DOMHTMLBRElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLBRElement */
    clear?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLBRElement {
    /* Properties of WebKit.DOMHTMLBRElement */
    clear:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLBRElement */
    get_clear(): string
    set_clear(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::clear", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLBRElement_Static {
    new (config: DOMHTMLBRElement_ConstructProps): DOMHTMLBRElement
}
export declare var DOMHTMLBRElement: DOMHTMLBRElement_Static
export interface DOMHTMLBaseElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLBaseElement */
    href?:string
    target?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLBaseElement {
    /* Properties of WebKit.DOMHTMLBaseElement */
    href:string
    target:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLBaseElement */
    get_href(): string
    get_target(): string
    set_href(value: string): void
    set_target(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLBaseElement_Static {
    new (config: DOMHTMLBaseElement_ConstructProps): DOMHTMLBaseElement
}
export declare var DOMHTMLBaseElement: DOMHTMLBaseElement_Static
export interface DOMHTMLBaseFontElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLBaseFontElement */
    color?:string
    face?:string
    size?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLBaseFontElement {
    /* Properties of WebKit.DOMHTMLBaseFontElement */
    color:string
    face:string
    size:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLBaseFontElement */
    get_color(): string
    get_face(): string
    get_size(): number
    set_color(value: string): void
    set_face(value: string): void
    set_size(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::face", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLBaseFontElement_Static {
    new (config: DOMHTMLBaseFontElement_ConstructProps): DOMHTMLBaseFontElement
}
export declare var DOMHTMLBaseFontElement: DOMHTMLBaseFontElement_Static
export interface DOMHTMLBodyElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLBodyElement */
    a_link?:string
    background?:string
    bg_color?:string
    link?:string
    text?:string
    v_link?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLBodyElement {
    /* Properties of WebKit.DOMHTMLBodyElement */
    a_link:string
    background:string
    bg_color:string
    link:string
    text:string
    v_link:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLBodyElement */
    get_a_link(): string
    get_background(): string
    get_bg_color(): string
    get_link(): string
    get_text(): string
    get_v_link(): string
    set_a_link(value: string): void
    set_background(value: string): void
    set_bg_color(value: string): void
    set_link(value: string): void
    set_text(value: string): void
    set_v_link(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::a-link", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::background", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::link", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::v-link", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLBodyElement_Static {
    new (config: DOMHTMLBodyElement_ConstructProps): DOMHTMLBodyElement
}
export declare var DOMHTMLBodyElement: DOMHTMLBodyElement_Static
export interface DOMHTMLButtonElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLButtonElement */
    autofocus?:boolean
    disabled?:boolean
    form_action?:string
    form_enctype?:string
    form_method?:string
    form_no_validate?:boolean
    form_target?:string
    name?:string
    type?:string
    value?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLButtonElement {
    /* Properties of WebKit.DOMHTMLButtonElement */
    autofocus:boolean
    disabled:boolean
    readonly form:DOMHTMLFormElement
    form_action:string
    form_enctype:string
    form_method:string
    form_no_validate:boolean
    form_target:string
    readonly labels:DOMNodeList
    name:string
    type:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    value:string
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLButtonElement */
    check_validity(): boolean
    get_autofocus(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_form_action(): string
    get_form_enctype(): string
    get_form_method(): string
    get_form_no_validate(): boolean
    get_form_target(): string
    get_labels(): DOMNodeList
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    set_autofocus(value: boolean): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_form_action(value: string): void
    set_form_enctype(value: string): void
    set_form_method(value: string): void
    set_form_no_validate(value: boolean): void
    set_form_target(value: string): void
    set_name(value: string): void
    set_value(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autofocus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-action", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-enctype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-method", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-no-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::labels", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLButtonElement_Static {
    new (config: DOMHTMLButtonElement_ConstructProps): DOMHTMLButtonElement
}
export declare var DOMHTMLButtonElement: DOMHTMLButtonElement_Static
export interface DOMHTMLCanvasElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLCanvasElement */
    height?:number
    width?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLCanvasElement {
    /* Properties of WebKit.DOMHTMLCanvasElement */
    height:number
    width:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLCanvasElement */
    get_height(): number
    get_width(): number
    set_height(value: number): void
    set_width(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLCanvasElement_Static {
    new (config: DOMHTMLCanvasElement_ConstructProps): DOMHTMLCanvasElement
}
export declare var DOMHTMLCanvasElement: DOMHTMLCanvasElement_Static
export interface DOMHTMLCollection_ConstructProps {
    /* Properties of WebKit.DOMHTMLCollection */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLCollection {
    /* Properties of WebKit.DOMHTMLCollection */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLCollection */
    get_length(): number
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLCollection_Static {
    new (config: DOMHTMLCollection_ConstructProps): DOMHTMLCollection
}
export declare var DOMHTMLCollection: DOMHTMLCollection_Static
export interface DOMHTMLDListElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLDListElement */
    compact?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLDListElement {
    /* Properties of WebKit.DOMHTMLDListElement */
    compact:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLDListElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compact", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLDListElement_Static {
    new (config: DOMHTMLDListElement_ConstructProps): DOMHTMLDListElement
}
export declare var DOMHTMLDListElement: DOMHTMLDListElement_Static
export interface DOMHTMLDetailsElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLDetailsElement */
    open?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLDetailsElement {
    /* Properties of WebKit.DOMHTMLDetailsElement */
    open:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLDetailsElement */
    get_open(): boolean
    set_open(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::open", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLDetailsElement_Static {
    new (config: DOMHTMLDetailsElement_ConstructProps): DOMHTMLDetailsElement
}
export declare var DOMHTMLDetailsElement: DOMHTMLDetailsElement_Static
export interface DOMHTMLDirectoryElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLDirectoryElement */
    compact?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLDirectoryElement {
    /* Properties of WebKit.DOMHTMLDirectoryElement */
    compact:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLDirectoryElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compact", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLDirectoryElement_Static {
    new (config: DOMHTMLDirectoryElement_ConstructProps): DOMHTMLDirectoryElement
}
export declare var DOMHTMLDirectoryElement: DOMHTMLDirectoryElement_Static
export interface DOMHTMLDivElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLDivElement */
    align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLDivElement {
    /* Properties of WebKit.DOMHTMLDivElement */
    align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLDivElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLDivElement_Static {
    new (config: DOMHTMLDivElement_ConstructProps): DOMHTMLDivElement
}
export declare var DOMHTMLDivElement: DOMHTMLDivElement_Static
export interface DOMHTMLDocument_ConstructProps {
    /* Properties of WebKit.DOMHTMLDocument */
    alink_color?:string
    bg_color?:string
    design_mode?:string
    dir?:string
    fg_color?:string
    link_color?:string
    vlink_color?:string
    /* Properties of WebKit.DOMDocument */
    charset?:string
    cookie?:string
    document_uri?:string
    selected_stylesheet_set?:string
    title?:string
    xml_standalone?:boolean
    xml_version?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLDocument {
    /* Properties of WebKit.DOMHTMLDocument */
    readonly active_element:DOMElement
    alink_color:string
    bg_color:string
    readonly compat_mode:string
    design_mode:string
    dir:string
    readonly embeds:DOMHTMLCollection
    fg_color:string
    readonly height:number
    link_color:string
    readonly plugins:DOMHTMLCollection
    readonly scripts:DOMHTMLCollection
    vlink_color:string
    readonly width:number
    /* Properties of WebKit.DOMDocument */
    readonly anchors:DOMHTMLCollection
    readonly applets:DOMHTMLCollection
    readonly body:DOMHTMLElement
    readonly character_set:string
    charset:string
    cookie:string
    readonly current_script:DOMHTMLScriptElement
    readonly default_charset:string
    readonly default_view:DOMDOMWindow
    readonly doctype:DOMDocumentType
    readonly document_element:DOMElement
    document_uri:string
    readonly domain:string
    readonly forms:DOMHTMLCollection
    readonly head:DOMHTMLHeadElement
    readonly hidden:boolean
    readonly images:DOMHTMLCollection
    readonly implementation:DOMDOMImplementation
    readonly input_encoding:string
    readonly last_modified:string
    readonly links:DOMHTMLCollection
    readonly preferred_stylesheet_set:string
    readonly ready_state:string
    readonly referrer:string
    readonly security_policy:DOMDOMSecurityPolicy
    selected_stylesheet_set:string
    readonly style_sheets:DOMStyleSheetList
    title:string
    readonly url:string
    readonly visibility_state:string
    readonly webkit_current_full_screen_element:DOMElement
    readonly webkit_full_screen_keyboard_input_allowed:boolean
    readonly webkit_fullscreen_element:DOMElement
    readonly webkit_fullscreen_enabled:boolean
    readonly webkit_is_full_screen:boolean
    readonly webkit_pointer_lock_element:DOMElement
    readonly xml_encoding:string
    xml_standalone:boolean
    xml_version:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLDocument */
    capture_events(): void
    clear(): void
    close(): void
    get_active_element(): DOMElement
    get_alink_color(): string
    get_bg_color(): string
    get_compat_mode(): string
    get_design_mode(): string
    get_dir(): string
    get_embeds(): DOMHTMLCollection
    get_fg_color(): string
    get_height(): number
    get_link_color(): string
    get_plugins(): DOMHTMLCollection
    get_scripts(): DOMHTMLCollection
    get_vlink_color(): string
    get_width(): number
    has_focus(): boolean
    open(): void
    release_events(): void
    set_alink_color(value: string): void
    set_bg_color(value: string): void
    set_design_mode(value: string): void
    set_dir(value: string): void
    set_fg_color(value: string): void
    set_link_color(value: string): void
    set_vlink_color(value: string): void
    /* Methods of WebKit.DOMDocument */
    adopt_node(source: DOMNode): DOMNode
    caret_range_from_point(x: number, y: number): DOMRange
    create_attribute(name: string): DOMAttr
    create_attribute_ns(namespaceURI: string | null, qualifiedName: string): DOMAttr
    create_cdata_section(data: string): DOMCDATASection
    create_comment(data: string): DOMComment
    create_css_style_declaration(): DOMCSSStyleDeclaration
    create_document_fragment(): DOMDocumentFragment
    create_element(tagName: string): DOMElement
    create_element_ns(namespaceURI: string | null, qualifiedName: string): DOMElement
    create_entity_reference(name: string | null): DOMEntityReference
    create_event(eventType: string): DOMEvent
    create_expression(expression: string, resolver: DOMXPathNSResolver): DOMXPathExpression
    create_node_iterator(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMNodeIterator
    create_ns_resolver(nodeResolver: DOMNode): DOMXPathNSResolver
    create_processing_instruction(target: string, data: string): DOMProcessingInstruction
    create_range(): DOMRange
    create_text_node(data: string): DOMText
    create_touch(window: DOMDOMWindow, target: DOMEventTarget, identifier: number, pageX: number, pageY: number, screenX: number, screenY: number, webkitRadiusX: number, webkitRadiusY: number, webkitRotationAngle: number, webkitForce: number): DOMTouch
    create_tree_walker(root: DOMNode, whatToShow: number, filter: DOMNodeFilter, expandEntityReferences: boolean): DOMTreeWalker
    element_from_point(x: number, y: number): DOMElement
    evaluate(expression: string, contextNode: DOMNode, resolver: DOMXPathNSResolver | null, type: number, inResult: DOMXPathResult | null): DOMXPathResult
    exec_command(command: string, userInterface: boolean, value: string): boolean
    get_anchors(): DOMHTMLCollection
    get_applets(): DOMHTMLCollection
    get_body(): DOMHTMLElement
    get_character_set(): string
    get_charset(): string
    get_cookie(): string
    get_current_script(): DOMHTMLScriptElement
    get_default_charset(): string
    get_default_view(): DOMDOMWindow
    get_doctype(): DOMDocumentType
    get_document_element(): DOMElement
    get_document_uri(): string
    get_domain(): string
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(tagname: string): DOMNodeList
    get_elements_by_name(elementName: string): DOMNodeList
    get_elements_by_tag_name(tagname: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_forms(): DOMHTMLCollection
    get_head(): DOMHTMLHeadElement
    get_hidden(): boolean
    get_images(): DOMHTMLCollection
    get_implementation(): DOMDOMImplementation
    get_input_encoding(): string
    get_last_modified(): string
    get_links(): DOMHTMLCollection
    get_override_style(element: DOMElement, pseudoElement: string | null): DOMCSSStyleDeclaration
    get_preferred_stylesheet_set(): string
    get_ready_state(): string
    get_referrer(): string
    get_security_policy(): DOMDOMSecurityPolicy
    get_selected_stylesheet_set(): string
    get_style_sheets(): DOMStyleSheetList
    get_title(): string
    get_url(): string
    get_visibility_state(): string
    get_webkit_current_full_screen_element(): DOMElement
    get_webkit_full_screen_keyboard_input_allowed(): boolean
    get_webkit_fullscreen_element(): DOMElement
    get_webkit_fullscreen_enabled(): boolean
    get_webkit_hidden(): boolean
    get_webkit_is_full_screen(): boolean
    get_webkit_pointer_lock_element(): DOMElement
    get_webkit_visibility_state(): string
    get_xml_encoding(): string
    get_xml_standalone(): boolean
    get_xml_version(): string
    import_node(importedNode: DOMNode, deep: boolean): DOMNode
    query_command_enabled(command: string): boolean
    query_command_indeterm(command: string): boolean
    query_command_state(command: string): boolean
    query_command_supported(command: string): boolean
    query_command_value(command: string): string
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    set_body(value: DOMHTMLElement): void
    set_charset(value: string): void
    set_cookie(value: string): void
    set_document_uri(value: string): void
    set_selected_stylesheet_set(value: string): void
    set_title(value: string): void
    set_xml_standalone(value: boolean): void
    set_xml_version(value: string): void
    webkit_cancel_full_screen(): void
    webkit_exit_fullscreen(): void
    webkit_exit_pointer_lock(): void
    webkit_get_named_flows(): DOMDOMNamedFlowCollection
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alink-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compat-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::design-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::embeds", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::link-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::plugins", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scripts", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vlink-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::anchors", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::applets", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::body", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::character-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cookie", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-script", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::doctype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::document-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::document-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::domain", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::forms", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::head", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::images", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::implementation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::input-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-modified", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::links", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preferred-stylesheet-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ready-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::referrer", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::security-policy", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-stylesheet-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style-sheets", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::url", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visibility-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-current-full-screen-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-full-screen-keyboard-input-allowed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-fullscreen-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-fullscreen-enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-is-full-screen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-pointer-lock-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-standalone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::xml-version", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLDocument_Static {
    new (config: DOMHTMLDocument_ConstructProps): DOMHTMLDocument
}
export declare var DOMHTMLDocument: DOMHTMLDocument_Static
export interface DOMHTMLElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLElement {
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLElement_Static {
    new (config: DOMHTMLElement_ConstructProps): DOMHTMLElement
}
export declare var DOMHTMLElement: DOMHTMLElement_Static
export interface DOMHTMLEmbedElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLEmbedElement */
    align?:string
    height?:number
    name?:string
    src?:string
    type?:string
    width?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLEmbedElement {
    /* Properties of WebKit.DOMHTMLEmbedElement */
    align:string
    height:number
    name:string
    src:string
    type:string
    width:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLEmbedElement */
    get_align(): string
    get_height(): number
    get_name(): string
    get_src(): string
    get_width(): number
    set_align(value: string): void
    set_height(value: number): void
    set_name(value: string): void
    set_src(value: string): void
    set_width(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLEmbedElement_Static {
    new (config: DOMHTMLEmbedElement_ConstructProps): DOMHTMLEmbedElement
}
export declare var DOMHTMLEmbedElement: DOMHTMLEmbedElement_Static
export interface DOMHTMLFieldSetElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLFieldSetElement */
    disabled?:boolean
    name?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLFieldSetElement {
    /* Properties of WebKit.DOMHTMLFieldSetElement */
    disabled:boolean
    readonly elements:DOMHTMLCollection
    readonly form:DOMHTMLFormElement
    name:string
    readonly type:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLFieldSetElement */
    check_validity(): boolean
    get_disabled(): boolean
    get_elements(): DOMHTMLCollection
    get_form(): DOMHTMLFormElement
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_will_validate(): boolean
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_name(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::elements", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLFieldSetElement_Static {
    new (config: DOMHTMLFieldSetElement_ConstructProps): DOMHTMLFieldSetElement
}
export declare var DOMHTMLFieldSetElement: DOMHTMLFieldSetElement_Static
export interface DOMHTMLFontElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLFontElement */
    color?:string
    face?:string
    size?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLFontElement {
    /* Properties of WebKit.DOMHTMLFontElement */
    color:string
    face:string
    size:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLFontElement */
    get_color(): string
    get_face(): string
    get_size(): string
    set_color(value: string): void
    set_face(value: string): void
    set_size(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::face", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLFontElement_Static {
    new (config: DOMHTMLFontElement_ConstructProps): DOMHTMLFontElement
}
export declare var DOMHTMLFontElement: DOMHTMLFontElement_Static
export interface DOMHTMLFormElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLFormElement */
    accept_charset?:string
    action?:string
    autocapitalize?:string
    autocomplete?:string
    autocorrect?:boolean
    encoding?:string
    enctype?:string
    method?:string
    name?:string
    no_validate?:boolean
    target?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLFormElement {
    /* Properties of WebKit.DOMHTMLFormElement */
    accept_charset:string
    action:string
    autocapitalize:string
    autocomplete:string
    autocorrect:boolean
    readonly elements:DOMHTMLCollection
    encoding:string
    enctype:string
    readonly length:number
    method:string
    name:string
    no_validate:boolean
    target:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLFormElement */
    check_validity(): boolean
    dispatch_form_change(): void
    dispatch_form_input(): void
    get_accept_charset(): string
    get_action(): string
    get_autocapitalize(): string
    get_autocomplete(): string
    get_autocorrect(): boolean
    get_elements(): DOMHTMLCollection
    get_encoding(): string
    get_enctype(): string
    get_length(): number
    get_method(): string
    get_name(): string
    get_no_validate(): boolean
    get_target(): string
    reset(): void
    set_accept_charset(value: string): void
    set_action(value: string): void
    set_autocapitalize(value: string): void
    set_autocomplete(value: string): void
    set_autocorrect(value: boolean): void
    set_encoding(value: string): void
    set_enctype(value: string): void
    set_method(value: string): void
    set_name(value: string): void
    set_no_validate(value: boolean): void
    set_target(value: string): void
    submit(): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accept-charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::action", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocapitalize", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocomplete", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocorrect", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::elements", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enctype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::method", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLFormElement_Static {
    new (config: DOMHTMLFormElement_ConstructProps): DOMHTMLFormElement
}
export declare var DOMHTMLFormElement: DOMHTMLFormElement_Static
export interface DOMHTMLFrameElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLFrameElement */
    frame_border?:string
    long_desc?:string
    margin_height?:string
    margin_width?:string
    name?:string
    no_resize?:boolean
    scrolling?:string
    src?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLFrameElement {
    /* Properties of WebKit.DOMHTMLFrameElement */
    readonly content_document:DOMDocument
    readonly content_window:DOMDOMWindow
    frame_border:string
    readonly height:number
    long_desc:string
    margin_height:string
    margin_width:string
    name:string
    no_resize:boolean
    scrolling:string
    src:string
    readonly width:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLFrameElement */
    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): number
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_no_resize(): boolean
    get_scrolling(): string
    get_src(): string
    get_width(): number
    set_frame_border(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_no_resize(value: boolean): void
    set_scrolling(value: string): void
    set_src(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-window", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frame-border", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::long-desc", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-resize", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scrolling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLFrameElement_Static {
    new (config: DOMHTMLFrameElement_ConstructProps): DOMHTMLFrameElement
}
export declare var DOMHTMLFrameElement: DOMHTMLFrameElement_Static
export interface DOMHTMLFrameSetElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLFrameSetElement */
    cols?:string
    rows?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLFrameSetElement {
    /* Properties of WebKit.DOMHTMLFrameSetElement */
    cols:string
    rows:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLFrameSetElement */
    get_cols(): string
    get_rows(): string
    set_cols(value: string): void
    set_rows(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cols", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rows", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLFrameSetElement_Static {
    new (config: DOMHTMLFrameSetElement_ConstructProps): DOMHTMLFrameSetElement
}
export declare var DOMHTMLFrameSetElement: DOMHTMLFrameSetElement_Static
export interface DOMHTMLHRElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLHRElement */
    align?:string
    no_shade?:boolean
    size?:string
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLHRElement {
    /* Properties of WebKit.DOMHTMLHRElement */
    align:string
    no_shade:boolean
    size:string
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLHRElement */
    get_align(): string
    get_no_shade(): boolean
    get_size(): string
    get_width(): string
    set_align(value: string): void
    set_no_shade(value: boolean): void
    set_size(value: string): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-shade", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLHRElement_Static {
    new (config: DOMHTMLHRElement_ConstructProps): DOMHTMLHRElement
}
export declare var DOMHTMLHRElement: DOMHTMLHRElement_Static
export interface DOMHTMLHeadElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLHeadElement */
    profile?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLHeadElement {
    /* Properties of WebKit.DOMHTMLHeadElement */
    profile:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLHeadElement */
    get_profile(): string
    set_profile(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::profile", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLHeadElement_Static {
    new (config: DOMHTMLHeadElement_ConstructProps): DOMHTMLHeadElement
}
export declare var DOMHTMLHeadElement: DOMHTMLHeadElement_Static
export interface DOMHTMLHeadingElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLHeadingElement */
    align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLHeadingElement {
    /* Properties of WebKit.DOMHTMLHeadingElement */
    align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLHeadingElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLHeadingElement_Static {
    new (config: DOMHTMLHeadingElement_ConstructProps): DOMHTMLHeadingElement
}
export declare var DOMHTMLHeadingElement: DOMHTMLHeadingElement_Static
export interface DOMHTMLHtmlElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLHtmlElement */
    manifest?:string
    version?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLHtmlElement {
    /* Properties of WebKit.DOMHTMLHtmlElement */
    manifest:string
    version:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLHtmlElement */
    get_manifest(): string
    get_version(): string
    set_manifest(value: string): void
    set_version(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::manifest", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::version", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLHtmlElement_Static {
    new (config: DOMHTMLHtmlElement_ConstructProps): DOMHTMLHtmlElement
}
export declare var DOMHTMLHtmlElement: DOMHTMLHtmlElement_Static
export interface DOMHTMLIFrameElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLIFrameElement */
    align?:string
    frame_border?:string
    height?:string
    long_desc?:string
    margin_height?:string
    margin_width?:string
    name?:string
    sandbox?:string
    scrolling?:string
    seamless?:boolean
    src?:string
    srcdoc?:string
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLIFrameElement {
    /* Properties of WebKit.DOMHTMLIFrameElement */
    align:string
    readonly content_document:DOMDocument
    readonly content_window:DOMDOMWindow
    frame_border:string
    height:string
    long_desc:string
    margin_height:string
    margin_width:string
    name:string
    sandbox:string
    scrolling:string
    seamless:boolean
    src:string
    srcdoc:string
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLIFrameElement */
    get_align(): string
    get_content_document(): DOMDocument
    get_content_window(): DOMDOMWindow
    get_frame_border(): string
    get_height(): string
    get_long_desc(): string
    get_margin_height(): string
    get_margin_width(): string
    get_name(): string
    get_sandbox(): string
    get_scrolling(): string
    get_seamless(): boolean
    get_src(): string
    get_srcdoc(): string
    get_width(): string
    set_align(value: string): void
    set_frame_border(value: string): void
    set_height(value: string): void
    set_long_desc(value: string): void
    set_margin_height(value: string): void
    set_margin_width(value: string): void
    set_name(value: string): void
    set_sandbox(value: string): void
    set_scrolling(value: string): void
    set_seamless(value: boolean): void
    set_src(value: string): void
    set_srcdoc(value: string): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-window", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frame-border", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::long-desc", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sandbox", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scrolling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seamless", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::srcdoc", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLIFrameElement_Static {
    new (config: DOMHTMLIFrameElement_ConstructProps): DOMHTMLIFrameElement
}
export declare var DOMHTMLIFrameElement: DOMHTMLIFrameElement_Static
export interface DOMHTMLImageElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLImageElement */
    align?:string
    alt?:string
    border?:string
    cross_origin?:string
    height?:number
    hspace?:number
    is_map?:boolean
    long_desc?:string
    lowsrc?:string
    name?:string
    src?:string
    srcset?:string
    use_map?:string
    vspace?:number
    width?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLImageElement {
    /* Properties of WebKit.DOMHTMLImageElement */
    align:string
    alt:string
    border:string
    readonly complete:boolean
    cross_origin:string
    height:number
    hspace:number
    is_map:boolean
    long_desc:string
    lowsrc:string
    name:string
    readonly natural_height:number
    readonly natural_width:number
    src:string
    srcset:string
    use_map:string
    vspace:number
    width:number
    readonly x:number
    readonly y:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLImageElement */
    get_align(): string
    get_alt(): string
    get_border(): string
    get_complete(): boolean
    get_cross_origin(): string
    get_height(): number
    get_hspace(): number
    get_is_map(): boolean
    get_long_desc(): string
    get_lowsrc(): string
    get_name(): string
    get_natural_height(): number
    get_natural_width(): number
    get_src(): string
    get_srcset(): string
    get_use_map(): string
    get_vspace(): number
    get_width(): number
    get_x(): number
    get_y(): number
    set_align(value: string): void
    set_alt(value: string): void
    set_border(value: string): void
    set_cross_origin(value: string): void
    set_height(value: number): void
    set_hspace(value: number): void
    set_is_map(value: boolean): void
    set_long_desc(value: string): void
    set_lowsrc(value: string): void
    set_name(value: string): void
    set_src(value: string): void
    set_srcset(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::complete", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cross-origin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-map", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::long-desc", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lowsrc", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::natural-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::natural-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::srcset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-map", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLImageElement_Static {
    new (config: DOMHTMLImageElement_ConstructProps): DOMHTMLImageElement
}
export declare var DOMHTMLImageElement: DOMHTMLImageElement_Static
export interface DOMHTMLInputElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLInputElement */
    accept?:string
    align?:string
    alt?:string
    autocapitalize?:string
    autocomplete?:string
    autocorrect?:boolean
    autofocus?:boolean
    capture?:string
    checked?:boolean
    default_checked?:boolean
    default_value?:string
    dir_name?:string
    disabled?:boolean
    form_action?:string
    form_enctype?:string
    form_method?:string
    form_no_validate?:boolean
    form_target?:string
    height?:number
    incremental?:boolean
    indeterminate?:boolean
    max?:string
    max_length?:number
    min?:string
    multiple?:boolean
    name?:string
    pattern?:string
    placeholder?:string
    read_only?:boolean
    required?:boolean
    size?:number
    src?:string
    step?:string
    type?:string
    use_map?:string
    value?:string
    value_as_number?:number
    webkit_grammar?:boolean
    webkit_speech?:boolean
    webkitdirectory?:boolean
    width?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLInputElement {
    /* Properties of WebKit.DOMHTMLInputElement */
    accept:string
    align:string
    alt:string
    autocapitalize:string
    autocomplete:string
    autocorrect:boolean
    autofocus:boolean
    capture:string
    checked:boolean
    default_checked:boolean
    default_value:string
    dir_name:string
    disabled:boolean
    readonly files:DOMFileList
    readonly form:DOMHTMLFormElement
    form_action:string
    form_enctype:string
    form_method:string
    form_no_validate:boolean
    form_target:string
    height:number
    incremental:boolean
    indeterminate:boolean
    readonly labels:DOMNodeList
    readonly list:DOMHTMLElement
    max:string
    max_length:number
    min:string
    multiple:boolean
    name:string
    pattern:string
    placeholder:string
    read_only:boolean
    required:boolean
    size:number
    src:string
    step:string
    type:string
    use_map:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    value:string
    value_as_number:number
    webkit_grammar:boolean
    webkit_speech:boolean
    webkitdirectory:boolean
    width:number
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLInputElement */
    check_validity(): boolean
    get_accept(): string
    get_align(): string
    get_alt(): string
    get_autocapitalize(): string
    get_autocomplete(): string
    get_autocorrect(): boolean
    get_autofocus(): boolean
    get_capture(): string
    get_checked(): boolean
    get_default_checked(): boolean
    get_default_value(): string
    get_dir_name(): string
    get_disabled(): boolean
    get_files(): DOMFileList
    get_form(): DOMHTMLFormElement
    get_form_action(): string
    get_form_enctype(): string
    get_form_method(): string
    get_form_no_validate(): boolean
    get_form_target(): string
    get_height(): number
    get_incremental(): boolean
    get_indeterminate(): boolean
    get_labels(): DOMNodeList
    get_list(): DOMHTMLElement
    get_max(): string
    get_max_length(): number
    get_min(): string
    get_multiple(): boolean
    get_name(): string
    get_pattern(): string
    get_placeholder(): string
    get_read_only(): boolean
    get_required(): boolean
    get_size(): number
    get_src(): string
    get_step(): string
    get_use_map(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_value_as_number(): number
    get_webkit_grammar(): boolean
    get_webkit_speech(): boolean
    get_webkitdirectory(): boolean
    get_width(): number
    get_will_validate(): boolean
    is_edited(): boolean
    select(): void
    set_accept(value: string): void
    set_align(value: string): void
    set_alt(value: string): void
    set_autocapitalize(value: string): void
    set_autocomplete(value: string): void
    set_autocorrect(value: boolean): void
    set_autofocus(value: boolean): void
    set_capture(value: string): void
    set_checked(value: boolean): void
    set_custom_validity(error: string): void
    set_default_checked(value: boolean): void
    set_default_value(value: string): void
    set_dir_name(value: string): void
    set_disabled(value: boolean): void
    set_files(value: DOMFileList): void
    set_form_action(value: string): void
    set_form_enctype(value: string): void
    set_form_method(value: string): void
    set_form_no_validate(value: boolean): void
    set_form_target(value: string): void
    set_height(value: number): void
    set_incremental(value: boolean): void
    set_indeterminate(value: boolean): void
    set_max(value: string): void
    set_max_length(value: number): void
    set_min(value: string): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_pattern(value: string): void
    set_placeholder(value: string): void
    set_range_text(replacement: string, start: number, end: number, selectionMode: string): void
    set_read_only(value: boolean): void
    set_required(value: boolean): void
    set_size(value: number): void
    set_src(value: string): void
    set_step(value: string): void
    set_use_map(value: string): void
    set_value(value: string): void
    set_value_as_number(value: number): void
    set_value_for_user(value: string): void
    set_webkit_grammar(value: boolean): void
    set_webkit_speech(value: boolean): void
    set_webkitdirectory(value: boolean): void
    set_width(value: number): void
    step_down(n: number): void
    step_up(n: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::accept", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocapitalize", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocomplete", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocorrect", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autofocus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::capture", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::checked", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-checked", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::files", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-action", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-enctype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-method", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-no-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::incremental", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::indeterminate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::labels", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::min", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::multiple", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pattern", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::placeholder", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::read-only", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::required", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::step", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-map", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value-as-number", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-grammar", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-speech", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdirectory", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLInputElement_Static {
    new (config: DOMHTMLInputElement_ConstructProps): DOMHTMLInputElement
}
export declare var DOMHTMLInputElement: DOMHTMLInputElement_Static
export interface DOMHTMLKeygenElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLKeygenElement */
    autofocus?:boolean
    challenge?:string
    disabled?:boolean
    keytype?:string
    name?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLKeygenElement {
    /* Properties of WebKit.DOMHTMLKeygenElement */
    autofocus:boolean
    challenge:string
    disabled:boolean
    readonly form:DOMHTMLFormElement
    keytype:string
    readonly labels:DOMNodeList
    name:string
    readonly type:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLKeygenElement */
    check_validity(): boolean
    get_autofocus(): boolean
    get_challenge(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_keytype(): string
    get_labels(): DOMNodeList
    get_name(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_will_validate(): boolean
    set_autofocus(value: boolean): void
    set_challenge(value: string): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_keytype(value: string): void
    set_name(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autofocus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::challenge", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::keytype", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::labels", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLKeygenElement_Static {
    new (config: DOMHTMLKeygenElement_ConstructProps): DOMHTMLKeygenElement
}
export declare var DOMHTMLKeygenElement: DOMHTMLKeygenElement_Static
export interface DOMHTMLLIElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLLIElement */
    type?:string
    value?:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLLIElement {
    /* Properties of WebKit.DOMHTMLLIElement */
    type:string
    value:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLLIElement */
    get_value(): number
    set_value(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLLIElement_Static {
    new (config: DOMHTMLLIElement_ConstructProps): DOMHTMLLIElement
}
export declare var DOMHTMLLIElement: DOMHTMLLIElement_Static
export interface DOMHTMLLabelElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLLabelElement */
    html_for?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLLabelElement {
    /* Properties of WebKit.DOMHTMLLabelElement */
    readonly control:DOMHTMLElement
    readonly form:DOMHTMLFormElement
    html_for:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLLabelElement */
    get_control(): DOMHTMLElement
    get_form(): DOMHTMLFormElement
    get_html_for(): string
    set_html_for(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::control", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::html-for", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLLabelElement_Static {
    new (config: DOMHTMLLabelElement_ConstructProps): DOMHTMLLabelElement
}
export declare var DOMHTMLLabelElement: DOMHTMLLabelElement_Static
export interface DOMHTMLLegendElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLLegendElement */
    align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLLegendElement {
    /* Properties of WebKit.DOMHTMLLegendElement */
    align:string
    readonly form:DOMHTMLFormElement
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLLegendElement */
    get_align(): string
    get_form(): DOMHTMLFormElement
    set_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLLegendElement_Static {
    new (config: DOMHTMLLegendElement_ConstructProps): DOMHTMLLegendElement
}
export declare var DOMHTMLLegendElement: DOMHTMLLegendElement_Static
export interface DOMHTMLLinkElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLLinkElement */
    charset?:string
    disabled?:boolean
    href?:string
    hreflang?:string
    media?:string
    rel?:string
    rev?:string
    target?:string
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLLinkElement {
    /* Properties of WebKit.DOMHTMLLinkElement */
    charset:string
    disabled:boolean
    href:string
    hreflang:string
    media:string
    rel:string
    rev:string
    readonly sheet:DOMStyleSheet
    target:string
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLLinkElement */
    get_charset(): string
    get_disabled(): boolean
    get_href(): string
    get_hreflang(): string
    get_media(): string
    get_rel(): string
    get_rev(): string
    get_sheet(): DOMStyleSheet
    get_target(): string
    set_charset(value: string): void
    set_disabled(value: boolean): void
    set_href(value: string): void
    set_hreflang(value: string): void
    set_media(value: string): void
    set_rel(value: string): void
    set_rev(value: string): void
    set_target(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hreflang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rel", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rev", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLLinkElement_Static {
    new (config: DOMHTMLLinkElement_ConstructProps): DOMHTMLLinkElement
}
export declare var DOMHTMLLinkElement: DOMHTMLLinkElement_Static
export interface DOMHTMLMapElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMapElement */
    name?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLMapElement {
    /* Properties of WebKit.DOMHTMLMapElement */
    readonly areas:DOMHTMLCollection
    name:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMapElement */
    get_areas(): DOMHTMLCollection
    get_name(): string
    set_name(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::areas", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLMapElement_Static {
    new (config: DOMHTMLMapElement_ConstructProps): DOMHTMLMapElement
}
export declare var DOMHTMLMapElement: DOMHTMLMapElement_Static
export interface DOMHTMLMarqueeElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMarqueeElement */
    behavior?:string
    bg_color?:string
    direction?:string
    height?:string
    hspace?:number
    loop?:number
    scroll_amount?:number
    scroll_delay?:number
    true_speed?:boolean
    vspace?:number
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLMarqueeElement {
    /* Properties of WebKit.DOMHTMLMarqueeElement */
    behavior:string
    bg_color:string
    direction:string
    height:string
    hspace:number
    loop:number
    scroll_amount:number
    scroll_delay:number
    true_speed:boolean
    vspace:number
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMarqueeElement */
    get_behavior(): string
    get_bg_color(): string
    get_direction(): string
    get_height(): string
    get_hspace(): number
    get_loop(): number
    get_scroll_amount(): number
    get_scroll_delay(): number
    get_true_speed(): boolean
    get_vspace(): number
    get_width(): string
    set_behavior(value: string): void
    set_bg_color(value: string): void
    set_direction(value: string): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_loop(value: number): void
    set_scroll_amount(value: number): void
    set_scroll_delay(value: number): void
    set_true_speed(value: boolean): void
    set_vspace(value: number): void
    set_width(value: string): void
    start(): void
    stop(): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::behavior", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::direction", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::loop", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-amount", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-delay", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::true-speed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLMarqueeElement_Static {
    new (config: DOMHTMLMarqueeElement_ConstructProps): DOMHTMLMarqueeElement
}
export declare var DOMHTMLMarqueeElement: DOMHTMLMarqueeElement_Static
export interface DOMHTMLMediaElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMediaElement */
    autoplay?:boolean
    controls?:boolean
    current_time?:number
    default_muted?:boolean
    default_playback_rate?:number
    loop?:boolean
    media_group?:string
    muted?:boolean
    playback_rate?:number
    preload?:string
    src?:string
    volume?:number
    webkit_closed_captions_visible?:boolean
    webkit_preserves_pitch?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLMediaElement {
    /* Properties of WebKit.DOMHTMLMediaElement */
    readonly audio_tracks:DOMAudioTrackList
    autoplay:boolean
    readonly buffered:DOMTimeRanges
    readonly controller:DOMMediaController
    controls:boolean
    readonly current_src:string
    current_time:number
    default_muted:boolean
    default_playback_rate:number
    readonly duration:number
    readonly ended:boolean
    readonly error:DOMMediaError
    loop:boolean
    media_group:string
    muted:boolean
    readonly network_state:number
    readonly paused:boolean
    playback_rate:number
    readonly played:DOMTimeRanges
    preload:string
    readonly ready_state:number
    readonly seekable:DOMTimeRanges
    readonly seeking:boolean
    src:string
    readonly text_tracks:DOMTextTrackList
    readonly video_tracks:DOMVideoTrackList
    volume:number
    readonly webkit_audio_decoded_byte_count:number
    webkit_closed_captions_visible:boolean
    readonly webkit_current_playback_target_is_wireless:boolean
    readonly webkit_has_closed_captions:boolean
    webkit_preserves_pitch:boolean
    readonly webkit_video_decoded_byte_count:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMediaElement */
    add_text_track(kind: string, label: string, language: string): DOMTextTrack
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_audio_tracks(): DOMAudioTrackList
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_text_tracks(): DOMTextTrackList
    get_video_tracks(): DOMVideoTrackList
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::audio-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autoplay", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffered", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controller", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controls", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::duration", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ended", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::error", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::loop", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-group", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::network-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paused", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::played", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preload", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ready-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seekable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seeking", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::video-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::volume", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-closed-captions-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-has-closed-captions", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-preserves-pitch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLMediaElement_Static {
    new (config: DOMHTMLMediaElement_ConstructProps): DOMHTMLMediaElement
}
export declare var DOMHTMLMediaElement: DOMHTMLMediaElement_Static
export interface DOMHTMLMenuElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMenuElement */
    compact?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLMenuElement {
    /* Properties of WebKit.DOMHTMLMenuElement */
    compact:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMenuElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compact", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLMenuElement_Static {
    new (config: DOMHTMLMenuElement_ConstructProps): DOMHTMLMenuElement
}
export declare var DOMHTMLMenuElement: DOMHTMLMenuElement_Static
export interface DOMHTMLMetaElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLMetaElement */
    content?:string
    http_equiv?:string
    name?:string
    scheme?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLMetaElement {
    /* Properties of WebKit.DOMHTMLMetaElement */
    content:string
    http_equiv:string
    name:string
    scheme:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLMetaElement */
    get_content(): string
    get_http_equiv(): string
    get_name(): string
    get_scheme(): string
    set_content(value: string): void
    set_http_equiv(value: string): void
    set_name(value: string): void
    set_scheme(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::http-equiv", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scheme", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLMetaElement_Static {
    new (config: DOMHTMLMetaElement_ConstructProps): DOMHTMLMetaElement
}
export declare var DOMHTMLMetaElement: DOMHTMLMetaElement_Static
export interface DOMHTMLModElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLModElement */
    cite?:string
    date_time?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLModElement {
    /* Properties of WebKit.DOMHTMLModElement */
    cite:string
    date_time:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLModElement */
    get_cite(): string
    get_date_time(): string
    set_cite(value: string): void
    set_date_time(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cite", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::date-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLModElement_Static {
    new (config: DOMHTMLModElement_ConstructProps): DOMHTMLModElement
}
export declare var DOMHTMLModElement: DOMHTMLModElement_Static
export interface DOMHTMLOListElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLOListElement */
    compact?:boolean
    reversed?:boolean
    start?:number
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLOListElement {
    /* Properties of WebKit.DOMHTMLOListElement */
    compact:boolean
    reversed:boolean
    start:number
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLOListElement */
    get_compact(): boolean
    get_reversed(): boolean
    get_start(): number
    set_compact(value: boolean): void
    set_reversed(value: boolean): void
    set_start(value: number): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compact", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reversed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLOListElement_Static {
    new (config: DOMHTMLOListElement_ConstructProps): DOMHTMLOListElement
}
export declare var DOMHTMLOListElement: DOMHTMLOListElement_Static
export interface DOMHTMLObjectElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLObjectElement */
    align?:string
    archive?:string
    border?:string
    code?:string
    code_base?:string
    code_type?:string
    data?:string
    declare?:boolean
    height?:string
    hspace?:number
    name?:string
    standby?:string
    type?:string
    use_map?:string
    vspace?:number
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLObjectElement {
    /* Properties of WebKit.DOMHTMLObjectElement */
    align:string
    archive:string
    border:string
    code:string
    code_base:string
    code_type:string
    readonly content_document:DOMDocument
    data:string
    declare:boolean
    readonly form:DOMHTMLFormElement
    height:string
    hspace:number
    name:string
    standby:string
    type:string
    use_map:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    vspace:number
    width:string
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLObjectElement */
    check_validity(): boolean
    get_align(): string
    get_archive(): string
    get_border(): string
    get_code(): string
    get_code_base(): string
    get_code_type(): string
    get_content_document(): DOMDocument
    get_data(): string
    get_declare(): boolean
    get_form(): DOMHTMLFormElement
    get_height(): string
    get_hspace(): number
    get_name(): string
    get_standby(): string
    get_use_map(): string
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_vspace(): number
    get_width(): string
    get_will_validate(): boolean
    set_align(value: string): void
    set_archive(value: string): void
    set_border(value: string): void
    set_code(value: string): void
    set_code_base(value: string): void
    set_code_type(value: string): void
    set_custom_validity(error: string): void
    set_data(value: string): void
    set_declare(value: boolean): void
    set_height(value: string): void
    set_hspace(value: number): void
    set_name(value: string): void
    set_standby(value: string): void
    set_use_map(value: string): void
    set_vspace(value: number): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::archive", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code-base", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::declare", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::standby", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::use-map", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vspace", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLObjectElement_Static {
    new (config: DOMHTMLObjectElement_ConstructProps): DOMHTMLObjectElement
}
export declare var DOMHTMLObjectElement: DOMHTMLObjectElement_Static
export interface DOMHTMLOptGroupElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLOptGroupElement */
    disabled?:boolean
    label?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLOptGroupElement {
    /* Properties of WebKit.DOMHTMLOptGroupElement */
    disabled:boolean
    label:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLOptGroupElement */
    get_disabled(): boolean
    get_label(): string
    set_disabled(value: boolean): void
    set_label(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLOptGroupElement_Static {
    new (config: DOMHTMLOptGroupElement_ConstructProps): DOMHTMLOptGroupElement
}
export declare var DOMHTMLOptGroupElement: DOMHTMLOptGroupElement_Static
export interface DOMHTMLOptionElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLOptionElement */
    default_selected?:boolean
    disabled?:boolean
    label?:string
    selected?:boolean
    value?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLOptionElement {
    /* Properties of WebKit.DOMHTMLOptionElement */
    default_selected:boolean
    disabled:boolean
    readonly form:DOMHTMLFormElement
    readonly index:number
    label:string
    selected:boolean
    readonly text:string
    value:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLOptionElement */
    get_default_selected(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_index(): number
    get_label(): string
    get_selected(): boolean
    get_text(): string
    get_value(): string
    set_default_selected(value: boolean): void
    set_disabled(value: boolean): void
    set_label(value: string): void
    set_selected(value: boolean): void
    set_value(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-selected", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLOptionElement_Static {
    new (config: DOMHTMLOptionElement_ConstructProps): DOMHTMLOptionElement
}
export declare var DOMHTMLOptionElement: DOMHTMLOptionElement_Static
export interface DOMHTMLOptionsCollection_ConstructProps {
    /* Properties of WebKit.DOMHTMLOptionsCollection */
    selected_index?:number
    /* Properties of WebKit.DOMHTMLCollection */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLOptionsCollection {
    /* Properties of WebKit.DOMHTMLOptionsCollection */
    readonly length:number
    selected_index:number
    /* Properties of WebKit.DOMHTMLCollection */
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLOptionsCollection */
    get_length(): number
    get_selected_index(): number
    named_item(name: string): DOMNode
    set_selected_index(value: number): void
    /* Methods of WebKit.DOMHTMLCollection */
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-index", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLOptionsCollection_Static {
    new (config: DOMHTMLOptionsCollection_ConstructProps): DOMHTMLOptionsCollection
}
export declare var DOMHTMLOptionsCollection: DOMHTMLOptionsCollection_Static
export interface DOMHTMLParagraphElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLParagraphElement */
    align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLParagraphElement {
    /* Properties of WebKit.DOMHTMLParagraphElement */
    align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLParagraphElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLParagraphElement_Static {
    new (config: DOMHTMLParagraphElement_ConstructProps): DOMHTMLParagraphElement
}
export declare var DOMHTMLParagraphElement: DOMHTMLParagraphElement_Static
export interface DOMHTMLParamElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLParamElement */
    name?:string
    type?:string
    value?:string
    value_type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLParamElement {
    /* Properties of WebKit.DOMHTMLParamElement */
    name:string
    type:string
    value:string
    value_type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLParamElement */
    get_name(): string
    get_value(): string
    get_value_type(): string
    set_name(value: string): void
    set_value(value: string): void
    set_value_type(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLParamElement_Static {
    new (config: DOMHTMLParamElement_ConstructProps): DOMHTMLParamElement
}
export declare var DOMHTMLParamElement: DOMHTMLParamElement_Static
export interface DOMHTMLPreElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLPreElement */
    width?:number
    wrap?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLPreElement {
    /* Properties of WebKit.DOMHTMLPreElement */
    width:number
    wrap:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLPreElement */
    get_width(): number
    get_wrap(): boolean
    set_width(value: number): void
    set_wrap(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLPreElement_Static {
    new (config: DOMHTMLPreElement_ConstructProps): DOMHTMLPreElement
}
export declare var DOMHTMLPreElement: DOMHTMLPreElement_Static
export interface DOMHTMLPropertiesCollection_ConstructProps {
    /* Properties of WebKit.DOMHTMLPropertiesCollection */
    /* Properties of WebKit.DOMHTMLCollection */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLPropertiesCollection {
    /* Properties of WebKit.DOMHTMLPropertiesCollection */
    readonly length:number
    readonly names:DOMDOMStringList
    /* Properties of WebKit.DOMHTMLCollection */
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLCollection */
    get_length(): number
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::names", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLPropertiesCollection_Static {
    new (config: DOMHTMLPropertiesCollection_ConstructProps): DOMHTMLPropertiesCollection
}
export declare class DOMHTMLPropertiesCollection_Static {
    get_length(self: object): number
    get_names(self: object): DOMDOMStringList
    item(self: object, index: number): DOMNode
    named_item(self: object, name: string): object
}
export declare var DOMHTMLPropertiesCollection: DOMHTMLPropertiesCollection_Static
export interface DOMHTMLQuoteElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLQuoteElement */
    cite?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLQuoteElement {
    /* Properties of WebKit.DOMHTMLQuoteElement */
    cite:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLQuoteElement */
    get_cite(): string
    set_cite(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cite", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLQuoteElement_Static {
    new (config: DOMHTMLQuoteElement_ConstructProps): DOMHTMLQuoteElement
}
export declare var DOMHTMLQuoteElement: DOMHTMLQuoteElement_Static
export interface DOMHTMLScriptElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLScriptElement */
    async?:boolean
    charset?:string
    cross_origin?:string
    defer?:boolean
    event?:string
    html_for?:string
    nonce?:string
    src?:string
    text?:string
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLScriptElement {
    /* Properties of WebKit.DOMHTMLScriptElement */
    async:boolean
    charset:string
    cross_origin:string
    defer:boolean
    event:string
    html_for:string
    nonce:string
    src:string
    text:string
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLScriptElement */
    get_async(): boolean
    get_charset(): string
    get_cross_origin(): string
    get_defer(): boolean
    get_event(): string
    get_html_for(): string
    get_nonce(): string
    get_src(): string
    get_text(): string
    set_async(value: boolean): void
    set_charset(value: string): void
    set_cross_origin(value: string): void
    set_defer(value: boolean): void
    set_event(value: string): void
    set_html_for(value: string): void
    set_nonce(value: string): void
    set_src(value: string): void
    set_text(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::async", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::charset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cross-origin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::defer", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::html-for", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::nonce", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLScriptElement_Static {
    new (config: DOMHTMLScriptElement_ConstructProps): DOMHTMLScriptElement
}
export declare var DOMHTMLScriptElement: DOMHTMLScriptElement_Static
export interface DOMHTMLSelectElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLSelectElement */
    autofocus?:boolean
    disabled?:boolean
    length?:number
    multiple?:boolean
    name?:string
    required?:boolean
    selected_index?:number
    size?:number
    value?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLSelectElement {
    /* Properties of WebKit.DOMHTMLSelectElement */
    autofocus:boolean
    disabled:boolean
    readonly form:DOMHTMLFormElement
    readonly labels:DOMNodeList
    length:number
    multiple:boolean
    name:string
    readonly options:DOMHTMLOptionsCollection
    required:boolean
    selected_index:number
    readonly selected_options:DOMHTMLCollection
    size:number
    readonly type:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    value:string
    readonly will_validate:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLSelectElement */
    add(element: DOMHTMLElement, before: DOMHTMLElement): void
    check_validity(): boolean
    get_autofocus(): boolean
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_labels(): DOMNodeList
    get_length(): number
    get_multiple(): boolean
    get_name(): string
    get_options(): DOMHTMLOptionsCollection
    get_required(): boolean
    get_selected_index(): number
    get_selected_options(): DOMHTMLCollection
    get_size(): number
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    item(index: number): DOMNode
    named_item(name: string): DOMNode
    remove(index: number): void
    set_autofocus(value: boolean): void
    set_custom_validity(error: string): void
    set_disabled(value: boolean): void
    set_length(value: number): void
    set_multiple(value: boolean): void
    set_name(value: string): void
    set_required(value: boolean): void
    set_selected_index(value: number): void
    set_size(value: number): void
    set_value(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autofocus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::labels", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::multiple", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::options", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::required", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-options", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLSelectElement_Static {
    new (config: DOMHTMLSelectElement_ConstructProps): DOMHTMLSelectElement
}
export declare var DOMHTMLSelectElement: DOMHTMLSelectElement_Static
export interface DOMHTMLStyleElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLStyleElement */
    disabled?:boolean
    media?:string
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLStyleElement {
    /* Properties of WebKit.DOMHTMLStyleElement */
    disabled:boolean
    media:string
    readonly sheet:DOMStyleSheet
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLStyleElement */
    get_disabled(): boolean
    get_media(): string
    get_scoped(): boolean
    get_sheet(): DOMStyleSheet
    set_disabled(value: boolean): void
    set_media(value: string): void
    set_scoped(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLStyleElement_Static {
    new (config: DOMHTMLStyleElement_ConstructProps): DOMHTMLStyleElement
}
export declare var DOMHTMLStyleElement: DOMHTMLStyleElement_Static
export interface DOMHTMLTableCaptionElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableCaptionElement */
    align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableCaptionElement {
    /* Properties of WebKit.DOMHTMLTableCaptionElement */
    align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableCaptionElement */
    get_align(): string
    set_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableCaptionElement_Static {
    new (config: DOMHTMLTableCaptionElement_ConstructProps): DOMHTMLTableCaptionElement
}
export declare var DOMHTMLTableCaptionElement: DOMHTMLTableCaptionElement_Static
export interface DOMHTMLTableCellElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableCellElement */
    abbr?:string
    align?:string
    axis?:string
    bg_color?:string
    ch?:string
    ch_off?:string
    col_span?:number
    headers?:string
    height?:string
    no_wrap?:boolean
    row_span?:number
    scope?:string
    v_align?:string
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableCellElement {
    /* Properties of WebKit.DOMHTMLTableCellElement */
    abbr:string
    align:string
    axis:string
    bg_color:string
    readonly cell_index:number
    ch:string
    ch_off:string
    col_span:number
    headers:string
    height:string
    no_wrap:boolean
    row_span:number
    scope:string
    v_align:string
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableCellElement */
    get_abbr(): string
    get_align(): string
    get_axis(): string
    get_bg_color(): string
    get_cell_index(): number
    get_ch(): string
    get_ch_off(): string
    get_col_span(): number
    get_headers(): string
    get_height(): string
    get_no_wrap(): boolean
    get_row_span(): number
    get_scope(): string
    get_v_align(): string
    get_width(): string
    set_abbr(value: string): void
    set_align(value: string): void
    set_axis(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_col_span(value: number): void
    set_headers(value: string): void
    set_height(value: string): void
    set_no_wrap(value: boolean): void
    set_row_span(value: number): void
    set_scope(value: string): void
    set_v_align(value: string): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::abbr", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::axis", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch-off", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::col-span", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::headers", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-wrap", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-span", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scope", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::v-align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableCellElement_Static {
    new (config: DOMHTMLTableCellElement_ConstructProps): DOMHTMLTableCellElement
}
export declare var DOMHTMLTableCellElement: DOMHTMLTableCellElement_Static
export interface DOMHTMLTableColElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableColElement */
    align?:string
    ch?:string
    ch_off?:string
    span?:number
    v_align?:string
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableColElement {
    /* Properties of WebKit.DOMHTMLTableColElement */
    align:string
    ch:string
    ch_off:string
    span:number
    v_align:string
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableColElement */
    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_span(): number
    get_v_align(): string
    get_width(): string
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_span(value: number): void
    set_v_align(value: string): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch-off", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::span", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::v-align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableColElement_Static {
    new (config: DOMHTMLTableColElement_ConstructProps): DOMHTMLTableColElement
}
export declare var DOMHTMLTableColElement: DOMHTMLTableColElement_Static
export interface DOMHTMLTableElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableElement */
    align?:string
    bg_color?:string
    border?:string
    cell_padding?:string
    cell_spacing?:string
    frame?:string
    rules?:string
    summary?:string
    width?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableElement {
    /* Properties of WebKit.DOMHTMLTableElement */
    align:string
    bg_color:string
    border:string
    readonly caption:DOMHTMLTableCaptionElement
    cell_padding:string
    cell_spacing:string
    frame:string
    readonly rows:DOMHTMLCollection
    rules:string
    summary:string
    readonly t_bodies:DOMHTMLCollection
    readonly t_foot:DOMHTMLTableSectionElement
    readonly t_head:DOMHTMLTableSectionElement
    width:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableElement */
    create_caption(): DOMHTMLElement
    create_t_body(): DOMHTMLElement
    create_t_foot(): DOMHTMLElement
    create_t_head(): DOMHTMLElement
    delete_caption(): void
    delete_row(index: number): void
    delete_t_foot(): void
    delete_t_head(): void
    get_align(): string
    get_bg_color(): string
    get_border(): string
    get_caption(): DOMHTMLTableCaptionElement
    get_cell_padding(): string
    get_cell_spacing(): string
    get_frame(): string
    get_rows(): DOMHTMLCollection
    get_rules(): string
    get_summary(): string
    get_t_bodies(): DOMHTMLCollection
    get_t_foot(): DOMHTMLTableSectionElement
    get_t_head(): DOMHTMLTableSectionElement
    get_width(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_border(value: string): void
    set_caption(value: DOMHTMLTableCaptionElement): void
    set_cell_padding(value: string): void
    set_cell_spacing(value: string): void
    set_frame(value: string): void
    set_rules(value: string): void
    set_summary(value: string): void
    set_t_foot(value: DOMHTMLTableSectionElement): void
    set_t_head(value: DOMHTMLTableSectionElement): void
    set_width(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::caption", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-padding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cell-spacing", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frame", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rows", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rules", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::summary", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::t-bodies", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::t-foot", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::t-head", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableElement_Static {
    new (config: DOMHTMLTableElement_ConstructProps): DOMHTMLTableElement
}
export declare var DOMHTMLTableElement: DOMHTMLTableElement_Static
export interface DOMHTMLTableRowElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableRowElement */
    align?:string
    bg_color?:string
    ch?:string
    ch_off?:string
    v_align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableRowElement {
    /* Properties of WebKit.DOMHTMLTableRowElement */
    align:string
    bg_color:string
    readonly cells:DOMHTMLCollection
    ch:string
    ch_off:string
    readonly row_index:number
    readonly section_row_index:number
    v_align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableRowElement */
    delete_cell(index: number): void
    get_align(): string
    get_bg_color(): string
    get_cells(): DOMHTMLCollection
    get_ch(): string
    get_ch_off(): string
    get_row_index(): number
    get_section_row_index(): number
    get_v_align(): string
    insert_cell(index: number): DOMHTMLElement
    set_align(value: string): void
    set_bg_color(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bg-color", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cells", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch-off", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::row-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::section-row-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::v-align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableRowElement_Static {
    new (config: DOMHTMLTableRowElement_ConstructProps): DOMHTMLTableRowElement
}
export declare var DOMHTMLTableRowElement: DOMHTMLTableRowElement_Static
export interface DOMHTMLTableSectionElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTableSectionElement */
    align?:string
    ch?:string
    ch_off?:string
    v_align?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTableSectionElement {
    /* Properties of WebKit.DOMHTMLTableSectionElement */
    align:string
    ch:string
    ch_off:string
    readonly rows:DOMHTMLCollection
    v_align:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTableSectionElement */
    delete_row(index: number): void
    get_align(): string
    get_ch(): string
    get_ch_off(): string
    get_rows(): DOMHTMLCollection
    get_v_align(): string
    insert_row(index: number): DOMHTMLElement
    set_align(value: string): void
    set_ch(value: string): void
    set_ch_off(value: string): void
    set_v_align(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ch-off", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rows", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::v-align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTableSectionElement_Static {
    new (config: DOMHTMLTableSectionElement_ConstructProps): DOMHTMLTableSectionElement
}
export declare var DOMHTMLTableSectionElement: DOMHTMLTableSectionElement_Static
export interface DOMHTMLTextAreaElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTextAreaElement */
    autocapitalize?:string
    autocorrect?:boolean
    autofocus?:boolean
    cols?:number
    default_value?:string
    dir_name?:string
    disabled?:boolean
    max_length?:number
    name?:string
    placeholder?:string
    read_only?:boolean
    required?:boolean
    rows?:number
    selection_direction?:string
    selection_end?:number
    selection_start?:number
    value?:string
    wrap?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTextAreaElement {
    /* Properties of WebKit.DOMHTMLTextAreaElement */
    autocapitalize:string
    autocorrect:boolean
    autofocus:boolean
    cols:number
    default_value:string
    dir_name:string
    disabled:boolean
    readonly form:DOMHTMLFormElement
    readonly labels:DOMNodeList
    max_length:number
    name:string
    placeholder:string
    read_only:boolean
    required:boolean
    rows:number
    selection_direction:string
    selection_end:number
    selection_start:number
    readonly text_length:number
    readonly type:string
    readonly validation_message:string
    readonly validity:DOMValidityState
    value:string
    readonly will_validate:boolean
    wrap:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTextAreaElement */
    check_validity(): boolean
    get_autocapitalize(): string
    get_autocorrect(): boolean
    get_autofocus(): boolean
    get_cols(): number
    get_default_value(): string
    get_dir_name(): string
    get_disabled(): boolean
    get_form(): DOMHTMLFormElement
    get_labels(): DOMNodeList
    get_max_length(): number
    get_name(): string
    get_placeholder(): string
    get_read_only(): boolean
    get_required(): boolean
    get_rows(): number
    get_selection_direction(): string
    get_selection_end(): number
    get_selection_start(): number
    get_text_length(): number
    get_validation_message(): string
    get_validity(): DOMValidityState
    get_value(): string
    get_will_validate(): boolean
    get_wrap(): string
    is_edited(): boolean
    select(): void
    set_autocapitalize(value: string): void
    set_autocorrect(value: boolean): void
    set_autofocus(value: boolean): void
    set_cols(value: number): void
    set_custom_validity(error: string): void
    set_default_value(value: string): void
    set_dir_name(value: string): void
    set_disabled(value: boolean): void
    set_max_length(value: number): void
    set_name(value: string): void
    set_placeholder(value: string): void
    set_range_text(replacement: string, start: number, end: number, selectionMode: string): void
    set_read_only(value: boolean): void
    set_required(value: boolean): void
    set_rows(value: number): void
    set_selection_direction(value: string): void
    set_selection_end(value: number): void
    set_selection_range(start: number, end: number, direction: string): void
    set_selection_start(value: number): void
    set_value(value: string): void
    set_wrap(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocapitalize", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autocorrect", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autofocus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cols", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::form", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::labels", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::max-length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::placeholder", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::read-only", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::required", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::rows", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-direction", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selection-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validation-message", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::validity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::will-validate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wrap", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTextAreaElement_Static {
    new (config: DOMHTMLTextAreaElement_ConstructProps): DOMHTMLTextAreaElement
}
export declare var DOMHTMLTextAreaElement: DOMHTMLTextAreaElement_Static
export interface DOMHTMLTitleElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLTitleElement */
    text?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLTitleElement {
    /* Properties of WebKit.DOMHTMLTitleElement */
    text:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLTitleElement */
    get_text(): string
    set_text(value: string): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLTitleElement_Static {
    new (config: DOMHTMLTitleElement_ConstructProps): DOMHTMLTitleElement
}
export declare var DOMHTMLTitleElement: DOMHTMLTitleElement_Static
export interface DOMHTMLUListElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLUListElement */
    compact?:boolean
    type?:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLUListElement {
    /* Properties of WebKit.DOMHTMLUListElement */
    compact:boolean
    type:string
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLUListElement */
    get_compact(): boolean
    set_compact(value: boolean): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::compact", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLUListElement_Static {
    new (config: DOMHTMLUListElement_ConstructProps): DOMHTMLUListElement
}
export declare var DOMHTMLUListElement: DOMHTMLUListElement_Static
export interface DOMHTMLVideoElement_ConstructProps {
    /* Properties of WebKit.DOMHTMLVideoElement */
    height?:number
    poster?:string
    webkit_wireless_video_playback_disabled?:boolean
    width?:number
    /* Properties of WebKit.DOMHTMLMediaElement */
    autoplay?:boolean
    controls?:boolean
    current_time?:number
    default_muted?:boolean
    default_playback_rate?:number
    loop?:boolean
    media_group?:string
    muted?:boolean
    playback_rate?:number
    preload?:string
    src?:string
    volume?:number
    webkit_closed_captions_visible?:boolean
    webkit_preserves_pitch?:boolean
    /* Properties of WebKit.DOMHTMLElement */
    access_key?:string
    content_editable?:string
    dir?:string
    draggable?:boolean
    hidden?:boolean
    inner_html?:string
    inner_text?:string
    lang?:string
    outer_html?:string
    outer_text?:string
    spellcheck?:boolean
    tab_index?:number
    title?:string
    translate?:boolean
    webkitdropzone?:string
    /* Properties of WebKit.DOMElement */
    class_name?:string
    id?:string
    scroll_left?:number
    scroll_top?:number
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHTMLVideoElement {
    /* Properties of WebKit.DOMHTMLVideoElement */
    height:number
    poster:string
    readonly video_height:number
    readonly video_width:number
    readonly webkit_decoded_frame_count:number
    readonly webkit_displaying_fullscreen:boolean
    readonly webkit_dropped_frame_count:number
    readonly webkit_supports_fullscreen:boolean
    webkit_wireless_video_playback_disabled:boolean
    width:number
    /* Properties of WebKit.DOMHTMLMediaElement */
    readonly audio_tracks:DOMAudioTrackList
    autoplay:boolean
    readonly buffered:DOMTimeRanges
    readonly controller:DOMMediaController
    controls:boolean
    readonly current_src:string
    current_time:number
    default_muted:boolean
    default_playback_rate:number
    readonly duration:number
    readonly ended:boolean
    readonly error:DOMMediaError
    loop:boolean
    media_group:string
    muted:boolean
    readonly network_state:number
    readonly paused:boolean
    playback_rate:number
    readonly played:DOMTimeRanges
    preload:string
    readonly ready_state:number
    readonly seekable:DOMTimeRanges
    readonly seeking:boolean
    src:string
    readonly text_tracks:DOMTextTrackList
    readonly video_tracks:DOMVideoTrackList
    volume:number
    readonly webkit_audio_decoded_byte_count:number
    webkit_closed_captions_visible:boolean
    readonly webkit_current_playback_target_is_wireless:boolean
    readonly webkit_has_closed_captions:boolean
    webkit_preserves_pitch:boolean
    readonly webkit_video_decoded_byte_count:number
    /* Properties of WebKit.DOMHTMLElement */
    access_key:string
    readonly children:DOMHTMLCollection
    content_editable:string
    dir:string
    draggable:boolean
    hidden:boolean
    inner_html:string
    inner_text:string
    readonly is_content_editable:boolean
    lang:string
    outer_html:string
    outer_text:string
    spellcheck:boolean
    tab_index:number
    title:string
    translate:boolean
    webkitdropzone:string
    /* Properties of WebKit.DOMElement */
    readonly attributes:DOMNamedNodeMap
    readonly child_element_count:number
    readonly class_list:DOMDOMTokenList
    class_name:string
    readonly client_height:number
    readonly client_left:number
    readonly client_top:number
    readonly client_width:number
    readonly first_element_child:DOMElement
    id:string
    readonly last_element_child:DOMElement
    readonly next_element_sibling:DOMElement
    readonly offset_height:number
    readonly offset_left:number
    readonly offset_parent:DOMElement
    readonly offset_top:number
    readonly offset_width:number
    readonly previous_element_sibling:DOMElement
    readonly scroll_height:number
    scroll_left:number
    scroll_top:number
    readonly scroll_width:number
    readonly style:DOMCSSStyleDeclaration
    readonly tag_name:string
    readonly webkit_region_overset:string
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHTMLVideoElement */
    get_height(): number
    get_poster(): string
    get_video_height(): number
    get_video_width(): number
    get_webkit_decoded_frame_count(): number
    get_webkit_displaying_fullscreen(): boolean
    get_webkit_dropped_frame_count(): number
    get_webkit_supports_fullscreen(): boolean
    get_webkit_wireless_video_playback_disabled(): boolean
    get_width(): number
    set_height(value: number): void
    set_poster(value: string): void
    set_webkit_wireless_video_playback_disabled(value: boolean): void
    set_width(value: number): void
    webkit_enter_full_screen(): void
    webkit_enter_fullscreen(): void
    webkit_exit_full_screen(): void
    webkit_exit_fullscreen(): void
    /* Methods of WebKit.DOMHTMLMediaElement */
    add_text_track(kind: string, label: string, language: string): DOMTextTrack
    can_play_type(type: string): string
    fast_seek(time: number): void
    get_audio_tracks(): DOMAudioTrackList
    get_autoplay(): boolean
    get_buffered(): DOMTimeRanges
    get_controller(): DOMMediaController
    get_controls(): boolean
    get_current_src(): string
    get_current_time(): number
    get_default_muted(): boolean
    get_default_playback_rate(): number
    get_duration(): number
    get_ended(): boolean
    get_error(): DOMMediaError
    get_initial_time(): number
    get_loop(): boolean
    get_media_group(): string
    get_muted(): boolean
    get_network_state(): number
    get_paused(): boolean
    get_playback_rate(): number
    get_played(): DOMTimeRanges
    get_preload(): string
    get_ready_state(): number
    get_seekable(): DOMTimeRanges
    get_seeking(): boolean
    get_src(): string
    get_start_time(): number
    get_text_tracks(): DOMTextTrackList
    get_video_tracks(): DOMVideoTrackList
    get_volume(): number
    get_webkit_audio_decoded_byte_count(): number
    get_webkit_closed_captions_visible(): boolean
    get_webkit_current_playback_target_is_wireless(): boolean
    get_webkit_has_closed_captions(): boolean
    get_webkit_preserves_pitch(): boolean
    get_webkit_video_decoded_byte_count(): number
    load(): void
    pause(): void
    play(): void
    set_autoplay(value: boolean): void
    set_controls(value: boolean): void
    set_current_time(value: number): void
    set_default_muted(value: boolean): void
    set_default_playback_rate(value: number): void
    set_loop(value: boolean): void
    set_media_group(value: string): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_preload(value: string): void
    set_src(value: string): void
    set_volume(value: number): void
    set_webkit_closed_captions_visible(value: boolean): void
    set_webkit_preserves_pitch(value: boolean): void
    webkit_show_playback_target_picker(): void
    /* Methods of WebKit.DOMHTMLElement */
    click(): void
    get_access_key(): string
    get_children(): DOMHTMLCollection
    get_class_list(): DOMDOMTokenList
    get_class_name(): string
    get_content_editable(): string
    get_dir(): string
    get_draggable(): boolean
    get_hidden(): boolean
    get_id(): string
    get_inner_html(): string
    get_inner_text(): string
    get_is_content_editable(): boolean
    get_item_id(): string
    get_item_prop(): DOMDOMSettableTokenList
    get_item_ref(): DOMDOMSettableTokenList
    get_item_scope(): boolean
    get_item_type(): object
    get_lang(): string
    get_outer_html(): string
    get_outer_text(): string
    get_spellcheck(): boolean
    get_tab_index(): number
    get_title(): string
    get_translate(): boolean
    get_webkitdropzone(): string
    insert_adjacent_element(where: string, element: DOMElement): DOMElement
    insert_adjacent_html(where: string, html: string): void
    insert_adjacent_text(where: string, text: string): void
    set_access_key(value: string): void
    set_class_name(value: string): void
    set_content_editable(value: string): void
    set_dir(value: string): void
    set_draggable(value: boolean): void
    set_hidden(value: boolean): void
    set_id(value: string): void
    set_inner_html(value: string): void
    set_inner_text(value: string): void
    set_item_id(value: string): void
    set_item_scope(value: boolean): void
    set_lang(value: string): void
    set_outer_html(value: string): void
    set_outer_text(value: string): void
    set_spellcheck(value: boolean): void
    set_tab_index(value: number): void
    set_title(value: string): void
    set_translate(value: boolean): void
    set_webkitdropzone(value: string): void
    /* Methods of WebKit.DOMElement */
    blur(): void
    focus(): void
    get_attribute(name: string): string
    get_attribute_node(name: string): DOMAttr
    get_attribute_node_ns(namespaceURI: string, localName: string): DOMAttr
    get_attribute_ns(namespaceURI: string, localName: string): string
    get_attributes(): DOMNamedNodeMap
    get_child_element_count(): number
    get_client_height(): number
    get_client_left(): number
    get_client_top(): number
    get_client_width(): number
    get_elements_by_class_name(name: string): DOMNodeList
    get_elements_by_tag_name(name: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_first_element_child(): DOMElement
    get_last_element_child(): DOMElement
    get_next_element_sibling(): DOMElement
    get_offset_height(): number
    get_offset_left(): number
    get_offset_parent(): DOMElement
    get_offset_top(): number
    get_offset_width(): number
    get_previous_element_sibling(): DOMElement
    get_scroll_height(): number
    get_scroll_left(): number
    get_scroll_top(): number
    get_scroll_width(): number
    get_style(): DOMCSSStyleDeclaration
    get_tag_name(): string
    get_webkit_region_overflow(): string
    get_webkit_region_overset(): string
    has_attribute(name: string): boolean
    has_attribute_ns(namespaceURI: string, localName: string): boolean
    has_attributes(): boolean
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    remove(): void
    remove_attribute(name: string): void
    remove_attribute_node(oldAttr: DOMAttr): DOMAttr
    remove_attribute_ns(namespaceURI: string, localName: string): void
    scroll_by_lines(lines: number): void
    scroll_by_pages(pages: number): void
    scroll_into_view(alignWithTop: boolean): void
    scroll_into_view_if_needed(centerIfNeeded: boolean): void
    set_attribute(name: string, value: string): void
    set_attribute_node(newAttr: DOMAttr): DOMAttr
    set_attribute_node_ns(newAttr: DOMAttr): DOMAttr
    set_attribute_ns(namespaceURI: string | null, qualifiedName: string, value: string): void
    set_scroll_left(value: number): void
    set_scroll_top(value: number): void
    webkit_matches_selector(selectors: string): boolean
    webkit_request_full_screen(flags: number): void
    webkit_request_fullscreen(): void
    webkit_request_pointer_lock(): void
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::poster", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::video-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::video-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-decoded-frame-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-displaying-fullscreen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-dropped-frame-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-supports-fullscreen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-wireless-video-playback-disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::audio-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::autoplay", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffered", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controller", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::controls", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::duration", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ended", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::error", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::loop", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-group", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::network-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paused", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::played", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::preload", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ready-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seekable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seeking", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::video-tracks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::volume", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-audio-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-closed-captions-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-current-playback-target-is-wireless", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-has-closed-captions", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-preserves-pitch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-video-decoded-byte-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::access-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::children", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dir", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::draggable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hidden", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-content-editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::lang", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::outer-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spellcheck", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::translate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkitdropzone", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-element-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::class-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-element-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-element-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scroll-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tag-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-region-overset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHTMLVideoElement_Static {
    new (config: DOMHTMLVideoElement_ConstructProps): DOMHTMLVideoElement
}
export declare var DOMHTMLVideoElement: DOMHTMLVideoElement_Static
export interface DOMHistory_ConstructProps {
    /* Properties of WebKit.DOMHistory */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMHistory {
    /* Properties of WebKit.DOMHistory */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMHistory */
    back(): void
    forward(): void
    get_length(): number
    go(distance: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMHistory_Static {
    new (config: DOMHistory_ConstructProps): DOMHistory
}
export declare var DOMHistory: DOMHistory_Static
export interface DOMKeyboardEvent_ConstructProps {
    /* Properties of WebKit.DOMKeyboardEvent */
    /* Properties of WebKit.DOMUIEvent */
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMKeyboardEvent {
    /* Properties of WebKit.DOMKeyboardEvent */
    readonly alt_graph_key:boolean
    readonly alt_key:boolean
    readonly ctrl_key:boolean
    readonly key_identifier:string
    readonly key_location:number
    readonly meta_key:boolean
    readonly shift_key:boolean
    /* Properties of WebKit.DOMUIEvent */
    readonly char_code:number
    readonly detail:number
    readonly key_code:number
    readonly layer_x:number
    readonly layer_y:number
    readonly page_x:number
    readonly page_y:number
    readonly view:DOMDOMWindow
    readonly which:number
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMKeyboardEvent */
    get_alt_graph_key(): boolean
    get_alt_key(): boolean
    get_ctrl_key(): boolean
    get_key_identifier(): string
    get_key_location(): number
    get_meta_key(): boolean
    get_modifier_state(keyIdentifierArg: string): boolean
    get_shift_key(): boolean
    init_keyboard_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, keyIdentifier: string, location: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, altGraphKey: boolean): void
    /* Methods of WebKit.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    get_which(): number
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt-graph-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ctrl-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-identifier", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-location", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::meta-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shift-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::char-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::which", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMKeyboardEvent_Static {
    new (config: DOMKeyboardEvent_ConstructProps): DOMKeyboardEvent
}
export declare var DOMKeyboardEvent: DOMKeyboardEvent_Static
export interface DOMLocation_ConstructProps {
    /* Properties of WebKit.DOMLocation */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMLocation {
    /* Properties of WebKit.DOMLocation */
    readonly ancestor_origins:DOMDOMStringList
    readonly hash:string
    readonly host:string
    readonly hostname:string
    readonly href:string
    readonly origin:string
    readonly pathname:string
    readonly port:string
    readonly protocol:string
    readonly search:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMLocation */
    get_ancestor_origins(): DOMDOMStringList
    get_hash(): string
    get_host(): string
    get_hostname(): string
    get_href(): string
    get_origin(): string
    get_pathname(): string
    get_port(): string
    get_protocol(): string
    get_search(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ancestor-origins", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hash", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::host", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hostname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::origin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pathname", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::port", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::protocol", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::search", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMLocation_Static {
    new (config: DOMLocation_ConstructProps): DOMLocation
}
export declare var DOMLocation: DOMLocation_Static
export interface DOMMediaController_ConstructProps {
    /* Properties of WebKit.DOMMediaController */
    current_time?:number
    default_playback_rate?:number
    muted?:boolean
    playback_rate?:number
    volume?:number
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMediaController {
    /* Properties of WebKit.DOMMediaController */
    readonly buffered:DOMTimeRanges
    current_time:number
    default_playback_rate:number
    readonly duration:number
    muted:boolean
    readonly paused:boolean
    playback_rate:number
    readonly playback_state:string
    readonly played:DOMTimeRanges
    readonly seekable:DOMTimeRanges
    volume:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMMediaController */
    get_buffered(): DOMTimeRanges
    get_current_time(): number
    get_default_playback_rate(): number
    get_duration(): number
    get_muted(): boolean
    get_paused(): boolean
    get_playback_rate(): number
    get_playback_state(): string
    get_played(): DOMTimeRanges
    get_seekable(): DOMTimeRanges
    get_volume(): number
    pause(): void
    play(): void
    set_current_time(value: number): void
    set_default_playback_rate(value: number): void
    set_muted(value: boolean): void
    set_playback_rate(value: number): void
    set_volume(value: number): void
    unpause(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::buffered", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::duration", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::muted", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paused", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::playback-rate", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::playback-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::played", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::seekable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::volume", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMediaController_Static {
    new (config: DOMMediaController_ConstructProps): DOMMediaController
}
export declare var DOMMediaController: DOMMediaController_Static
export interface DOMMediaError_ConstructProps {
    /* Properties of WebKit.DOMMediaError */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMediaError {
    /* Properties of WebKit.DOMMediaError */
    readonly code:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMMediaError */
    get_code(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::code", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMediaError_Static {
    new (config: DOMMediaError_ConstructProps): DOMMediaError
}
export declare var DOMMediaError: DOMMediaError_Static
export interface DOMMediaList_ConstructProps {
    /* Properties of WebKit.DOMMediaList */
    media_text?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMediaList {
    /* Properties of WebKit.DOMMediaList */
    readonly length:number
    media_text:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMMediaList */
    append_medium(newMedium: string): void
    delete_medium(oldMedium: string): void
    get_length(): number
    get_media_text(): string
    item(index: number): string
    set_media_text(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-text", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMediaList_Static {
    new (config: DOMMediaList_ConstructProps): DOMMediaList
}
export declare var DOMMediaList: DOMMediaList_Static
export interface DOMMediaQueryList_ConstructProps {
    /* Properties of WebKit.DOMMediaQueryList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMediaQueryList {
    /* Properties of WebKit.DOMMediaQueryList */
    readonly matches:boolean
    readonly media:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMMediaQueryList */
    get_matches(): boolean
    get_media(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::matches", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMediaQueryList_Static {
    new (config: DOMMediaQueryList_ConstructProps): DOMMediaQueryList
}
export declare var DOMMediaQueryList: DOMMediaQueryList_Static
export interface DOMMemoryInfo_ConstructProps {
    /* Properties of WebKit.DOMMemoryInfo */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMemoryInfo {
    /* Properties of WebKit.DOMMemoryInfo */
    readonly js_heap_size_limit:number
    readonly total_js_heap_size:number
    readonly used_js_heap_size:number
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::js-heap-size-limit", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::total-js-heap-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::used-js-heap-size", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMemoryInfo_Static {
    new (config: DOMMemoryInfo_ConstructProps): DOMMemoryInfo
}
export declare class DOMMemoryInfo_Static {
    get_js_heap_size_limit(self: object): number
    get_total_js_heap_size(self: object): number
    get_used_js_heap_size(self: object): number
}
export declare var DOMMemoryInfo: DOMMemoryInfo_Static
export interface DOMMessagePort_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMessagePort {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMessagePort_Static {
    new (config: DOMMessagePort_ConstructProps): DOMMessagePort
}
export declare var DOMMessagePort: DOMMessagePort_Static
export interface DOMMicroDataItemValue_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMicroDataItemValue {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMicroDataItemValue_Static {
    new (config: DOMMicroDataItemValue_ConstructProps): DOMMicroDataItemValue
}
export declare var DOMMicroDataItemValue: DOMMicroDataItemValue_Static
export interface DOMMouseEvent_ConstructProps {
    /* Properties of WebKit.DOMMouseEvent */
    /* Properties of WebKit.DOMUIEvent */
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMMouseEvent {
    /* Properties of WebKit.DOMMouseEvent */
    readonly alt_key:boolean
    readonly button:number
    readonly client_x:number
    readonly client_y:number
    readonly ctrl_key:boolean
    readonly from_element:DOMNode
    readonly meta_key:boolean
    readonly offset_x:number
    readonly offset_y:number
    readonly related_target:DOMEventTarget
    readonly screen_x:number
    readonly screen_y:number
    readonly shift_key:boolean
    readonly to_element:DOMNode
    readonly webkit_movement_x:number
    readonly webkit_movement_y:number
    readonly x:number
    readonly y:number
    /* Properties of WebKit.DOMUIEvent */
    readonly char_code:number
    readonly detail:number
    readonly key_code:number
    readonly layer_x:number
    readonly layer_y:number
    readonly page_x:number
    readonly page_y:number
    readonly view:DOMDOMWindow
    readonly which:number
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMMouseEvent */
    get_alt_key(): boolean
    get_button(): number
    get_client_x(): number
    get_client_y(): number
    get_ctrl_key(): boolean
    get_from_element(): DOMNode
    get_meta_key(): boolean
    get_offset_x(): number
    get_offset_y(): number
    get_related_target(): DOMEventTarget
    get_screen_x(): number
    get_screen_y(): number
    get_shift_key(): boolean
    get_to_element(): DOMNode
    get_webkit_movement_x(): number
    get_webkit_movement_y(): number
    get_x(): number
    get_y(): number
    init_mouse_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, button: number, relatedTarget: DOMEventTarget): void
    /* Methods of WebKit.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    get_which(): number
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::button", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ctrl-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::from-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::meta-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shift-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::to-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-movement-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-movement-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::char-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::which", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMMouseEvent_Static {
    new (config: DOMMouseEvent_ConstructProps): DOMMouseEvent
}
export declare var DOMMouseEvent: DOMMouseEvent_Static
export interface DOMNamedNodeMap_ConstructProps {
    /* Properties of WebKit.DOMNamedNodeMap */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNamedNodeMap {
    /* Properties of WebKit.DOMNamedNodeMap */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNamedNodeMap */
    get_length(): number
    get_named_item(name: string): DOMNode
    get_named_item_ns(namespaceURI: string, localName: string): DOMNode
    item(index: number): DOMNode
    remove_named_item(name: string): DOMNode
    remove_named_item_ns(namespaceURI: string, localName: string): DOMNode
    set_named_item(node: DOMNode): DOMNode
    set_named_item_ns(node: DOMNode): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNamedNodeMap_Static {
    new (config: DOMNamedNodeMap_ConstructProps): DOMNamedNodeMap
}
export declare var DOMNamedNodeMap: DOMNamedNodeMap_Static
export interface DOMNavigator_ConstructProps {
    /* Properties of WebKit.DOMNavigator */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNavigator {
    /* Properties of WebKit.DOMNavigator */
    readonly app_code_name:string
    readonly app_name:string
    readonly app_version:string
    readonly cookie_enabled:boolean
    readonly geolocation:DOMGeolocation
    readonly language:string
    readonly mime_types:DOMDOMMimeTypeArray
    readonly on_line:boolean
    readonly platform:string
    readonly plugins:DOMDOMPluginArray
    readonly product:string
    readonly product_sub:string
    readonly user_agent:string
    readonly vendor:string
    readonly vendor_sub:string
    readonly webkit_battery:DOMBatteryManager
    readonly webkit_persistent_storage:DOMStorageQuota
    readonly webkit_temporary_storage:DOMStorageQuota
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNavigator */
    get_app_code_name(): string
    get_app_name(): string
    get_app_version(): string
    get_cookie_enabled(): boolean
    get_geolocation(): DOMGeolocation
    get_language(): string
    get_mime_types(): DOMDOMMimeTypeArray
    get_on_line(): boolean
    get_platform(): string
    get_plugins(): DOMDOMPluginArray
    get_product(): string
    get_product_sub(): string
    get_storage_updates(): void
    get_user_agent(): string
    get_vendor(): string
    get_vendor_sub(): string
    get_webkit_battery(): DOMBatteryManager
    get_webkit_persistent_storage(): DOMStorageQuota
    get_webkit_temporary_storage(): DOMStorageQuota
    is_protocol_handler_registered(scheme: string, url: string): string
    java_enabled(): boolean
    register_protocol_handler(scheme: string, url: string, title: string): void
    unregister_protocol_handler(scheme: string, url: string): void
    webkit_get_gamepads(): DOMGamepadList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-code-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-version", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cookie-enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::geolocation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mime-types", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::on-line", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::platform", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::plugins", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::product", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::product-sub", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::user-agent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vendor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vendor-sub", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-battery", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-persistent-storage", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-temporary-storage", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNavigator_Static {
    new (config: DOMNavigator_ConstructProps): DOMNavigator
}
export declare var DOMNavigator: DOMNavigator_Static
export interface DOMNode_ConstructProps {
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNode {
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNode_Static {
    new (config: DOMNode_ConstructProps): DOMNode
}
export declare var DOMNode: DOMNode_Static
export interface DOMNodeFilter_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNodeFilter {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNodeFilter */
    accept_node(n: DOMNode): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNodeFilter_Static {
    new (config: DOMNodeFilter_ConstructProps): DOMNodeFilter
}
export declare var DOMNodeFilter: DOMNodeFilter_Static
export interface DOMNodeIterator_ConstructProps {
    /* Properties of WebKit.DOMNodeIterator */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNodeIterator {
    /* Properties of WebKit.DOMNodeIterator */
    readonly expand_entity_references:boolean
    readonly filter:DOMNodeFilter
    readonly pointer_before_reference_node:boolean
    readonly reference_node:DOMNode
    readonly root:DOMNode
    readonly what_to_show:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNodeIterator */
    detach(): void
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_pointer_before_reference_node(): boolean
    get_reference_node(): DOMNode
    get_root(): DOMNode
    get_what_to_show(): number
    next_node(): DOMNode
    previous_node(): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand-entity-references", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pointer-before-reference-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reference-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::root", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::what-to-show", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNodeIterator_Static {
    new (config: DOMNodeIterator_ConstructProps): DOMNodeIterator
}
export declare var DOMNodeIterator: DOMNodeIterator_Static
export interface DOMNodeList_ConstructProps {
    /* Properties of WebKit.DOMNodeList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMNodeList {
    /* Properties of WebKit.DOMNodeList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNodeList */
    get_length(): number
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMNodeList_Static {
    new (config: DOMNodeList_ConstructProps): DOMNodeList
}
export declare var DOMNodeList: DOMNodeList_Static
export interface DOMObject_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMObject {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMObject_Static {
    new (config: DOMObject_ConstructProps): DOMObject
}
export declare var DOMObject: DOMObject_Static
export interface DOMPerformance_ConstructProps {
    /* Properties of WebKit.DOMPerformance */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPerformance {
    /* Properties of WebKit.DOMPerformance */
    readonly navigation:DOMPerformanceNavigation
    readonly timing:DOMPerformanceTiming
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMPerformance */
    get_memory(): object
    get_navigation(): DOMPerformanceNavigation
    get_timing(): DOMPerformanceTiming
    now(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::navigation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::timing", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPerformance_Static {
    new (config: DOMPerformance_ConstructProps): DOMPerformance
}
export declare var DOMPerformance: DOMPerformance_Static
export interface DOMPerformanceEntry_ConstructProps {
    /* Properties of WebKit.DOMPerformanceEntry */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPerformanceEntry {
    /* Properties of WebKit.DOMPerformanceEntry */
    readonly duration:number
    readonly entry_type:string
    readonly name:string
    readonly start_time:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMPerformanceEntry */
    get_duration(): number
    get_entry_type(): string
    get_name(): string
    get_start_time(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::duration", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::entry-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::start-time", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPerformanceEntry_Static {
    new (config: DOMPerformanceEntry_ConstructProps): DOMPerformanceEntry
}
export declare var DOMPerformanceEntry: DOMPerformanceEntry_Static
export interface DOMPerformanceEntryList_ConstructProps {
    /* Properties of WebKit.DOMPerformanceEntryList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPerformanceEntryList {
    /* Properties of WebKit.DOMPerformanceEntryList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMPerformanceEntryList */
    get_length(): number
    item(index: number): DOMPerformanceEntry
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPerformanceEntryList_Static {
    new (config: DOMPerformanceEntryList_ConstructProps): DOMPerformanceEntryList
}
export declare var DOMPerformanceEntryList: DOMPerformanceEntryList_Static
export interface DOMPerformanceNavigation_ConstructProps {
    /* Properties of WebKit.DOMPerformanceNavigation */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPerformanceNavigation {
    /* Properties of WebKit.DOMPerformanceNavigation */
    readonly redirect_count:number
    readonly type:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMPerformanceNavigation */
    get_redirect_count(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::redirect-count", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPerformanceNavigation_Static {
    new (config: DOMPerformanceNavigation_ConstructProps): DOMPerformanceNavigation
}
export declare var DOMPerformanceNavigation: DOMPerformanceNavigation_Static
export interface DOMPerformanceTiming_ConstructProps {
    /* Properties of WebKit.DOMPerformanceTiming */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPerformanceTiming {
    /* Properties of WebKit.DOMPerformanceTiming */
    readonly connect_end:number
    readonly connect_start:number
    readonly dom_complete:number
    readonly dom_content_loaded_event_end:number
    readonly dom_content_loaded_event_start:number
    readonly dom_interactive:number
    readonly dom_loading:number
    readonly domain_lookup_end:number
    readonly domain_lookup_start:number
    readonly fetch_start:number
    readonly load_event_end:number
    readonly load_event_start:number
    readonly navigation_start:number
    readonly redirect_end:number
    readonly redirect_start:number
    readonly request_start:number
    readonly response_end:number
    readonly response_start:number
    readonly secure_connection_start:number
    readonly unload_event_end:number
    readonly unload_event_start:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMPerformanceTiming */
    get_connect_end(): number
    get_connect_start(): number
    get_dom_complete(): number
    get_dom_content_loaded_event_end(): number
    get_dom_content_loaded_event_start(): number
    get_dom_interactive(): number
    get_dom_loading(): number
    get_domain_lookup_end(): number
    get_domain_lookup_start(): number
    get_fetch_start(): number
    get_load_event_end(): number
    get_load_event_start(): number
    get_navigation_start(): number
    get_redirect_end(): number
    get_redirect_start(): number
    get_request_start(): number
    get_response_end(): number
    get_response_start(): number
    get_secure_connection_start(): number
    get_unload_event_end(): number
    get_unload_event_start(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::connect-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::connect-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dom-complete", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dom-content-loaded-event-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dom-content-loaded-event-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dom-interactive", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dom-loading", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::domain-lookup-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::domain-lookup-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fetch-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::load-event-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::load-event-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::navigation-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::redirect-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::redirect-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::request-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::response-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::response-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::secure-connection-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::unload-event-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::unload-event-start", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPerformanceTiming_Static {
    new (config: DOMPerformanceTiming_ConstructProps): DOMPerformanceTiming
}
export declare var DOMPerformanceTiming: DOMPerformanceTiming_Static
export interface DOMProcessingInstruction_ConstructProps {
    /* Properties of WebKit.DOMProcessingInstruction */
    /* Properties of WebKit.DOMCharacterData */
    data?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMProcessingInstruction {
    /* Properties of WebKit.DOMProcessingInstruction */
    readonly sheet:DOMStyleSheet
    readonly target:string
    /* Properties of WebKit.DOMCharacterData */
    data:string
    readonly length:number
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMProcessingInstruction */
    get_data(): string
    get_sheet(): DOMStyleSheet
    get_target(): string
    set_data(value: string): void
    /* Methods of WebKit.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMProcessingInstruction_Static {
    new (config: DOMProcessingInstruction_ConstructProps): DOMProcessingInstruction
}
export declare var DOMProcessingInstruction: DOMProcessingInstruction_Static
export interface DOMPropertyNodeList_ConstructProps {
    /* Properties of WebKit.DOMPropertyNodeList */
    /* Properties of WebKit.DOMNodeList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMPropertyNodeList {
    /* Properties of WebKit.DOMPropertyNodeList */
    readonly length:number
    /* Properties of WebKit.DOMNodeList */
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMNodeList */
    get_length(): number
    item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMPropertyNodeList_Static {
    new (config: DOMPropertyNodeList_ConstructProps): DOMPropertyNodeList
}
export declare class DOMPropertyNodeList_Static {
    get_length(self: object): number
    item(self: object, index: number): DOMNode
}
export declare var DOMPropertyNodeList: DOMPropertyNodeList_Static
export interface DOMRange_ConstructProps {
    /* Properties of WebKit.DOMRange */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMRange {
    /* Properties of WebKit.DOMRange */
    readonly collapsed:boolean
    readonly common_ancestor_container:DOMNode
    readonly end_container:DOMNode
    readonly end_offset:number
    readonly start_container:DOMNode
    readonly start_offset:number
    readonly text:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMRange */
    clone_contents(): DOMDocumentFragment
    clone_range(): DOMRange
    collapse(toStart: boolean): void
    compare_boundary_points(how: number, sourceRange: DOMRange): number
    compare_node(refNode: DOMNode): number
    compare_point(refNode: DOMNode, offset: number): number
    create_contextual_fragment(html: string): DOMDocumentFragment
    delete_contents(): void
    detach(): void
    expand(unit: string): void
    extract_contents(): DOMDocumentFragment
    get_collapsed(): boolean
    get_common_ancestor_container(): DOMNode
    get_end_container(): DOMNode
    get_end_offset(): number
    get_start_container(): DOMNode
    get_start_offset(): number
    get_text(): string
    insert_node(newNode: DOMNode): void
    intersects_node(refNode: DOMNode): boolean
    is_point_in_range(refNode: DOMNode, offset: number): boolean
    select_node(refNode: DOMNode): void
    select_node_contents(refNode: DOMNode): void
    set_end(refNode: DOMNode, offset: number): void
    set_end_after(refNode: DOMNode): void
    set_end_before(refNode: DOMNode): void
    set_start(refNode: DOMNode, offset: number): void
    set_start_after(refNode: DOMNode): void
    set_start_before(refNode: DOMNode): void
    surround_contents(newParent: DOMNode): void
    to_string(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::collapsed", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::common-ancestor-container", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::end-container", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::end-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::start-container", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::start-offset", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMRange_Static {
    new (config: DOMRange_ConstructProps): DOMRange
}
export declare var DOMRange: DOMRange_Static
export interface DOMScreen_ConstructProps {
    /* Properties of WebKit.DOMScreen */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMScreen {
    /* Properties of WebKit.DOMScreen */
    readonly avail_height:number
    readonly avail_left:number
    readonly avail_top:number
    readonly avail_width:number
    readonly color_depth:number
    readonly height:number
    readonly pixel_depth:number
    readonly width:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMScreen */
    get_avail_height(): number
    get_avail_left(): number
    get_avail_top(): number
    get_avail_width(): number
    get_color_depth(): number
    get_height(): number
    get_pixel_depth(): number
    get_width(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::avail-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::avail-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::avail-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::avail-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::color-depth", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pixel-depth", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMScreen_Static {
    new (config: DOMScreen_ConstructProps): DOMScreen
}
export declare var DOMScreen: DOMScreen_Static
export interface DOMShadowRoot_ConstructProps {
    /* Properties of WebKit.DOMShadowRoot */
    apply_author_styles?:boolean
    inner_html?:string
    reset_style_inheritance?:boolean
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMShadowRoot {
    /* Properties of WebKit.DOMShadowRoot */
    readonly active_element:DOMElement
    apply_author_styles:boolean
    inner_html:string
    reset_style_inheritance:boolean
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMShadowRoot */
    element_from_point(x: number, y: number): DOMElement
    get_active_element(): DOMElement
    get_apply_author_styles(): boolean
    get_element_by_id(elementId: string): DOMElement
    get_elements_by_class_name(className: string): DOMNodeList
    get_elements_by_tag_name(tagName: string): DOMNodeList
    get_elements_by_tag_name_ns(namespaceURI: string, localName: string): DOMNodeList
    get_inner_html(): string
    get_reset_style_inheritance(): boolean
    get_selection(): DOMDOMSelection
    set_apply_author_styles(value: boolean): void
    set_inner_html(value: string): void
    set_reset_style_inheritance(value: boolean): void
    /* Methods of WebKit.DOMDocumentFragment */
    query_selector(selectors: string): DOMElement
    query_selector_all(selectors: string): DOMNodeList
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::apply-author-styles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inner-html", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reset-style-inheritance", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMShadowRoot_Static {
    new (config: DOMShadowRoot_ConstructProps): DOMShadowRoot
}
export declare var DOMShadowRoot: DOMShadowRoot_Static
export interface DOMStorage_ConstructProps {
    /* Properties of WebKit.DOMStorage */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStorage {
    /* Properties of WebKit.DOMStorage */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMStorage */
    clear(): void
    get_item(key: string): string
    get_length(): number
    key(index: number): string
    remove_item(key: string): void
    set_item(key: string, data: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStorage_Static {
    new (config: DOMStorage_ConstructProps): DOMStorage
}
export declare var DOMStorage: DOMStorage_Static
export interface DOMStorageInfo_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStorageInfo {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStorageInfo_Static {
    new (config: DOMStorageInfo_ConstructProps): DOMStorageInfo
}
export declare var DOMStorageInfo: DOMStorageInfo_Static
export interface DOMStorageQuota_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStorageQuota {
    /* Properties of WebKit.DOMObject */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStorageQuota_Static {
    new (config: DOMStorageQuota_ConstructProps): DOMStorageQuota
}
export declare var DOMStorageQuota: DOMStorageQuota_Static
export interface DOMStyleMedia_ConstructProps {
    /* Properties of WebKit.DOMStyleMedia */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStyleMedia {
    /* Properties of WebKit.DOMStyleMedia */
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMStyleMedia */
    match_medium(mediaquery: string): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStyleMedia_Static {
    new (config: DOMStyleMedia_ConstructProps): DOMStyleMedia
}
export declare var DOMStyleMedia: DOMStyleMedia_Static
export interface DOMStyleSheet_ConstructProps {
    /* Properties of WebKit.DOMStyleSheet */
    disabled?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStyleSheet {
    /* Properties of WebKit.DOMStyleSheet */
    disabled:boolean
    readonly href:string
    readonly media:DOMMediaList
    readonly owner_node:DOMNode
    readonly parent_style_sheet:DOMStyleSheet
    readonly title:string
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMStyleSheet */
    get_disabled(): boolean
    get_href(): string
    get_media(): DOMMediaList
    get_owner_node(): DOMNode
    get_parent_style_sheet(): DOMStyleSheet
    get_title(): string
    set_disabled(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::disabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::href", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-style-sheet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStyleSheet_Static {
    new (config: DOMStyleSheet_ConstructProps): DOMStyleSheet
}
export declare var DOMStyleSheet: DOMStyleSheet_Static
export interface DOMStyleSheetList_ConstructProps {
    /* Properties of WebKit.DOMStyleSheetList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMStyleSheetList {
    /* Properties of WebKit.DOMStyleSheetList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMStyleSheetList */
    get_length(): number
    item(index: number): DOMStyleSheet
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMStyleSheetList_Static {
    new (config: DOMStyleSheetList_ConstructProps): DOMStyleSheetList
}
export declare var DOMStyleSheetList: DOMStyleSheetList_Static
export interface DOMText_ConstructProps {
    /* Properties of WebKit.DOMText */
    /* Properties of WebKit.DOMCharacterData */
    data?:string
    /* Properties of WebKit.DOMNode */
    node_value?:string
    prefix?:string
    text_content?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMText {
    /* Properties of WebKit.DOMText */
    readonly whole_text:string
    /* Properties of WebKit.DOMCharacterData */
    data:string
    readonly length:number
    /* Properties of WebKit.DOMNode */
    readonly base_uri:string
    readonly child_nodes:DOMNodeList
    readonly first_child:DOMNode
    readonly last_child:DOMNode
    readonly local_name:string
    readonly namespace_uri:string
    readonly next_sibling:DOMNode
    readonly node_name:string
    readonly node_type:number
    node_value:string
    readonly owner_document:DOMDocument
    readonly parent_element:DOMElement
    readonly parent_node:DOMNode
    prefix:string
    readonly previous_sibling:DOMNode
    text_content:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMText */
    get_whole_text(): string
    replace_whole_text(content: string): DOMText
    split_text(offset: number): DOMText
    /* Methods of WebKit.DOMCharacterData */
    append_data(data: string): void
    delete_data(offset: number, length: number): void
    get_data(): string
    get_length(): number
    insert_data(offset: number, data: string): void
    remove(): void
    replace_data(offset: number, length: number, data: string): void
    set_data(value: string): void
    substring_data(offset: number, length: number): string
    /* Methods of WebKit.DOMNode */
    append_child(newChild: DOMNode): DOMNode
    clone_node(deep: boolean): DOMNode
    compare_document_position(other: DOMNode): number
    contains(other: DOMNode): boolean
    dispatch_event(event: DOMEvent): boolean
    get_attributes(): DOMNamedNodeMap
    get_base_uri(): string
    get_child_nodes(): DOMNodeList
    get_first_child(): DOMNode
    get_last_child(): DOMNode
    get_local_name(): string
    get_namespace_uri(): string
    get_next_sibling(): DOMNode
    get_node_name(): string
    get_node_type(): number
    get_node_value(): string
    get_owner_document(): DOMDocument
    get_parent_element(): DOMElement
    get_parent_node(): DOMNode
    get_prefix(): string
    get_previous_sibling(): DOMNode
    get_text_content(): string
    has_attributes(): boolean
    has_child_nodes(): boolean
    insert_before(newChild: DOMNode, refChild: DOMNode | null): DOMNode
    is_default_namespace(namespaceURI: string): boolean
    is_equal_node(other: DOMNode): boolean
    is_same_node(other: DOMNode): boolean
    is_supported(feature: string, version: string): boolean
    lookup_namespace_uri(prefix: string): string
    lookup_prefix(namespaceURI: string): string
    normalize(): void
    remove_child(oldChild: DOMNode): DOMNode
    replace_child(newChild: DOMNode, oldChild: DOMNode): DOMNode
    set_node_value(value: string): void
    set_prefix(value: string): void
    set_text_content(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::whole-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::data", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::base-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child-nodes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::local-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::namespace-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::next-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::owner-document", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::prefix", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::previous-sibling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text-content", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMText_Static {
    new (config: DOMText_ConstructProps): DOMText
}
export declare var DOMText: DOMText_Static
export interface DOMTextTrack_ConstructProps {
    /* Properties of WebKit.DOMTextTrack */
    mode?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTextTrack {
    /* Properties of WebKit.DOMTextTrack */
    readonly active_cues:DOMTextTrackCueList
    readonly cues:DOMTextTrackCueList
    readonly id:string
    readonly kind:string
    readonly label:string
    readonly language:string
    mode:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTextTrack */
    add_cue(cue: DOMTextTrackCue): void
    dispatch_event(evt: DOMEvent): boolean
    get_active_cues(): DOMTextTrackCueList
    get_cues(): DOMTextTrackCueList
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    get_mode(): string
    remove_cue(cue: DOMTextTrackCue): void
    set_mode(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::active-cues", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cues", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::kind", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mode", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTextTrack_Static {
    new (config: DOMTextTrack_ConstructProps): DOMTextTrack
}
export declare var DOMTextTrack: DOMTextTrack_Static
export interface DOMTextTrackCue_ConstructProps {
    /* Properties of WebKit.DOMTextTrackCue */
    align?:string
    end_time?:number
    id?:string
    line?:number
    pause_on_exit?:boolean
    position?:number
    size?:number
    snap_to_lines?:boolean
    start_time?:number
    text?:string
    vertical?:string
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTextTrackCue {
    /* Properties of WebKit.DOMTextTrackCue */
    align:string
    end_time:number
    id:string
    line:number
    pause_on_exit:boolean
    position:number
    size:number
    snap_to_lines:boolean
    start_time:number
    text:string
    readonly track:DOMTextTrack
    vertical:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTextTrackCue */
    dispatch_event(evt: DOMEvent): boolean
    get_align(): string
    get_cue_as_html(): DOMDocumentFragment
    get_end_time(): number
    get_id(): string
    get_line(): number
    get_pause_on_exit(): boolean
    get_position(): number
    get_size(): number
    get_snap_to_lines(): boolean
    get_start_time(): number
    get_text(): string
    get_track(): DOMTextTrack
    get_vertical(): string
    set_align(value: string): void
    set_end_time(value: number): void
    set_id(value: string): void
    set_line(value: number): void
    set_pause_on_exit(value: boolean): void
    set_position(value: number): void
    set_size(value: number): void
    set_snap_to_lines(value: boolean): void
    set_start_time(value: number): void
    set_text(value: string): void
    set_vertical(value: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::align", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::end-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::line", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pause-on-exit", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::position", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::snap-to-lines", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::start-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::track", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vertical", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTextTrackCue_Static {
    new (config: DOMTextTrackCue_ConstructProps): DOMTextTrackCue
}
export declare var DOMTextTrackCue: DOMTextTrackCue_Static
export interface DOMTextTrackCueList_ConstructProps {
    /* Properties of WebKit.DOMTextTrackCueList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTextTrackCueList {
    /* Properties of WebKit.DOMTextTrackCueList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTextTrackCueList */
    get_cue_by_id(id: string): DOMTextTrackCue
    get_length(): number
    item(index: number): DOMTextTrackCue
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTextTrackCueList_Static {
    new (config: DOMTextTrackCueList_ConstructProps): DOMTextTrackCueList
}
export declare var DOMTextTrackCueList: DOMTextTrackCueList_Static
export interface DOMTextTrackList_ConstructProps {
    /* Properties of WebKit.DOMTextTrackList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTextTrackList {
    /* Properties of WebKit.DOMTextTrackList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTextTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMTextTrack
    item(index: number): DOMTextTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTextTrackList_Static {
    new (config: DOMTextTrackList_ConstructProps): DOMTextTrackList
}
export declare var DOMTextTrackList: DOMTextTrackList_Static
export interface DOMTimeRanges_ConstructProps {
    /* Properties of WebKit.DOMTimeRanges */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTimeRanges {
    /* Properties of WebKit.DOMTimeRanges */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTimeRanges */
    end(index: number): number
    get_length(): number
    start(index: number): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTimeRanges_Static {
    new (config: DOMTimeRanges_ConstructProps): DOMTimeRanges
}
export declare var DOMTimeRanges: DOMTimeRanges_Static
export interface DOMTouch_ConstructProps {
    /* Properties of WebKit.DOMTouch */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTouch {
    /* Properties of WebKit.DOMTouch */
    readonly client_x:number
    readonly client_y:number
    readonly identifier:number
    readonly page_x:number
    readonly page_y:number
    readonly screen_x:number
    readonly screen_y:number
    readonly target:DOMEventTarget
    readonly webkit_force:number
    readonly webkit_radius_x:number
    readonly webkit_radius_y:number
    readonly webkit_rotation_angle:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTouch */
    get_client_x(): number
    get_client_y(): number
    get_identifier(): number
    get_page_x(): number
    get_page_y(): number
    get_screen_x(): number
    get_screen_y(): number
    get_target(): DOMEventTarget
    get_webkit_force(): number
    get_webkit_radius_x(): number
    get_webkit_radius_y(): number
    get_webkit_rotation_angle(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::identifier", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-force", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-radius-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-radius-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-rotation-angle", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTouch_Static {
    new (config: DOMTouch_ConstructProps): DOMTouch
}
export declare var DOMTouch: DOMTouch_Static
export interface DOMTrackEvent_ConstructProps {
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTrackEvent {
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTrackEvent_Static {
    new (config: DOMTrackEvent_ConstructProps): DOMTrackEvent
}
export declare var DOMTrackEvent: DOMTrackEvent_Static
export interface DOMTreeWalker_ConstructProps {
    /* Properties of WebKit.DOMTreeWalker */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMTreeWalker {
    /* Properties of WebKit.DOMTreeWalker */
    readonly current_node:DOMNode
    readonly expand_entity_references:boolean
    readonly filter:DOMNodeFilter
    readonly root:DOMNode
    readonly what_to_show:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMTreeWalker */
    first_child(): DOMNode
    get_current_node(): DOMNode
    get_expand_entity_references(): boolean
    get_filter(): DOMNodeFilter
    get_root(): DOMNode
    get_what_to_show(): number
    last_child(): DOMNode
    next_node(): DOMNode
    next_sibling(): DOMNode
    parent_node(): DOMNode
    previous_node(): DOMNode
    previous_sibling(): DOMNode
    set_current_node(value: DOMNode): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-node", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand-entity-references", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::root", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::what-to-show", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMTreeWalker_Static {
    new (config: DOMTreeWalker_ConstructProps): DOMTreeWalker
}
export declare var DOMTreeWalker: DOMTreeWalker_Static
export interface DOMUIEvent_ConstructProps {
    /* Properties of WebKit.DOMUIEvent */
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMUIEvent {
    /* Properties of WebKit.DOMUIEvent */
    readonly char_code:number
    readonly detail:number
    readonly key_code:number
    readonly layer_x:number
    readonly layer_y:number
    readonly page_x:number
    readonly page_y:number
    readonly view:DOMDOMWindow
    readonly which:number
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    get_which(): number
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::char-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::which", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMUIEvent_Static {
    new (config: DOMUIEvent_ConstructProps): DOMUIEvent
}
export declare var DOMUIEvent: DOMUIEvent_Static
export interface DOMValidityState_ConstructProps {
    /* Properties of WebKit.DOMValidityState */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMValidityState {
    /* Properties of WebKit.DOMValidityState */
    readonly bad_input:boolean
    readonly custom_error:boolean
    readonly pattern_mismatch:boolean
    readonly range_overflow:boolean
    readonly range_underflow:boolean
    readonly step_mismatch:boolean
    readonly too_long:boolean
    readonly type_mismatch:boolean
    readonly valid:boolean
    readonly value_missing:boolean
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMValidityState */
    get_bad_input(): boolean
    get_custom_error(): boolean
    get_pattern_mismatch(): boolean
    get_range_overflow(): boolean
    get_range_underflow(): boolean
    get_step_mismatch(): boolean
    get_too_long(): boolean
    get_type_mismatch(): boolean
    get_valid(): boolean
    get_value_missing(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bad-input", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::custom-error", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::pattern-mismatch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::range-overflow", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::range-underflow", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::step-mismatch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::too-long", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type-mismatch", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valid", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::value-missing", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMValidityState_Static {
    new (config: DOMValidityState_ConstructProps): DOMValidityState
}
export declare var DOMValidityState: DOMValidityState_Static
export interface DOMVideoPlaybackQuality_ConstructProps {
    /* Properties of WebKit.DOMVideoPlaybackQuality */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMVideoPlaybackQuality {
    /* Properties of WebKit.DOMVideoPlaybackQuality */
    readonly corrupted_video_frames:number
    readonly creation_time:number
    readonly dropped_video_frames:number
    readonly total_frame_delay:number
    readonly total_video_frames:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMVideoPlaybackQuality */
    get_corrupted_video_frames(): number
    get_creation_time(): number
    get_dropped_video_frames(): number
    get_total_frame_delay(): number
    get_total_video_frames(): number
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::corrupted-video-frames", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::creation-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::dropped-video-frames", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::total-frame-delay", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::total-video-frames", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMVideoPlaybackQuality_Static {
    new (config: DOMVideoPlaybackQuality_ConstructProps): DOMVideoPlaybackQuality
}
export declare var DOMVideoPlaybackQuality: DOMVideoPlaybackQuality_Static
export interface DOMVideoTrack_ConstructProps {
    /* Properties of WebKit.DOMVideoTrack */
    selected?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMVideoTrack {
    /* Properties of WebKit.DOMVideoTrack */
    readonly id:string
    readonly kind:string
    readonly label:string
    readonly language:string
    selected:boolean
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMVideoTrack */
    get_id(): string
    get_kind(): string
    get_label(): string
    get_language(): string
    get_selected(): boolean
    set_selected(value: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::id", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::kind", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::label", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::language", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMVideoTrack_Static {
    new (config: DOMVideoTrack_ConstructProps): DOMVideoTrack
}
export declare var DOMVideoTrack: DOMVideoTrack_Static
export interface DOMVideoTrackList_ConstructProps {
    /* Properties of WebKit.DOMVideoTrackList */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMVideoTrackList {
    /* Properties of WebKit.DOMVideoTrackList */
    readonly length:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMVideoTrackList */
    dispatch_event(evt: DOMEvent): boolean
    get_length(): number
    get_track_by_id(id: string): DOMVideoTrack
    item(index: number): DOMVideoTrack
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::length", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMVideoTrackList_Static {
    new (config: DOMVideoTrackList_ConstructProps): DOMVideoTrackList
}
export declare var DOMVideoTrackList: DOMVideoTrackList_Static
export interface DOMWebKitNamedFlow_ConstructProps {
    /* Properties of WebKit.DOMWebKitNamedFlow */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMWebKitNamedFlow {
    /* Properties of WebKit.DOMWebKitNamedFlow */
    readonly first_empty_region_index:number
    readonly name:string
    readonly overset:boolean
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMWebKitNamedFlow */
    dispatch_event(event: DOMEvent): boolean
    get_content(): DOMNodeList
    get_content_nodes(): DOMNodeList
    get_first_empty_region_index(): number
    get_name(): string
    get_overflow(): boolean
    get_overset(): boolean
    get_regions(): DOMNodeList
    get_regions_by_content(contentNode: DOMNode): DOMNodeList
    get_regions_by_content_node(content_node: DOMNode): DOMNodeList
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::first-empty-region-index", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::overset", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMWebKitNamedFlow_Static {
    new (config: DOMWebKitNamedFlow_ConstructProps): DOMWebKitNamedFlow
}
export declare var DOMWebKitNamedFlow: DOMWebKitNamedFlow_Static
export interface DOMWebKitPoint_ConstructProps {
    /* Properties of WebKit.DOMWebKitPoint */
    x?:number
    y?:number
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMWebKitPoint {
    /* Properties of WebKit.DOMWebKitPoint */
    x:number
    y:number
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMWebKitPoint */
    get_x(): number
    get_y(): number
    set_x(value: number): void
    set_y(value: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::y", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMWebKitPoint_Static {
    new (config: DOMWebKitPoint_ConstructProps): DOMWebKitPoint
}
export declare var DOMWebKitPoint: DOMWebKitPoint_Static
export interface DOMWheelEvent_ConstructProps {
    /* Properties of WebKit.DOMWheelEvent */
    /* Properties of WebKit.DOMMouseEvent */
    /* Properties of WebKit.DOMUIEvent */
    /* Properties of WebKit.DOMEvent */
    cancel_bubble?:boolean
    return_value?:boolean
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMWheelEvent {
    /* Properties of WebKit.DOMWheelEvent */
    readonly delta_mode:number
    readonly delta_x:number
    readonly delta_y:number
    readonly delta_z:number
    readonly webkit_direction_inverted_from_device:boolean
    readonly wheel_delta:number
    readonly wheel_delta_x:number
    readonly wheel_delta_y:number
    /* Properties of WebKit.DOMMouseEvent */
    readonly alt_key:boolean
    readonly button:number
    readonly client_x:number
    readonly client_y:number
    readonly ctrl_key:boolean
    readonly from_element:DOMNode
    readonly meta_key:boolean
    readonly offset_x:number
    readonly offset_y:number
    readonly related_target:DOMEventTarget
    readonly screen_x:number
    readonly screen_y:number
    readonly shift_key:boolean
    readonly to_element:DOMNode
    readonly webkit_movement_x:number
    readonly webkit_movement_y:number
    readonly x:number
    readonly y:number
    /* Properties of WebKit.DOMUIEvent */
    readonly char_code:number
    readonly detail:number
    readonly key_code:number
    readonly layer_x:number
    readonly layer_y:number
    readonly page_x:number
    readonly page_y:number
    readonly view:DOMDOMWindow
    readonly which:number
    /* Properties of WebKit.DOMEvent */
    readonly bubbles:boolean
    cancel_bubble:boolean
    readonly cancelable:boolean
    readonly current_target:DOMEventTarget
    readonly default_prevented:boolean
    readonly event_phase:number
    return_value:boolean
    readonly src_element:DOMEventTarget
    readonly target:DOMEventTarget
    readonly time_stamp:number
    readonly type:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMWheelEvent */
    get_delta_mode(): number
    get_delta_x(): number
    get_delta_y(): number
    get_delta_z(): number
    get_webkit_direction_inverted_from_device(): boolean
    get_wheel_delta(): number
    get_wheel_delta_x(): number
    get_wheel_delta_y(): number
    init_wheel_event(wheelDeltaX: number, wheelDeltaY: number, view: DOMDOMWindow, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean): void
    /* Methods of WebKit.DOMMouseEvent */
    get_alt_key(): boolean
    get_button(): number
    get_client_x(): number
    get_client_y(): number
    get_ctrl_key(): boolean
    get_from_element(): DOMNode
    get_meta_key(): boolean
    get_offset_x(): number
    get_offset_y(): number
    get_related_target(): DOMEventTarget
    get_screen_x(): number
    get_screen_y(): number
    get_shift_key(): boolean
    get_to_element(): DOMNode
    get_webkit_movement_x(): number
    get_webkit_movement_y(): number
    get_x(): number
    get_y(): number
    init_mouse_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number, screenX: number, screenY: number, clientX: number, clientY: number, ctrlKey: boolean, altKey: boolean, shiftKey: boolean, metaKey: boolean, button: number, relatedTarget: DOMEventTarget): void
    /* Methods of WebKit.DOMUIEvent */
    get_char_code(): number
    get_detail(): number
    get_key_code(): number
    get_layer_x(): number
    get_layer_y(): number
    get_page_x(): number
    get_page_y(): number
    get_view(): DOMDOMWindow
    get_which(): number
    init_ui_event(type: string, canBubble: boolean, cancelable: boolean, view: DOMDOMWindow, detail: number): void
    /* Methods of WebKit.DOMEvent */
    get_bubbles(): boolean
    get_cancel_bubble(): boolean
    get_cancelable(): boolean
    get_current_target(): DOMEventTarget
    get_default_prevented(): boolean
    get_event_phase(): number
    get_return_value(): boolean
    get_src_element(): DOMEventTarget
    get_target(): DOMEventTarget
    get_time_stamp(): number
    init_event(eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean): void
    prevent_default(): void
    set_cancel_bubble(value: boolean): void
    set_return_value(value: boolean): void
    stop_immediate_propagation(): void
    stop_propagation(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::delta-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::delta-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::delta-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::delta-z", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-direction-inverted-from-device", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wheel-delta", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wheel-delta-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::wheel-delta-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alt-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::button", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::client-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::ctrl-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::from-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::meta-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::offset-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::related-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::screen-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::shift-key", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::to-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-movement-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::webkit-movement-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::char-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::detail", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::key-code", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::layer-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::page-y", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::which", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::bubbles", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancel-bubble", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cancelable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-prevented", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::event-phase", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::return-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::src-element", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::target", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::time-stamp", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMWheelEvent_Static {
    new (config: DOMWheelEvent_ConstructProps): DOMWheelEvent
}
export declare var DOMWheelEvent: DOMWheelEvent_Static
export interface DOMXPathExpression_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMXPathExpression {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMXPathExpression */
    evaluate(contextNode: DOMNode, type: number, inResult: DOMXPathResult): DOMXPathResult
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMXPathExpression_Static {
    new (config: DOMXPathExpression_ConstructProps): DOMXPathExpression
}
export declare var DOMXPathExpression: DOMXPathExpression_Static
export interface DOMXPathNSResolver_ConstructProps {
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMXPathNSResolver {
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMXPathNSResolver */
    lookup_namespace_uri(prefix: string): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMXPathNSResolver_Static {
    new (config: DOMXPathNSResolver_ConstructProps): DOMXPathNSResolver
}
export declare var DOMXPathNSResolver: DOMXPathNSResolver_Static
export interface DOMXPathResult_ConstructProps {
    /* Properties of WebKit.DOMXPathResult */
    /* Properties of WebKit.DOMObject */
    core_object?:object
}
export interface DOMXPathResult {
    /* Properties of WebKit.DOMXPathResult */
    readonly boolean_value:boolean
    readonly invalid_iterator_state:boolean
    readonly number_value:number
    readonly result_type:number
    readonly single_node_value:DOMNode
    readonly snapshot_length:number
    readonly string_value:string
    /* Properties of WebKit.DOMObject */
    /* Methods of WebKit.DOMXPathResult */
    get_boolean_value(): boolean
    get_invalid_iterator_state(): boolean
    get_number_value(): number
    get_result_type(): number
    get_single_node_value(): DOMNode
    get_snapshot_length(): number
    get_string_value(): string
    iterate_next(): DOMNode
    snapshot_item(index: number): DOMNode
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::boolean-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::invalid-iterator-state", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::number-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::result-type", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::single-node-value", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::snapshot-length", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::string-value", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface DOMXPathResult_Static {
    new (config: DOMXPathResult_ConstructProps): DOMXPathResult
}
export declare var DOMXPathResult: DOMXPathResult_Static
export interface Download_ConstructProps {
    /* Properties of WebKit.Download */
    destination_uri?:string
    network_request?:NetworkRequest
    network_response?:NetworkResponse
}
export interface Download {
    /* Properties of WebKit.Download */
    readonly current_size:number
    destination_uri:string
    readonly progress:number
    readonly status:DownloadStatus
    readonly suggested_filename:string
    readonly total_size:number
    /* Methods of WebKit.Download */
    cancel(): void
    get_current_size(): number
    get_destination_uri(): string
    get_elapsed_time(): number
    get_network_request(): NetworkRequest
    get_network_response(): NetworkResponse
    get_progress(): number
    get_status(): DownloadStatus
    get_suggested_filename(): string
    get_total_size(): number
    get_uri(): string
    set_destination_uri(destination_uri: string): void
    start(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.Download */
    connect(sigName: "error", callback: ((error_code: number, error_detail: number, reason: string) => boolean))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::current-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::destination-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::progress", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::status", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::suggested-filename", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::total-size", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface Download_Static {
    new (config: Download_ConstructProps): Download
}
export declare class Download_Static {
    new(request: NetworkRequest): Download
}
export declare var Download: Download_Static
export interface FaviconDatabase_ConstructProps {
    /* Properties of WebKit.FaviconDatabase */
    path?:string
}
export interface FaviconDatabase {
    /* Properties of WebKit.FaviconDatabase */
    path:string
    /* Methods of WebKit.FaviconDatabase */
    clear(): void
    get_favicon_pixbuf(page_uri: string, width: number, height: number, cancellable: Gio.Cancellable | null, callback: Gio.AsyncReadyCallback | null, user_data: object): void
    get_favicon_pixbuf_finish(result: Gio.AsyncResult): GdkPixbuf.Pixbuf
    get_favicon_uri(page_uri: string): string
    get_path(): string
    set_path(path: string | null): void
    try_get_favicon_pixbuf(page_uri: string, width: number, height: number): GdkPixbuf.Pixbuf
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.FaviconDatabase */
    connect(sigName: "icon-loaded", callback: ((frame_uri: string) => void))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::path", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface FaviconDatabase_Static {
    new (config: FaviconDatabase_ConstructProps): FaviconDatabase
}
export declare var FaviconDatabase: FaviconDatabase_Static
export interface FileChooserRequest_ConstructProps {
    /* Properties of WebKit.FileChooserRequest */
}
export interface FileChooserRequest {
    /* Properties of WebKit.FileChooserRequest */
    readonly filter:Gtk.FileFilter
    readonly mime_types:string[]
    readonly select_multiple:boolean
    readonly selected_files:string[]
    /* Methods of WebKit.FileChooserRequest */
    get_mime_types(): string[]
    get_mime_types_filter(): Gtk.FileFilter
    get_select_multiple(): boolean
    get_selected_files(): string[]
    select_files(files: string[]): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filter", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mime-types", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::select-multiple", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::selected-files", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface FileChooserRequest_Static {
    new (config: FileChooserRequest_ConstructProps): FileChooserRequest
}
export declare var FileChooserRequest: FileChooserRequest_Static
export interface GeolocationPolicyDecision_ConstructProps {
}
export interface GeolocationPolicyDecision {
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface GeolocationPolicyDecision_Static {
    new (config: GeolocationPolicyDecision_ConstructProps): GeolocationPolicyDecision
}
export declare var GeolocationPolicyDecision: GeolocationPolicyDecision_Static
export interface HitTestResult_ConstructProps {
    /* Properties of WebKit.HitTestResult */
    context?:HitTestResultContext
    image_uri?:string
    inner_node?:DOMNode
    link_uri?:string
    media_uri?:string
    x?:number
    y?:number
}
export interface HitTestResult {
    /* Properties of WebKit.HitTestResult */
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface HitTestResult_Static {
    new (config: HitTestResult_ConstructProps): HitTestResult
}
export declare var HitTestResult: HitTestResult_Static
export interface IconDatabase_ConstructProps {
    /* Properties of WebKit.IconDatabase */
    path?:string
}
export interface IconDatabase {
    /* Properties of WebKit.IconDatabase */
    path:string
    /* Methods of WebKit.IconDatabase */
    clear(): void
    get_icon_pixbuf(page_uri: string): GdkPixbuf.Pixbuf
    get_icon_uri(page_uri: string): string
    get_path(): string
    set_path(path: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.IconDatabase */
    connect(sigName: "icon-loaded", callback: ((frame: WebFrame, frame_uri: string) => void))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::path", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface IconDatabase_Static {
    new (config: IconDatabase_ConstructProps): IconDatabase
}
export declare var IconDatabase: IconDatabase_Static
export interface NetworkRequest_ConstructProps {
    /* Properties of WebKit.NetworkRequest */
    message?:Soup.Message
    uri?:string
}
export interface NetworkRequest {
    /* Properties of WebKit.NetworkRequest */
    uri:string
    /* Methods of WebKit.NetworkRequest */
    get_message(): Soup.Message
    get_uri(): string
    set_uri(uri: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::uri", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface NetworkRequest_Static {
    new (config: NetworkRequest_ConstructProps): NetworkRequest
}
export declare class NetworkRequest_Static {
    new(uri: string): NetworkRequest
}
export declare var NetworkRequest: NetworkRequest_Static
export interface NetworkResponse_ConstructProps {
    /* Properties of WebKit.NetworkResponse */
    message?:Soup.Message
    uri?:string
}
export interface NetworkResponse {
    /* Properties of WebKit.NetworkResponse */
    readonly suggested_filename:string
    uri:string
    /* Methods of WebKit.NetworkResponse */
    get_message(): Soup.Message
    get_suggested_filename(): string
    get_uri(): string
    set_uri(uri: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::suggested-filename", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::uri", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface NetworkResponse_Static {
    new (config: NetworkResponse_ConstructProps): NetworkResponse
}
export declare class NetworkResponse_Static {
    new(uri: string): NetworkResponse
}
export declare var NetworkResponse: NetworkResponse_Static
export interface SecurityOrigin_ConstructProps {
    /* Properties of WebKit.SecurityOrigin */
    web_database_quota?:number
}
export interface SecurityOrigin {
    /* Properties of WebKit.SecurityOrigin */
    readonly host:string
    readonly port:number
    readonly protocol:string
    web_database_quota:number
    readonly web_database_usage:number
    /* Methods of WebKit.SecurityOrigin */
    get_all_web_databases(): GLib.List
    get_host(): string
    get_port(): number
    get_protocol(): string
    get_web_database_quota(): number
    get_web_database_usage(): number
    set_web_database_quota(quota: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::host", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::port", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::protocol", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::web-database-quota", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::web-database-usage", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface SecurityOrigin_Static {
    new (config: SecurityOrigin_ConstructProps): SecurityOrigin
}
export declare var SecurityOrigin: SecurityOrigin_Static
export interface SoupAuthDialog_ConstructProps {
}
export interface SoupAuthDialog {
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of WebKit.SoupAuthDialog */
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.SoupAuthDialog */
    connect(sigName: "current-toplevel", callback: ((message: Soup.Message) => Gtk.Widget))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface SoupAuthDialog_Static {
    new (config: SoupAuthDialog_ConstructProps): SoupAuthDialog
}
export declare var SoupAuthDialog: SoupAuthDialog_Static
export interface ViewportAttributes_ConstructProps {
    /* Properties of WebKit.ViewportAttributes */
    available_height?:number
    available_width?:number
    desktop_width?:number
    device_dpi?:number
    device_height?:number
    device_width?:number
}
export interface ViewportAttributes {
    /* Properties of WebKit.ViewportAttributes */
    available_height:number
    available_width:number
    desktop_width:number
    device_dpi:number
    device_height:number
    readonly device_pixel_ratio:number
    device_width:number
    readonly height:number
    readonly initial_scale_factor:number
    readonly maximum_scale_factor:number
    readonly minimum_scale_factor:number
    readonly user_scalable:boolean
    readonly valid:boolean
    readonly width:number
    /* Methods of WebKit.ViewportAttributes */
    recompute(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::available-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::available-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::desktop-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::device-dpi", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::device-height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::device-pixel-ratio", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::device-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::initial-scale-factor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::maximum-scale-factor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::minimum-scale-factor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::user-scalable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valid", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface ViewportAttributes_Static {
    new (config: ViewportAttributes_ConstructProps): ViewportAttributes
}
export declare var ViewportAttributes: ViewportAttributes_Static
export interface WebBackForwardList_ConstructProps {
}
export interface WebBackForwardList {
    /* Methods of WebKit.WebBackForwardList */
    add_item(history_item: WebHistoryItem): void
    clear(): void
    contains_item(history_item: WebHistoryItem): boolean
    get_back_item(): WebHistoryItem
    get_back_length(): number
    get_back_list_with_limit(limit: number): GLib.List
    get_current_item(): WebHistoryItem
    get_forward_item(): WebHistoryItem
    get_forward_length(): number
    get_forward_list_with_limit(limit: number): GLib.List
    get_limit(): number
    get_nth_item(index: number): WebHistoryItem
    go_back(): void
    go_forward(): void
    go_to_item(history_item: WebHistoryItem): void
    set_limit(limit: number): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebBackForwardList_Static {
    new (config: WebBackForwardList_ConstructProps): WebBackForwardList
}
export declare var WebBackForwardList: WebBackForwardList_Static
export interface WebDataSource_ConstructProps {
}
export interface WebDataSource {
    /* Methods of WebKit.WebDataSource */
    get_data(): GLib.String
    get_encoding(): string
    get_initial_request(): NetworkRequest
    get_main_resource(): WebResource
    get_request(): NetworkRequest
    get_subresources(): GLib.List
    get_unreachable_uri(): string
    get_web_frame(): WebFrame
    is_loading(): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebDataSource_Static {
    new (config: WebDataSource_ConstructProps): WebDataSource
}
export declare class WebDataSource_Static {
    new(): WebDataSource
    new_with_request(request: NetworkRequest): WebDataSource
}
export declare var WebDataSource: WebDataSource_Static
export interface WebDatabase_ConstructProps {
    /* Properties of WebKit.WebDatabase */
    name?:string
    security_origin?:SecurityOrigin
}
export interface WebDatabase {
    /* Properties of WebKit.WebDatabase */
    readonly display_name:string
    readonly expected_size:number
    readonly filename:string
    readonly size:number
    /* Methods of WebKit.WebDatabase */
    get_display_name(): string
    get_expected_size(): number
    get_filename(): string
    get_name(): string
    get_security_origin(): SecurityOrigin
    get_size(): number
    remove(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::display-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expected-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::filename", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::size", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebDatabase_Static {
    new (config: WebDatabase_ConstructProps): WebDatabase
}
export declare var WebDatabase: WebDatabase_Static
export interface WebFrame_ConstructProps {
    /* Properties of WebKit.WebFrame */
}
export interface WebFrame {
    /* Properties of WebKit.WebFrame */
    readonly horizontal_scrollbar_policy:Gtk.PolicyType
    readonly load_status:LoadStatus
    readonly name:string
    readonly title:string
    readonly uri:string
    readonly vertical_scrollbar_policy:Gtk.PolicyType
    /* Methods of WebKit.WebFrame */
    find_frame(name: string): WebFrame
    get_data_source(): WebDataSource
    get_dom_document(): DOMDocument
    get_global_context(): JavaScriptCore.GlobalContext
    get_horizontal_scrollbar_policy(): Gtk.PolicyType
    get_load_status(): LoadStatus
    get_name(): string
    get_network_response(): NetworkResponse
    get_parent(): WebFrame
    get_provisional_data_source(): WebDataSource
    get_range_for_word_around_caret(): DOMRange
    get_security_origin(): SecurityOrigin
    get_title(): string
    get_uri(): string
    get_vertical_scrollbar_policy(): Gtk.PolicyType
    get_web_view(): WebView
    load_alternate_string(content: string, base_url: string, unreachable_url: string): void
    load_request(request: NetworkRequest): void
    load_string(content: string, mime_type: string, encoding: string, base_uri: string): void
    load_uri(uri: string): void
    print(): void
    print_full(operation: Gtk.PrintOperation, action: Gtk.PrintOperationAction): Gtk.PrintOperationResult
    reload(): void
    replace_selection(text: string): void
    stop_loading(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.WebFrame */
    connect(sigName: "cleared", callback: (() => void))
    connect(sigName: "hovering-over-link", callback: ((object: string, p0: string) => void))
    connect(sigName: "insecure-content-run", callback: ((security_origin: SecurityOrigin, url: string) => void))
    connect(sigName: "load-committed", callback: (() => void))
    connect(sigName: "resource-content-length-received", callback: ((web_resource: WebResource, length_received: number) => void))
    connect(sigName: "resource-load-failed", callback: ((web_resource: WebResource, error: object) => void))
    connect(sigName: "resource-load-finished", callback: ((web_resource: WebResource) => void))
    connect(sigName: "resource-request-starting", callback: ((web_resource: WebResource, request: NetworkRequest, response: NetworkResponse) => void))
    connect(sigName: "resource-response-received", callback: ((web_resource: WebResource, response: NetworkResponse) => void))
    connect(sigName: "scrollbars-policy-changed", callback: (() => boolean))
    connect(sigName: "title-changed", callback: ((title: string) => void))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::horizontal-scrollbar-policy", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::load-status", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vertical-scrollbar-policy", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebFrame_Static {
    new (config: WebFrame_ConstructProps): WebFrame
}
export declare class WebFrame_Static {
    new(web_view: WebView): WebFrame
}
export declare var WebFrame: WebFrame_Static
export interface WebHistoryItem_ConstructProps {
    /* Properties of WebKit.WebHistoryItem */
    alternate_title?:string
}
export interface WebHistoryItem {
    /* Properties of WebKit.WebHistoryItem */
    alternate_title:string
    readonly last_visited_time:number
    readonly original_uri:string
    readonly title:string
    readonly uri:string
    /* Methods of WebKit.WebHistoryItem */
    copy(): WebHistoryItem
    get_alternate_title(): string
    get_last_visited_time(): number
    get_original_uri(): string
    get_title(): string
    get_uri(): string
    set_alternate_title(title: string): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::alternate-title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::last-visited-time", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::original-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::uri", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebHistoryItem_Static {
    new (config: WebHistoryItem_ConstructProps): WebHistoryItem
}
export declare class WebHistoryItem_Static {
    new(): WebHistoryItem
    new_with_data(uri: string, title: string): WebHistoryItem
}
export declare var WebHistoryItem: WebHistoryItem_Static
export interface WebInspector_ConstructProps {
    /* Properties of WebKit.WebInspector */
    javascript_profiling_enabled?:boolean
    timeline_profiling_enabled?:boolean
}
export interface WebInspector {
    /* Properties of WebKit.WebInspector */
    readonly inspected_uri:string
    javascript_profiling_enabled:boolean
    timeline_profiling_enabled:boolean
    readonly web_view:WebView
    /* Methods of WebKit.WebInspector */
    close(): void
    get_inspected_uri(): string
    get_web_view(): WebView
    inspect_coordinates(x: number, y: number): void
    inspect_node(node: DOMNode): void
    show(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.WebInspector */
    connect(sigName: "attach-window", callback: (() => boolean))
    connect(sigName: "close-window", callback: (() => boolean))
    connect(sigName: "detach-window", callback: (() => boolean))
    connect(sigName: "finished", callback: (() => void))
    connect(sigName: "inspect-web-view", callback: ((web_view: WebView) => WebView))
    connect(sigName: "show-window", callback: (() => boolean))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::inspected-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::javascript-profiling-enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::timeline-profiling-enabled", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::web-view", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebInspector_Static {
    new (config: WebInspector_ConstructProps): WebInspector
}
export declare var WebInspector: WebInspector_Static
export interface WebNavigationAction_ConstructProps {
    /* Properties of WebKit.WebNavigationAction */
    button?:number
    modifier_state?:number
    original_uri?:string
    reason?:WebNavigationReason
    target_frame?:string
}
export interface WebNavigationAction {
    /* Properties of WebKit.WebNavigationAction */
    original_uri:string
    reason:WebNavigationReason
    /* Methods of WebKit.WebNavigationAction */
    get_button(): number
    get_modifier_state(): number
    get_original_uri(): string
    get_reason(): WebNavigationReason
    get_target_frame(): string
    set_original_uri(originalUri: string): void
    set_reason(reason: WebNavigationReason): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::original-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::reason", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebNavigationAction_Static {
    new (config: WebNavigationAction_ConstructProps): WebNavigationAction
}
export declare var WebNavigationAction: WebNavigationAction_Static
export interface WebPlugin_ConstructProps {
    /* Properties of WebKit.WebPlugin */
    enabled?:boolean
}
export interface WebPlugin {
    /* Properties of WebKit.WebPlugin */
    enabled:boolean
    /* Methods of WebKit.WebPlugin */
    get_description(): string
    get_enabled(): boolean
    get_name(): string
    get_path(): string
    set_enabled(enabled: boolean): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enabled", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebPlugin_Static {
    new (config: WebPlugin_ConstructProps): WebPlugin
}
export declare var WebPlugin: WebPlugin_Static
export interface WebPluginDatabase_ConstructProps {
}
export interface WebPluginDatabase {
    /* Methods of WebKit.WebPluginDatabase */
    get_plugin_for_mimetype(mime_type: string): WebPlugin
    get_plugins(): GLib.SList
    refresh(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebPluginDatabase_Static {
    new (config: WebPluginDatabase_ConstructProps): WebPluginDatabase
}
export declare class WebPluginDatabase_Static {
    plugins_list_free(list: GLib.SList): void
}
export declare var WebPluginDatabase: WebPluginDatabase_Static
export interface WebPolicyDecision_ConstructProps {
}
export interface WebPolicyDecision {
    /* Methods of WebKit.WebPolicyDecision */
    download(): void
    ignore(): void
    use(): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebPolicyDecision_Static {
    new (config: WebPolicyDecision_ConstructProps): WebPolicyDecision
}
export declare var WebPolicyDecision: WebPolicyDecision_Static
export interface WebResource_ConstructProps {
    /* Properties of WebKit.WebResource */
    uri?:string
}
export interface WebResource {
    /* Properties of WebKit.WebResource */
    readonly encoding:string
    readonly frame_name:string
    readonly mime_type:string
    /* Methods of WebKit.WebResource */
    get_data(): GLib.String
    get_encoding(): string
    get_frame_name(): string
    get_mime_type(): string
    get_uri(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.WebResource */
    connect(sigName: "content-length-received", callback: ((length_received: number) => void))
    connect(sigName: "load-failed", callback: ((error: object) => void))
    connect(sigName: "load-finished", callback: (() => void))
    connect(sigName: "response-received", callback: ((response: NetworkResponse) => void))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::frame-name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::mime-type", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebResource_Static {
    new (config: WebResource_ConstructProps): WebResource
}
export declare class WebResource_Static {
    new(data: string, size: number, uri: string, mime_type: string, encoding: string, frame_name: string): WebResource
}
export declare var WebResource: WebResource_Static
export interface WebSettings_ConstructProps {
    /* Properties of WebKit.WebSettings */
    auto_load_images?:boolean
    auto_resize_window?:boolean
    auto_shrink_images?:boolean
    cursive_font_family?:string
    default_encoding?:string
    default_font_family?:string
    default_font_size?:number
    default_monospace_font_size?:number
    editing_behavior?:EditingBehavior
    enable_accelerated_compositing?:boolean
    enable_caret_browsing?:boolean
    enable_default_context_menu?:boolean
    enable_developer_extras?:boolean
    enable_display_of_insecure_content?:boolean
    enable_dns_prefetching?:boolean
    enable_dom_paste?:boolean
    enable_file_access_from_file_uris?:boolean
    enable_frame_flattening?:boolean
    enable_fullscreen?:boolean
    enable_html5_database?:boolean
    enable_html5_local_storage?:boolean
    enable_hyperlink_auditing?:boolean
    enable_java_applet?:boolean
    enable_media_stream?:boolean
    enable_mediasource?:boolean
    enable_offline_web_application_cache?:boolean
    enable_page_cache?:boolean
    enable_plugins?:boolean
    enable_private_browsing?:boolean
    enable_running_of_insecure_content?:boolean
    enable_scripts?:boolean
    enable_site_specific_quirks?:boolean
    enable_smooth_scrolling?:boolean
    enable_spatial_navigation?:boolean
    enable_spell_checking?:boolean
    enable_universal_access_from_file_uris?:boolean
    enable_webaudio?:boolean
    enable_webgl?:boolean
    enable_xss_auditor?:boolean
    enforce_96_dpi?:boolean
    fantasy_font_family?:string
    html5_local_storage_database_path?:string
    javascript_can_access_clipboard?:boolean
    javascript_can_open_windows_automatically?:boolean
    media_playback_allows_inline?:boolean
    media_playback_requires_user_gesture?:boolean
    minimum_font_size?:number
    minimum_logical_font_size?:number
    monospace_font_family?:string
    print_backgrounds?:boolean
    resizable_text_areas?:boolean
    respect_image_orientation?:boolean
    sans_serif_font_family?:string
    serif_font_family?:string
    spell_checking_languages?:string
    tab_key_cycles_through_elements?:boolean
    user_agent?:string
    user_stylesheet_uri?:string
    zoom_step?:number
}
export interface WebSettings {
    /* Properties of WebKit.WebSettings */
    auto_load_images:boolean
    auto_resize_window:boolean
    auto_shrink_images:boolean
    cursive_font_family:string
    default_encoding:string
    default_font_family:string
    default_font_size:number
    default_monospace_font_size:number
    editing_behavior:EditingBehavior
    enable_accelerated_compositing:boolean
    enable_caret_browsing:boolean
    enable_default_context_menu:boolean
    enable_developer_extras:boolean
    enable_display_of_insecure_content:boolean
    enable_dns_prefetching:boolean
    enable_dom_paste:boolean
    enable_file_access_from_file_uris:boolean
    enable_frame_flattening:boolean
    enable_fullscreen:boolean
    enable_html5_database:boolean
    enable_html5_local_storage:boolean
    enable_hyperlink_auditing:boolean
    enable_java_applet:boolean
    enable_media_stream:boolean
    enable_mediasource:boolean
    enable_offline_web_application_cache:boolean
    enable_page_cache:boolean
    enable_plugins:boolean
    enable_private_browsing:boolean
    enable_running_of_insecure_content:boolean
    enable_scripts:boolean
    enable_site_specific_quirks:boolean
    enable_smooth_scrolling:boolean
    enable_spatial_navigation:boolean
    enable_spell_checking:boolean
    enable_universal_access_from_file_uris:boolean
    enable_webaudio:boolean
    enable_webgl:boolean
    enable_xss_auditor:boolean
    enforce_96_dpi:boolean
    fantasy_font_family:string
    html5_local_storage_database_path:string
    javascript_can_access_clipboard:boolean
    javascript_can_open_windows_automatically:boolean
    media_playback_allows_inline:boolean
    media_playback_requires_user_gesture:boolean
    minimum_font_size:number
    minimum_logical_font_size:number
    monospace_font_family:string
    print_backgrounds:boolean
    resizable_text_areas:boolean
    respect_image_orientation:boolean
    sans_serif_font_family:string
    serif_font_family:string
    spell_checking_languages:string
    tab_key_cycles_through_elements:boolean
    user_agent:string
    user_stylesheet_uri:string
    zoom_step:number
    /* Methods of WebKit.WebSettings */
    copy(): WebSettings
    get_user_agent(): string
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::auto-load-images", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::auto-resize-window", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::auto-shrink-images", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::cursive-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-font-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::default-monospace-font-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editing-behavior", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-accelerated-compositing", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-caret-browsing", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-default-context-menu", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-developer-extras", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-display-of-insecure-content", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-dns-prefetching", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-dom-paste", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-file-access-from-file-uris", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-frame-flattening", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-fullscreen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-html5-database", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-html5-local-storage", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-hyperlink-auditing", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-java-applet", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-media-stream", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-mediasource", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-offline-web-application-cache", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-page-cache", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-plugins", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-private-browsing", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-running-of-insecure-content", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-scripts", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-site-specific-quirks", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-smooth-scrolling", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-spatial-navigation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-spell-checking", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-universal-access-from-file-uris", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-webaudio", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-webgl", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enable-xss-auditor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::enforce-96-dpi", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fantasy-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::html5-local-storage-database-path", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::javascript-can-access-clipboard", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::javascript-can-open-windows-automatically", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-playback-allows-inline", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::media-playback-requires-user-gesture", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::minimum-font-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::minimum-logical-font-size", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::monospace-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::print-backgrounds", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resizable-text-areas", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::respect-image-orientation", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sans-serif-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::serif-font-family", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::spell-checking-languages", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tab-key-cycles-through-elements", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::user-agent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::user-stylesheet-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::zoom-step", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebSettings_Static {
    new (config: WebSettings_ConstructProps): WebSettings
}
export declare class WebSettings_Static {
    new(): WebSettings
}
export declare var WebSettings: WebSettings_Static
export interface WebView_ConstructProps {
    /* Properties of WebKit.WebView */
    custom_encoding?:string
    editable?:boolean
    full_content_zoom?:boolean
    self_scrolling?:boolean
    settings?:WebSettings
    transparent?:boolean
    view_mode?:WebViewViewMode
    window_features?:WebWindowFeatures
    zoom_level?:number
    /* Properties of Gtk.Container */
    border_width?:number
    child?:Gtk.Widget
    resize_mode?:Gtk.ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable?:boolean
    can_default?:boolean
    can_focus?:boolean
    double_buffered?:boolean
    events?:Gdk.EventMask
    expand?:boolean
    halign?:Gtk.Align
    has_default?:boolean
    has_focus?:boolean
    has_tooltip?:boolean
    height_request?:number
    hexpand?:boolean
    hexpand_set?:boolean
    is_focus?:boolean
    margin?:number
    margin_bottom?:number
    margin_end?:number
    margin_left?:number
    margin_right?:number
    margin_start?:number
    margin_top?:number
    name?:string
    no_show_all?:boolean
    opacity?:number
    parent?:Gtk.Container
    receives_default?:boolean
    sensitive?:boolean
    style?:Gtk.Style
    tooltip_markup?:string
    tooltip_text?:string
    valign?:Gtk.Align
    vexpand?:boolean
    vexpand_set?:boolean
    visible?:boolean
    width_request?:number
}
export interface WebView {
    /* Properties of WebKit.WebView */
    readonly copy_target_list:Gtk.TargetList
    custom_encoding:string
    editable:boolean
    readonly encoding:string
    full_content_zoom:boolean
    readonly icon_uri:string
    readonly im_context:Gtk.IMContext
    readonly load_status:LoadStatus
    readonly paste_target_list:Gtk.TargetList
    readonly progress:number
    settings:WebSettings
    readonly title:string
    transparent:boolean
    readonly uri:string
    view_mode:WebViewViewMode
    readonly viewport_attributes:ViewportAttributes
    readonly web_inspector:WebInspector
    window_features:WebWindowFeatures
    zoom_level:number
    /* Properties of Gtk.Container */
    border_width:number
    child:Gtk.Widget
    resize_mode:Gtk.ResizeMode
    /* Properties of Gtk.Widget */
    app_paintable:boolean
    can_default:boolean
    can_focus:boolean
    readonly composite_child:boolean
    double_buffered:boolean
    events:Gdk.EventMask
    expand:boolean
    halign:Gtk.Align
    has_default:boolean
    has_focus:boolean
    has_tooltip:boolean
    height_request:number
    hexpand:boolean
    hexpand_set:boolean
    is_focus:boolean
    margin:number
    margin_bottom:number
    margin_end:number
    margin_left:number
    margin_right:number
    margin_start:number
    margin_top:number
    name:string
    no_show_all:boolean
    opacity:number
    parent:Gtk.Container
    receives_default:boolean
    readonly scale_factor:number
    sensitive:boolean
    style:Gtk.Style
    tooltip_markup:string
    tooltip_text:string
    valign:Gtk.Align
    vexpand:boolean
    vexpand_set:boolean
    visible:boolean
    width_request:number
    readonly window:Gdk.Window
    /* Methods of WebKit.WebView */
    can_copy_clipboard(): boolean
    can_cut_clipboard(): boolean
    can_go_back(): boolean
    can_go_back_or_forward(steps: number): boolean
    can_go_forward(): boolean
    can_paste_clipboard(): boolean
    can_redo(): boolean
    can_show_mime_type(mime_type: string): boolean
    can_undo(): boolean
    copy_clipboard(): void
    cut_clipboard(): void
    delete_selection(): void
    execute_script(script: string): void
    get_back_forward_list(): WebBackForwardList
    get_copy_target_list(): Gtk.TargetList
    get_custom_encoding(): string
    get_dom_document(): DOMDocument
    get_editable(): boolean
    get_encoding(): string
    get_focused_frame(): WebFrame
    get_full_content_zoom(): boolean
    get_hit_test_result(event: Gdk.EventButton): HitTestResult
    get_icon_pixbuf(): GdkPixbuf.Pixbuf
    get_icon_uri(): string
    get_inspector(): WebInspector
    get_load_status(): LoadStatus
    get_main_frame(): WebFrame
    get_paste_target_list(): Gtk.TargetList
    get_progress(): number
    get_settings(): WebSettings
    get_snapshot(): cairo.Surface
    get_title(): string
    get_transparent(): boolean
    get_uri(): string
    get_view_mode(): WebViewViewMode
    get_view_source_mode(): boolean
    get_viewport_attributes(): ViewportAttributes
    get_window_features(): WebWindowFeatures
    get_zoom_level(): number
    go_back(): void
    go_back_or_forward(steps: number): void
    go_forward(): void
    go_to_back_forward_item(item: WebHistoryItem): boolean
    has_selection(): boolean
    load_html_string(content: string, base_uri: string): void
    load_request(request: NetworkRequest): void
    load_string(content: string, mime_type: string, encoding: string, base_uri: string): void
    load_uri(uri: string): void
    mark_text_matches(string: string, case_sensitive: boolean, limit: number): number
    move_cursor(step: Gtk.MovementStep, count: number): void
    open(uri: string): void
    paste_clipboard(): void
    redo(): void
    reload(): void
    reload_bypass_cache(): void
    search_text(text: string, case_sensitive: boolean, forward: boolean, wrap: boolean): boolean
    select_all(): void
    set_custom_encoding(encoding: string): void
    set_editable(flag: boolean): void
    set_full_content_zoom(full_content_zoom: boolean): void
    set_highlight_text_matches(highlight: boolean): void
    set_maintains_back_forward_list(flag: boolean): void
    set_settings(settings: WebSettings): void
    set_transparent(flag: boolean): void
    set_view_mode(mode: WebViewViewMode): void
    set_view_source_mode(view_source_mode: boolean): void
    set_zoom_level(zoom_level: number): void
    stop_loading(): void
    try_get_favicon_pixbuf(width: number, height: number): GdkPixbuf.Pixbuf
    undo(): void
    unmark_text_matches(): void
    zoom_in(): void
    zoom_out(): void
    /* Methods of Gtk.Container */
    add(widget: Gtk.Widget): void
    check_resize(): void
    child_get_property(child: Gtk.Widget, property_name: string, value: GObject.Value): void
    child_notify(child: Gtk.Widget, child_property: string): void
    child_notify_by_pspec(child: Gtk.Widget, pspec: GObject.ParamSpec): void
    child_set_property(child: Gtk.Widget, property_name: string, value: GObject.Value): void
    child_type(): number
    forall(callback: Gtk.Callback, callback_data: object): void
    foreach(callback: Gtk.Callback, callback_data: object): void
    get_border_width(): number
    get_children(): GLib.List
    get_focus_chain(): [ /* returnType */ boolean, /* focusable_widgets */ GLib.List ]
    get_focus_child(): Gtk.Widget
    get_focus_hadjustment(): Gtk.Adjustment
    get_focus_vadjustment(): Gtk.Adjustment
    get_path_for_child(child: Gtk.Widget): Gtk.WidgetPath
    get_resize_mode(): Gtk.ResizeMode
    propagate_draw(child: Gtk.Widget, cr: cairo.Context): void
    remove(widget: Gtk.Widget): void
    resize_children(): void
    set_border_width(border_width: number): void
    set_focus_chain(focusable_widgets: GLib.List): void
    set_focus_child(child: Gtk.Widget | null): void
    set_focus_hadjustment(adjustment: Gtk.Adjustment): void
    set_focus_vadjustment(adjustment: Gtk.Adjustment): void
    set_reallocate_redraws(needs_redraws: boolean): void
    set_resize_mode(resize_mode: Gtk.ResizeMode): void
    unset_focus_chain(): void
    /* Methods of Gtk.Widget */
    activate(): boolean
    add_accelerator(accel_signal: string, accel_group: Gtk.AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: Gtk.AccelFlags): void
    add_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    add_events(events: number): void
    add_mnemonic_label(label: Gtk.Widget): void
    add_tick_callback(callback: Gtk.TickCallback, user_data: object, notify: GLib.DestroyNotify): number
    can_activate_accel(signal_id: number): boolean
    child_focus(direction: Gtk.DirectionType): boolean
    class_path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    compute_expand(orientation: Gtk.Orientation): boolean
    create_pango_context(): Pango.Context
    create_pango_layout(text: string | null): Pango.Layout
    destroy(): void
    destroyed(widget_pointer: Gtk.Widget): void
    device_is_shadowed(device: Gdk.Device): boolean
    drag_begin(targets: Gtk.TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null): Gdk.DragContext
    drag_begin_with_coordinates(targets: Gtk.TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext
    drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean
    drag_dest_add_image_targets(): void
    drag_dest_add_text_targets(): void
    drag_dest_add_uri_targets(): void
    drag_dest_find_target(context: Gdk.DragContext, target_list: Gtk.TargetList | null): Gdk.Atom
    drag_dest_get_target_list(): Gtk.TargetList
    drag_dest_get_track_motion(): boolean
    drag_dest_set(flags: Gtk.DestDefaults, targets: Gtk.TargetEntry[] | null, n_targets: number, actions: Gdk.DragAction): void
    drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void
    drag_dest_set_target_list(target_list: Gtk.TargetList | null): void
    drag_dest_set_track_motion(track_motion: boolean): void
    drag_dest_unset(): void
    drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void
    drag_highlight(): void
    drag_source_add_image_targets(): void
    drag_source_add_text_targets(): void
    drag_source_add_uri_targets(): void
    drag_source_get_target_list(): Gtk.TargetList
    drag_source_set(start_button_mask: Gdk.ModifierType, targets: Gtk.TargetEntry[] | null, n_targets: number, actions: Gdk.DragAction): void
    drag_source_set_icon_gicon(icon: Gio.Icon): void
    drag_source_set_icon_name(icon_name: string): void
    drag_source_set_icon_pixbuf(pixbuf: GdkPixbuf.Pixbuf): void
    drag_source_set_icon_stock(stock_id: string): void
    drag_source_set_target_list(target_list: Gtk.TargetList | null): void
    drag_source_unset(): void
    drag_unhighlight(): void
    draw(cr: cairo.Context): void
    ensure_style(): void
    error_bell(): void
    event(event: Gdk.Event): boolean
    freeze_child_notify(): void
    get_accessible(): Atk.Object
    get_action_group(prefix: string): Gio.ActionGroup | null
    get_allocated_baseline(): number
    get_allocated_height(): number
    get_allocated_width(): number
    get_allocation(): /* allocation */ Gtk.Allocation
    get_ancestor(widget_type: number): Gtk.Widget | null
    get_app_paintable(): boolean
    get_can_default(): boolean
    get_can_focus(): boolean
    get_child_requisition(): /* requisition */ Gtk.Requisition
    get_child_visible(): boolean
    get_clip(): /* clip */ Gtk.Allocation
    get_clipboard(selection: Gdk.Atom): Gtk.Clipboard
    get_composite_name(): string
    get_device_enabled(device: Gdk.Device): boolean
    get_device_events(device: Gdk.Device): Gdk.EventMask
    get_direction(): Gtk.TextDirection
    get_display(): Gdk.Display
    get_double_buffered(): boolean
    get_events(): number
    get_font_map(): Pango.FontMap | null
    get_font_options(): cairo.FontOptions | null
    get_frame_clock(): Gdk.FrameClock
    get_halign(): Gtk.Align
    get_has_tooltip(): boolean
    get_has_window(): boolean
    get_hexpand(): boolean
    get_hexpand_set(): boolean
    get_mapped(): boolean
    get_margin_bottom(): number
    get_margin_end(): number
    get_margin_left(): number
    get_margin_right(): number
    get_margin_start(): number
    get_margin_top(): number
    get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType
    get_modifier_style(): Gtk.RcStyle
    get_name(): string
    get_no_show_all(): boolean
    get_opacity(): number
    get_pango_context(): Pango.Context
    get_parent(): Gtk.Widget | null
    get_parent_window(): Gdk.Window
    get_path(): Gtk.WidgetPath
    get_pointer(): [ /* x */ number | null, /* y */ number | null ]
    get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    get_preferred_size(): [ /* minimum_size */ Gtk.Requisition | null, /* natural_size */ Gtk.Requisition | null ]
    get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    get_realized(): boolean
    get_receives_default(): boolean
    get_request_mode(): Gtk.SizeRequestMode
    get_requisition(): /* requisition */ Gtk.Requisition
    get_root_window(): Gdk.Window
    get_scale_factor(): number
    get_screen(): Gdk.Screen
    get_sensitive(): boolean
    get_size_request(): [ /* width */ number | null, /* height */ number | null ]
    get_state(): Gtk.StateType
    get_state_flags(): Gtk.StateFlags
    get_style(): Gtk.Style
    get_style_context(): Gtk.StyleContext
    get_support_multidevice(): boolean
    get_template_child(widget_type: number, name: string): GObject.Object
    get_tooltip_markup(): string | null
    get_tooltip_text(): string | null
    get_tooltip_window(): Gtk.Window
    get_toplevel(): Gtk.Widget
    get_valign(): Gtk.Align
    get_valign_with_baseline(): Gtk.Align
    get_vexpand(): boolean
    get_vexpand_set(): boolean
    get_visible(): boolean
    get_visual(): Gdk.Visual
    get_window(): Gdk.Window
    grab_add(): void
    grab_default(): void
    grab_focus(): void
    grab_remove(): void
    has_grab(): boolean
    has_rc_style(): boolean
    has_screen(): boolean
    has_visible_focus(): boolean
    hide(): void
    hide_on_delete(): boolean
    in_destruction(): boolean
    init_template(): void
    input_shape_combine_region(region: cairo.Region | null): void
    insert_action_group(name: string, group: Gio.ActionGroup | null): void
    intersect(area: Gdk.Rectangle, intersection: Gdk.Rectangle | null): boolean
    is_ancestor(ancestor: Gtk.Widget): boolean
    is_composited(): boolean
    is_drawable(): boolean
    is_sensitive(): boolean
    is_toplevel(): boolean
    is_visible(): boolean
    keynav_failed(direction: Gtk.DirectionType): boolean
    list_accel_closures(): GLib.List
    list_action_prefixes(): string[]
    list_mnemonic_labels(): GLib.List
    map(): void
    mnemonic_activate(group_cycling: boolean): boolean
    modify_base(state: Gtk.StateType, color: Gdk.Color | null): void
    modify_bg(state: Gtk.StateType, color: Gdk.Color | null): void
    modify_cursor(primary: Gdk.Color | null, secondary: Gdk.Color | null): void
    modify_fg(state: Gtk.StateType, color: Gdk.Color | null): void
    modify_font(font_desc: Pango.FontDescription | null): void
    modify_style(style: Gtk.RcStyle): void
    modify_text(state: Gtk.StateType, color: Gdk.Color | null): void
    override_background_color(state: Gtk.StateFlags, color: Gdk.RGBA | null): void
    override_color(state: Gtk.StateFlags, color: Gdk.RGBA | null): void
    override_cursor(cursor: Gdk.RGBA | null, secondary_cursor: Gdk.RGBA | null): void
    override_font(font_desc: Pango.FontDescription | null): void
    override_symbolic_color(name: string, color: Gdk.RGBA | null): void
    path(): [ /* path_length */ number | null, /* path */ string | null, /* path_reversed */ string | null ]
    queue_compute_expand(): void
    queue_draw(): void
    queue_draw_area(x: number, y: number, width: number, height: number): void
    queue_draw_region(region: cairo.Region): void
    queue_resize(): void
    queue_resize_no_redraw(): void
    realize(): void
    region_intersect(region: cairo.Region): cairo.Region
    register_window(window: Gdk.Window): void
    remove_accelerator(accel_group: Gtk.AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean
    remove_mnemonic_label(label: Gtk.Widget): void
    remove_tick_callback(id: number): void
    render_icon(stock_id: string, size: number, detail: string | null): GdkPixbuf.Pixbuf
    render_icon_pixbuf(stock_id: string, size: number): GdkPixbuf.Pixbuf | null
    reparent(new_parent: Gtk.Widget): void
    reset_rc_styles(): void
    reset_style(): void
    send_expose(event: Gdk.Event): number
    send_focus_change(event: Gdk.Event): boolean
    set_accel_path(accel_path: string | null, accel_group: Gtk.AccelGroup | null): void
    set_allocation(allocation: Gtk.Allocation): void
    set_app_paintable(app_paintable: boolean): void
    set_can_default(can_default: boolean): void
    set_can_focus(can_focus: boolean): void
    set_child_visible(is_visible: boolean): void
    set_clip(clip: Gtk.Allocation): void
    set_composite_name(name: string): void
    set_device_enabled(device: Gdk.Device, enabled: boolean): void
    set_device_events(device: Gdk.Device, events: Gdk.EventMask): void
    set_direction(dir: Gtk.TextDirection): void
    set_double_buffered(double_buffered: boolean): void
    set_events(events: number): void
    set_font_map(font_map: Pango.FontMap | null): void
    set_font_options(options: cairo.FontOptions | null): void
    set_halign(align: Gtk.Align): void
    set_has_tooltip(has_tooltip: boolean): void
    set_has_window(has_window: boolean): void
    set_hexpand(expand: boolean): void
    set_hexpand_set(set: boolean): void
    set_mapped(mapped: boolean): void
    set_margin_bottom(margin: number): void
    set_margin_end(margin: number): void
    set_margin_left(margin: number): void
    set_margin_right(margin: number): void
    set_margin_start(margin: number): void
    set_margin_top(margin: number): void
    set_name(name: string): void
    set_no_show_all(no_show_all: boolean): void
    set_opacity(opacity: number): void
    set_parent(parent: Gtk.Widget): void
    set_parent_window(parent_window: Gdk.Window): void
    set_realized(realized: boolean): void
    set_receives_default(receives_default: boolean): void
    set_redraw_on_allocate(redraw_on_allocate: boolean): void
    set_sensitive(sensitive: boolean): void
    set_size_request(width: number, height: number): void
    set_state(state: Gtk.StateType): void
    set_state_flags(flags: Gtk.StateFlags, clear: boolean): void
    set_style(style: Gtk.Style | null): void
    set_support_multidevice(support_multidevice: boolean): void
    set_tooltip_markup(markup: string | null): void
    set_tooltip_text(text: string | null): void
    set_tooltip_window(custom_window: Gtk.Window | null): void
    set_valign(align: Gtk.Align): void
    set_vexpand(expand: boolean): void
    set_vexpand_set(set: boolean): void
    set_visible(visible: boolean): void
    set_visual(visual: Gdk.Visual | null): void
    set_window(window: Gdk.Window): void
    shape_combine_region(region: cairo.Region | null): void
    show(): void
    show_all(): void
    show_now(): void
    size_allocate(allocation: Gtk.Allocation): void
    size_allocate_with_baseline(allocation: Gtk.Allocation, baseline: number): void
    size_request(): /* requisition */ Gtk.Requisition
    style_attach(): void
    style_get_property(property_name: string, value: GObject.Value): void
    thaw_child_notify(): void
    translate_coordinates(dest_widget: Gtk.Widget, src_x: number, src_y: number): [ /* returnType */ boolean, /* dest_x */ number, /* dest_y */ number ]
    trigger_tooltip_query(): void
    unmap(): void
    unparent(): void
    unrealize(): void
    unregister_window(window: Gdk.Window): void
    unset_state_flags(flags: Gtk.StateFlags): void
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of WebKit.WebView */
    vfunc_choose_file(frame: WebFrame, old_file: string): string
    vfunc_close_web_view(): boolean
    vfunc_console_message(message: string, line_number: number, source_id: string): boolean
    vfunc_copy_clipboard(): void
    vfunc_cut_clipboard(): void
    vfunc_entering_fullscreen(): boolean
    vfunc_leaving_fullscreen(): boolean
    vfunc_move_cursor(step: Gtk.MovementStep, count: number): boolean
    vfunc_navigation_requested(frame: WebFrame, request: NetworkRequest): NavigationResponse
    vfunc_paste_clipboard(): void
    vfunc_redo(): void
    vfunc_run_file_chooser(request: FileChooserRequest): boolean
    vfunc_script_alert(frame: WebFrame, alert_message: string): boolean
    vfunc_script_confirm(frame: WebFrame, confirm_message: string, did_confirm: boolean): boolean
    vfunc_script_prompt(frame: WebFrame, message: string, default_value: string, value: string): boolean
    vfunc_select_all(): void
    vfunc_set_scroll_adjustments(hadjustment: Gtk.Adjustment, vadjustment: Gtk.Adjustment): void
    vfunc_should_allow_editing_action(): boolean
    vfunc_undo(): void
    vfunc_web_view_ready(): boolean
    /* Virtual methods of Gtk.Container */
    vfunc_add(widget: Gtk.Widget): void
    vfunc_check_resize(): void
    vfunc_child_type(): number
    vfunc_composite_name(child: Gtk.Widget): string
    vfunc_forall(include_internals: boolean, callback: Gtk.Callback, callback_data: object): void
    vfunc_get_child_property(child: Gtk.Widget, property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_get_path_for_child(child: Gtk.Widget): Gtk.WidgetPath
    vfunc_remove(widget: Gtk.Widget): void
    vfunc_set_child_property(child: Gtk.Widget, property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_set_focus_child(child: Gtk.Widget | null): void
    /* Virtual methods of Gtk.Widget */
    vfunc_adjust_baseline_allocation(baseline: number): void
    vfunc_adjust_baseline_request(minimum_baseline: number, natural_baseline: number): void
    vfunc_adjust_size_allocation(orientation: Gtk.Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void
    vfunc_adjust_size_request(orientation: Gtk.Orientation, minimum_size: number, natural_size: number): void
    vfunc_button_press_event(event: Gdk.EventButton): boolean
    vfunc_button_release_event(event: Gdk.EventButton): boolean
    vfunc_can_activate_accel(signal_id: number): boolean
    vfunc_child_notify(child_property: GObject.ParamSpec): void
    vfunc_composited_changed(): void
    vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void
    vfunc_configure_event(event: Gdk.EventConfigure): boolean
    vfunc_damage_event(event: Gdk.EventExpose): boolean
    vfunc_delete_event(event: Gdk.EventAny): boolean
    vfunc_destroy(): void
    vfunc_destroy_event(event: Gdk.EventAny): boolean
    vfunc_direction_changed(previous_direction: Gtk.TextDirection): void
    vfunc_dispatch_child_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_drag_begin(context: Gdk.DragContext): void
    vfunc_drag_data_delete(context: Gdk.DragContext): void
    vfunc_drag_data_get(context: Gdk.DragContext, selection_data: Gtk.SelectionData, info: number, time_: number): void
    vfunc_drag_data_received(context: Gdk.DragContext, x: number, y: number, selection_data: Gtk.SelectionData, info: number, time_: number): void
    vfunc_drag_drop(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_drag_end(context: Gdk.DragContext): void
    vfunc_drag_failed(context: Gdk.DragContext, result: Gtk.DragResult): boolean
    vfunc_drag_leave(context: Gdk.DragContext, time_: number): void
    vfunc_drag_motion(context: Gdk.DragContext, x: number, y: number, time_: number): boolean
    vfunc_draw(cr: cairo.Context): boolean
    vfunc_enter_notify_event(event: Gdk.EventCrossing): boolean
    vfunc_event(event: Gdk.Event): boolean
    vfunc_focus(direction: Gtk.DirectionType): boolean
    vfunc_focus_in_event(event: Gdk.EventFocus): boolean
    vfunc_focus_out_event(event: Gdk.EventFocus): boolean
    vfunc_get_accessible(): Atk.Object
    vfunc_get_preferred_height(): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_height_and_baseline_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null, /* minimum_baseline */ number | null, /* natural_baseline */ number | null ]
    vfunc_get_preferred_height_for_width(width: number): [ /* minimum_height */ number | null, /* natural_height */ number | null ]
    vfunc_get_preferred_width(): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_preferred_width_for_height(height: number): [ /* minimum_width */ number | null, /* natural_width */ number | null ]
    vfunc_get_request_mode(): Gtk.SizeRequestMode
    vfunc_grab_broken_event(event: Gdk.EventGrabBroken): boolean
    vfunc_grab_focus(): void
    vfunc_grab_notify(was_grabbed: boolean): void
    vfunc_hide(): void
    vfunc_hierarchy_changed(previous_toplevel: Gtk.Widget): void
    vfunc_key_press_event(event: Gdk.EventKey): boolean
    vfunc_key_release_event(event: Gdk.EventKey): boolean
    vfunc_keynav_failed(direction: Gtk.DirectionType): boolean
    vfunc_leave_notify_event(event: Gdk.EventCrossing): boolean
    vfunc_map(): void
    vfunc_map_event(event: Gdk.EventAny): boolean
    vfunc_mnemonic_activate(group_cycling: boolean): boolean
    vfunc_motion_notify_event(event: Gdk.EventMotion): boolean
    vfunc_move_focus(direction: Gtk.DirectionType): void
    vfunc_parent_set(previous_parent: Gtk.Widget): void
    vfunc_popup_menu(): boolean
    vfunc_property_notify_event(event: Gdk.EventProperty): boolean
    vfunc_proximity_in_event(event: Gdk.EventProximity): boolean
    vfunc_proximity_out_event(event: Gdk.EventProximity): boolean
    vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Gtk.Tooltip): boolean
    vfunc_queue_draw_region(region: cairo.Region): void
    vfunc_realize(): void
    vfunc_screen_changed(previous_screen: Gdk.Screen): void
    vfunc_scroll_event(event: Gdk.EventScroll): boolean
    vfunc_selection_clear_event(event: Gdk.EventSelection): boolean
    vfunc_selection_get(selection_data: Gtk.SelectionData, info: number, time_: number): void
    vfunc_selection_notify_event(event: Gdk.EventSelection): boolean
    vfunc_selection_received(selection_data: Gtk.SelectionData, time_: number): void
    vfunc_selection_request_event(event: Gdk.EventSelection): boolean
    vfunc_show(): void
    vfunc_show_all(): void
    vfunc_show_help(help_type: Gtk.WidgetHelpType): boolean
    vfunc_size_allocate(allocation: Gtk.Allocation): void
    vfunc_state_changed(previous_state: Gtk.StateType): void
    vfunc_state_flags_changed(previous_state_flags: Gtk.StateFlags): void
    vfunc_style_set(previous_style: Gtk.Style): void
    vfunc_style_updated(): void
    vfunc_touch_event(event: Gdk.EventTouch): boolean
    vfunc_unmap(): void
    vfunc_unmap_event(event: Gdk.EventAny): boolean
    vfunc_unrealize(): void
    vfunc_visibility_notify_event(event: Gdk.EventVisibility): boolean
    vfunc_window_state_event(event: Gdk.EventWindowState): boolean
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of WebKit.WebView */
    connect(sigName: "close-web-view", callback: (() => boolean))
    connect(sigName: "console-message", callback: ((message: string, line: number, source_id: string) => boolean))
    connect(sigName: "context-menu", callback: ((default_menu: Gtk.Widget, hit_test_result: HitTestResult, triggered_with_keyboard: boolean) => boolean))
    connect(sigName: "copy-clipboard", callback: (() => void))
    connect(sigName: "create-plugin-widget", callback: ((mime_type: string, uri: string, param: GLib.HashTable) => Gtk.Widget))
    connect(sigName: "create-web-view", callback: ((frame: WebFrame) => WebView))
    connect(sigName: "cut-clipboard", callback: (() => void))
    connect(sigName: "database-quota-exceeded", callback: ((frame: GObject.Object, database: GObject.Object) => void))
    connect(sigName: "document-load-finished", callback: ((web_frame: WebFrame) => void))
    connect(sigName: "download-requested", callback: ((download: Download) => boolean))
    connect(sigName: "editing-began", callback: (() => void))
    connect(sigName: "editing-ended", callback: (() => void))
    connect(sigName: "entering-fullscreen", callback: ((element: DOMHTMLElement) => boolean))
    connect(sigName: "frame-created", callback: ((web_frame: WebFrame) => void))
    connect(sigName: "geolocation-policy-decision-cancelled", callback: ((frame: WebFrame) => void))
    connect(sigName: "geolocation-policy-decision-requested", callback: ((frame: WebFrame, policy_decision: GeolocationPolicyDecision) => boolean))
    connect(sigName: "hovering-over-link", callback: ((title: string, uri: string) => void))
    connect(sigName: "icon-loaded", callback: ((icon_uri: string) => void))
    connect(sigName: "leaving-fullscreen", callback: ((element: DOMHTMLElement) => boolean))
    connect(sigName: "load-committed", callback: ((frame: WebFrame) => void))
    connect(sigName: "load-error", callback: ((web_frame: WebFrame, uri: string, web_error: GLib.Error) => boolean))
    connect(sigName: "load-finished", callback: ((frame: WebFrame) => void))
    connect(sigName: "load-progress-changed", callback: ((progress: number) => void))
    connect(sigName: "load-started", callback: ((frame: WebFrame) => void))
    connect(sigName: "mime-type-policy-decision-requested", callback: ((frame: WebFrame, request: NetworkRequest, mimetype: string, policy_decision: WebPolicyDecision) => boolean))
    connect(sigName: "move-cursor", callback: ((step: Gtk.MovementStep, count: number) => boolean))
    connect(sigName: "navigation-policy-decision-requested", callback: ((frame: WebFrame, request: NetworkRequest, navigation_action: WebNavigationAction, policy_decision: WebPolicyDecision) => boolean))
    connect(sigName: "navigation-requested", callback: ((frame: WebFrame, request: NetworkRequest) => NavigationResponse))
    connect(sigName: "new-window-policy-decision-requested", callback: ((frame: WebFrame, request: NetworkRequest, navigation_action: WebNavigationAction, policy_decision: WebPolicyDecision) => boolean))
    connect(sigName: "onload-event", callback: ((frame: WebFrame) => void))
    connect(sigName: "paste-clipboard", callback: (() => void))
    connect(sigName: "populate-popup", callback: ((menu: Gtk.Menu) => void))
    connect(sigName: "print-requested", callback: ((web_frame: WebFrame) => boolean))
    connect(sigName: "redo", callback: (() => void))
    connect(sigName: "resource-content-length-received", callback: ((web_frame: WebFrame, web_resource: WebResource, length_received: number) => void))
    connect(sigName: "resource-load-failed", callback: ((web_frame: WebFrame, web_resource: WebResource, error: GLib.Error) => void))
    connect(sigName: "resource-load-finished", callback: ((web_frame: WebFrame, web_resource: WebResource) => void))
    connect(sigName: "resource-request-starting", callback: ((web_frame: WebFrame, web_resource: WebResource, request: NetworkRequest, response: NetworkResponse) => void))
    connect(sigName: "resource-response-received", callback: ((web_frame: WebFrame, web_resource: WebResource, response: NetworkResponse) => void))
    connect(sigName: "run-file-chooser", callback: ((request: FileChooserRequest) => boolean))
    connect(sigName: "script-alert", callback: ((frame: WebFrame, message: string) => boolean))
    connect(sigName: "script-confirm", callback: ((frame: WebFrame, message: string, confirmed: object) => boolean))
    connect(sigName: "script-prompt", callback: ((frame: WebFrame, message: string, default_: string, text: object) => boolean))
    connect(sigName: "select-all", callback: (() => void))
    connect(sigName: "selection-changed", callback: (() => void))
    connect(sigName: "should-apply-style", callback: ((set: DOMCSSStyleDeclaration, range: DOMRange) => boolean))
    connect(sigName: "should-begin-editing", callback: ((range: DOMRange) => boolean))
    connect(sigName: "should-change-selected-range", callback: ((fromRange: DOMRange, toRange: DOMRange, affinity: SelectionAffinity, stillSelecting: boolean) => boolean))
    connect(sigName: "should-delete-range", callback: ((range: DOMRange) => boolean))
    connect(sigName: "should-end-editing", callback: ((range: DOMRange) => boolean))
    connect(sigName: "should-insert-node", callback: ((node: DOMNode, range: DOMRange, action: InsertAction) => boolean))
    connect(sigName: "should-insert-text", callback: ((string: string, range: DOMRange, action: InsertAction) => boolean))
    connect(sigName: "should-show-delete-interface-for-element", callback: ((element: DOMHTMLElement) => boolean))
    connect(sigName: "status-bar-text-changed", callback: ((object: string) => void))
    connect(sigName: "title-changed", callback: ((frame: WebFrame, title: string) => void))
    connect(sigName: "undo", callback: (() => void))
    connect(sigName: "user-changed-contents", callback: (() => void))
    connect(sigName: "viewport-attributes-changed", callback: ((object: ViewportAttributes) => void))
    connect(sigName: "viewport-attributes-recompute-requested", callback: ((object: ViewportAttributes) => void))
    connect(sigName: "web-view-ready", callback: (() => boolean))
    connect(sigName: "window-object-cleared", callback: ((frame: WebFrame, context: object, window_object: object) => void))
    /* Signals of Gtk.Container */
    connect(sigName: "add", callback: ((object: Gtk.Widget) => void))
    connect(sigName: "check-resize", callback: (() => void))
    connect(sigName: "remove", callback: ((object: Gtk.Widget) => void))
    connect(sigName: "set-focus-child", callback: ((object: Gtk.Widget) => void))
    /* Signals of Gtk.Widget */
    connect(sigName: "accel-closures-changed", callback: (() => void))
    connect(sigName: "button-press-event", callback: ((event: Gdk.EventButton) => boolean))
    connect(sigName: "button-release-event", callback: ((event: Gdk.EventButton) => boolean))
    connect(sigName: "can-activate-accel", callback: ((signal_id: number) => boolean))
    connect(sigName: "child-notify", callback: ((child_property: GObject.ParamSpec) => void))
    connect(sigName: "composited-changed", callback: (() => void))
    connect(sigName: "configure-event", callback: ((event: Gdk.EventConfigure) => boolean))
    connect(sigName: "damage-event", callback: ((event: Gdk.EventExpose) => boolean))
    connect(sigName: "delete-event", callback: ((event: Gdk.Event) => boolean))
    connect(sigName: "destroy", callback: (() => void))
    connect(sigName: "destroy-event", callback: ((event: Gdk.Event) => boolean))
    connect(sigName: "direction-changed", callback: ((previous_direction: Gtk.TextDirection) => void))
    connect(sigName: "drag-begin", callback: ((context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-delete", callback: ((context: Gdk.DragContext) => void))
    connect(sigName: "drag-data-get", callback: ((context: Gdk.DragContext, data: Gtk.SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-data-received", callback: ((context: Gdk.DragContext, x: number, y: number, data: Gtk.SelectionData, info: number, time: number) => void))
    connect(sigName: "drag-drop", callback: ((context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "drag-end", callback: ((context: Gdk.DragContext) => void))
    connect(sigName: "drag-failed", callback: ((context: Gdk.DragContext, result: Gtk.DragResult) => boolean))
    connect(sigName: "drag-leave", callback: ((context: Gdk.DragContext, time: number) => void))
    connect(sigName: "drag-motion", callback: ((context: Gdk.DragContext, x: number, y: number, time: number) => boolean))
    connect(sigName: "draw", callback: ((cr: cairo.Context) => boolean))
    connect(sigName: "enter-notify-event", callback: ((event: Gdk.EventCrossing) => boolean))
    connect(sigName: "event", callback: ((event: Gdk.Event) => boolean))
    connect(sigName: "event-after", callback: ((event: Gdk.Event) => void))
    connect(sigName: "focus", callback: ((direction: Gtk.DirectionType) => boolean))
    connect(sigName: "focus-in-event", callback: ((event: Gdk.EventFocus) => boolean))
    connect(sigName: "focus-out-event", callback: ((event: Gdk.EventFocus) => boolean))
    connect(sigName: "grab-broken-event", callback: ((event: Gdk.EventGrabBroken) => boolean))
    connect(sigName: "grab-focus", callback: (() => void))
    connect(sigName: "grab-notify", callback: ((was_grabbed: boolean) => void))
    connect(sigName: "hide", callback: (() => void))
    connect(sigName: "hierarchy-changed", callback: ((previous_toplevel: Gtk.Widget | null) => void))
    connect(sigName: "key-press-event", callback: ((event: Gdk.EventKey) => boolean))
    connect(sigName: "key-release-event", callback: ((event: Gdk.EventKey) => boolean))
    connect(sigName: "keynav-failed", callback: ((direction: Gtk.DirectionType) => boolean))
    connect(sigName: "leave-notify-event", callback: ((event: Gdk.EventCrossing) => boolean))
    connect(sigName: "map", callback: (() => void))
    connect(sigName: "map-event", callback: ((event: Gdk.EventAny) => boolean))
    connect(sigName: "mnemonic-activate", callback: ((arg1: boolean) => boolean))
    connect(sigName: "motion-notify-event", callback: ((event: Gdk.EventMotion) => boolean))
    connect(sigName: "move-focus", callback: ((direction: Gtk.DirectionType) => void))
    connect(sigName: "parent-set", callback: ((old_parent: Gtk.Widget | null) => void))
    connect(sigName: "popup-menu", callback: (() => boolean))
    connect(sigName: "property-notify-event", callback: ((event: Gdk.EventProperty) => boolean))
    connect(sigName: "proximity-in-event", callback: ((event: Gdk.EventProximity) => boolean))
    connect(sigName: "proximity-out-event", callback: ((event: Gdk.EventProximity) => boolean))
    connect(sigName: "query-tooltip", callback: ((x: number, y: number, keyboard_mode: boolean, tooltip: Gtk.Tooltip) => boolean))
    connect(sigName: "realize", callback: (() => void))
    connect(sigName: "screen-changed", callback: ((previous_screen: Gdk.Screen | null) => void))
    connect(sigName: "scroll-event", callback: ((event: Gdk.EventScroll) => boolean))
    connect(sigName: "selection-clear-event", callback: ((event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-get", callback: ((data: Gtk.SelectionData, info: number, time: number) => void))
    connect(sigName: "selection-notify-event", callback: ((event: Gdk.EventSelection) => boolean))
    connect(sigName: "selection-received", callback: ((data: Gtk.SelectionData, time: number) => void))
    connect(sigName: "selection-request-event", callback: ((event: Gdk.EventSelection) => boolean))
    connect(sigName: "show", callback: (() => void))
    connect(sigName: "show-help", callback: ((help_type: Gtk.WidgetHelpType) => boolean))
    connect(sigName: "size-allocate", callback: ((allocation: Gtk.Allocation) => void))
    connect(sigName: "state-changed", callback: ((state: Gtk.StateType) => void))
    connect(sigName: "state-flags-changed", callback: ((flags: Gtk.StateFlags) => void))
    connect(sigName: "style-set", callback: ((previous_style: Gtk.Style | null) => void))
    connect(sigName: "style-updated", callback: (() => void))
    connect(sigName: "touch-event", callback: ((object: Gdk.Event) => boolean))
    connect(sigName: "unmap", callback: (() => void))
    connect(sigName: "unmap-event", callback: ((event: Gdk.EventAny) => boolean))
    connect(sigName: "unrealize", callback: (() => void))
    connect(sigName: "visibility-notify-event", callback: ((event: Gdk.EventVisibility) => boolean))
    connect(sigName: "window-state-event", callback: ((event: Gdk.EventWindowState) => boolean))
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::copy-target-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::custom-encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::editable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::encoding", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::full-content-zoom", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::icon-uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::im-context", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::load-status", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::paste-target-list", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::progress", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::settings", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::title", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::transparent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::uri", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::view-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::viewport-attributes", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::web-inspector", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window-features", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::zoom-level", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::border-width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::resize-mode", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::app-paintable", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-default", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::can-focus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::composite-child", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::double-buffered", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::events", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::expand", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::halign", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-default", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-focus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::has-tooltip", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height-request", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::hexpand-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::is-focus", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-bottom", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-end", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-left", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-right", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-start", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::margin-top", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::name", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::no-show-all", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::opacity", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::parent", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::receives-default", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scale-factor", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::sensitive", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::style", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-markup", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::tooltip-text", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::valign", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::vexpand-set", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width-request", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::window", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebView_Static {
    new (config: WebView_ConstructProps): WebView
}
export declare class WebView_Static {
    new(): Gtk.Widget
}
export declare var WebView: WebView_Static
export interface WebWindowFeatures_ConstructProps {
    /* Properties of WebKit.WebWindowFeatures */
    fullscreen?:boolean
    height?:number
    locationbar_visible?:boolean
    menubar_visible?:boolean
    scrollbar_visible?:boolean
    statusbar_visible?:boolean
    toolbar_visible?:boolean
    width?:number
    x?:number
    y?:number
}
export interface WebWindowFeatures {
    /* Properties of WebKit.WebWindowFeatures */
    fullscreen:boolean
    height:number
    locationbar_visible:boolean
    menubar_visible:boolean
    scrollbar_visible:boolean
    statusbar_visible:boolean
    toolbar_visible:boolean
    width:number
    x:number
    y:number
    /* Methods of WebKit.WebWindowFeatures */
    equal(features2: WebWindowFeatures): boolean
    /* Methods of GObject.Object */
    bind_property(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags): GObject.Binding
    bind_property_full(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.BindingTransformFunc | null, transform_from: GObject.BindingTransformFunc | null, user_data: object, notify: GLib.DestroyNotify): GObject.Binding
    bind_property_with_closures(source_property: string, target: GObject.Object, target_property: string, flags: GObject.BindingFlags, transform_to: GObject.Closure, transform_from: GObject.Closure): GObject.Binding
    force_floating(): void
    freeze_notify(): void
    get_data(key: string): object
    get_property(property_name: string, value: GObject.Value): void
    get_qdata(quark: GLib.Quark): object
    is_floating(): boolean
    notify(property_name: string): void
    notify_by_pspec(pspec: GObject.ParamSpec): void
    ref(): GObject.Object
    ref_sink(): GObject.Object
    replace_data(key: string, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    replace_qdata(quark: GLib.Quark, oldval: object | null, newval: object | null, destroy: GLib.DestroyNotify | null, old_destroy: GLib.DestroyNotify | null): boolean
    run_dispose(): void
    set_data(key: string, data: object): void
    set_property(property_name: string, value: GObject.Value): void
    steal_data(key: string): object
    steal_qdata(quark: GLib.Quark): object
    thaw_notify(): void
    unref(): void
    watch_closure(closure: GObject.Closure): void
    /* Virtual methods of GObject.Object */
    vfunc_constructed(): void
    vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: GObject.ParamSpec): void
    vfunc_dispose(): void
    vfunc_finalize(): void
    vfunc_get_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    vfunc_notify(pspec: GObject.ParamSpec): void
    vfunc_set_property(property_id: number, value: GObject.Value, pspec: GObject.ParamSpec): void
    /* Signals of GObject.Object */
    connect(sigName: "notify", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::fullscreen", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::height", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::locationbar-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::menubar-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::scrollbar-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::statusbar-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::toolbar-visible", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::width", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::x", callback: ((pspec: GObject.ParamSpec) => void))
    connect(sigName: "notify::y", callback: ((pspec: GObject.ParamSpec) => void))
}
export interface WebWindowFeatures_Static {
    new (config: WebWindowFeatures_ConstructProps): WebWindowFeatures
}
export declare class WebWindowFeatures_Static {
    new(): WebWindowFeatures
}
export declare var WebWindowFeatures: WebWindowFeatures_Static
export interface DOMAttrClass {
}
export interface DOMAttrClass_Static {
}
export declare var DOMAttrClass: DOMAttrClass_Static
export interface DOMAudioTrackClass {
}
export interface DOMAudioTrackClass_Static {
}
export declare var DOMAudioTrackClass: DOMAudioTrackClass_Static
export interface DOMAudioTrackListClass {
}
export interface DOMAudioTrackListClass_Static {
}
export declare var DOMAudioTrackListClass: DOMAudioTrackListClass_Static
export interface DOMBarPropClass {
}
export interface DOMBarPropClass_Static {
}
export declare var DOMBarPropClass: DOMBarPropClass_Static
export interface DOMBatteryManagerClass {
}
export interface DOMBatteryManagerClass_Static {
}
export declare var DOMBatteryManagerClass: DOMBatteryManagerClass_Static
export interface DOMBlobClass {
}
export interface DOMBlobClass_Static {
}
export declare var DOMBlobClass: DOMBlobClass_Static
export interface DOMCDATASectionClass {
}
export interface DOMCDATASectionClass_Static {
}
export declare var DOMCDATASectionClass: DOMCDATASectionClass_Static
export interface DOMCSSRuleClass {
}
export interface DOMCSSRuleClass_Static {
}
export declare var DOMCSSRuleClass: DOMCSSRuleClass_Static
export interface DOMCSSRuleListClass {
}
export interface DOMCSSRuleListClass_Static {
}
export declare var DOMCSSRuleListClass: DOMCSSRuleListClass_Static
export interface DOMCSSStyleDeclarationClass {
}
export interface DOMCSSStyleDeclarationClass_Static {
}
export declare var DOMCSSStyleDeclarationClass: DOMCSSStyleDeclarationClass_Static
export interface DOMCSSStyleSheetClass {
}
export interface DOMCSSStyleSheetClass_Static {
}
export declare var DOMCSSStyleSheetClass: DOMCSSStyleSheetClass_Static
export interface DOMCSSValueClass {
}
export interface DOMCSSValueClass_Static {
}
export declare var DOMCSSValueClass: DOMCSSValueClass_Static
export interface DOMCharacterDataClass {
}
export interface DOMCharacterDataClass_Static {
}
export declare var DOMCharacterDataClass: DOMCharacterDataClass_Static
export interface DOMCommentClass {
}
export interface DOMCommentClass_Static {
}
export declare var DOMCommentClass: DOMCommentClass_Static
export interface DOMConsoleClass {
}
export interface DOMConsoleClass_Static {
}
export declare var DOMConsoleClass: DOMConsoleClass_Static
export interface DOMDOMApplicationCacheClass {
}
export interface DOMDOMApplicationCacheClass_Static {
}
export declare var DOMDOMApplicationCacheClass: DOMDOMApplicationCacheClass_Static
export interface DOMDOMImplementationClass {
}
export interface DOMDOMImplementationClass_Static {
}
export declare var DOMDOMImplementationClass: DOMDOMImplementationClass_Static
export interface DOMDOMMimeTypeArrayClass {
}
export interface DOMDOMMimeTypeArrayClass_Static {
}
export declare var DOMDOMMimeTypeArrayClass: DOMDOMMimeTypeArrayClass_Static
export interface DOMDOMMimeTypeClass {
}
export interface DOMDOMMimeTypeClass_Static {
}
export declare var DOMDOMMimeTypeClass: DOMDOMMimeTypeClass_Static
export interface DOMDOMNamedFlowCollectionClass {
}
export interface DOMDOMNamedFlowCollectionClass_Static {
}
export declare var DOMDOMNamedFlowCollectionClass: DOMDOMNamedFlowCollectionClass_Static
export interface DOMDOMPluginArrayClass {
}
export interface DOMDOMPluginArrayClass_Static {
}
export declare var DOMDOMPluginArrayClass: DOMDOMPluginArrayClass_Static
export interface DOMDOMPluginClass {
}
export interface DOMDOMPluginClass_Static {
}
export declare var DOMDOMPluginClass: DOMDOMPluginClass_Static
export interface DOMDOMSecurityPolicyClass {
}
export interface DOMDOMSecurityPolicyClass_Static {
}
export declare var DOMDOMSecurityPolicyClass: DOMDOMSecurityPolicyClass_Static
export interface DOMDOMSelectionClass {
}
export interface DOMDOMSelectionClass_Static {
}
export declare var DOMDOMSelectionClass: DOMDOMSelectionClass_Static
export interface DOMDOMSettableTokenListClass {
}
export interface DOMDOMSettableTokenListClass_Static {
}
export declare var DOMDOMSettableTokenListClass: DOMDOMSettableTokenListClass_Static
export interface DOMDOMStringListClass {
}
export interface DOMDOMStringListClass_Static {
}
export declare var DOMDOMStringListClass: DOMDOMStringListClass_Static
export interface DOMDOMStringMapClass {
}
export interface DOMDOMStringMapClass_Static {
}
export declare var DOMDOMStringMapClass: DOMDOMStringMapClass_Static
export interface DOMDOMTokenListClass {
}
export interface DOMDOMTokenListClass_Static {
}
export declare var DOMDOMTokenListClass: DOMDOMTokenListClass_Static
export interface DOMDOMWindowCSSClass {
}
export interface DOMDOMWindowCSSClass_Static {
}
export declare var DOMDOMWindowCSSClass: DOMDOMWindowCSSClass_Static
export interface DOMDOMWindowClass {
}
export interface DOMDOMWindowClass_Static {
}
export declare var DOMDOMWindowClass: DOMDOMWindowClass_Static
export interface DOMDatabaseClass {
}
export interface DOMDatabaseClass_Static {
}
export declare var DOMDatabaseClass: DOMDatabaseClass_Static
export interface DOMDocumentClass {
}
export interface DOMDocumentClass_Static {
}
export declare var DOMDocumentClass: DOMDocumentClass_Static
export interface DOMDocumentFragmentClass {
}
export interface DOMDocumentFragmentClass_Static {
}
export declare var DOMDocumentFragmentClass: DOMDocumentFragmentClass_Static
export interface DOMDocumentTypeClass {
}
export interface DOMDocumentTypeClass_Static {
}
export declare var DOMDocumentTypeClass: DOMDocumentTypeClass_Static
export interface DOMElementClass {
}
export interface DOMElementClass_Static {
}
export declare var DOMElementClass: DOMElementClass_Static
export interface DOMEntityReferenceClass {
}
export interface DOMEntityReferenceClass_Static {
}
export declare var DOMEntityReferenceClass: DOMEntityReferenceClass_Static
export interface DOMEventClass {
}
export interface DOMEventClass_Static {
}
export declare var DOMEventClass: DOMEventClass_Static
export interface DOMEventTargetClass {
}
export interface DOMEventTargetClass_Static {
}
export declare var DOMEventTargetClass: DOMEventTargetClass_Static
export interface DOMEventTargetIface {
}
export interface DOMEventTargetIface_Static {
}
export declare var DOMEventTargetIface: DOMEventTargetIface_Static
export interface DOMFileClass {
}
export interface DOMFileClass_Static {
}
export declare var DOMFileClass: DOMFileClass_Static
export interface DOMFileListClass {
}
export interface DOMFileListClass_Static {
}
export declare var DOMFileListClass: DOMFileListClass_Static
export interface DOMGamepadClass {
}
export interface DOMGamepadClass_Static {
}
export declare var DOMGamepadClass: DOMGamepadClass_Static
export interface DOMGamepadListClass {
}
export interface DOMGamepadListClass_Static {
}
export declare var DOMGamepadListClass: DOMGamepadListClass_Static
export interface DOMGeolocationClass {
}
export interface DOMGeolocationClass_Static {
}
export declare var DOMGeolocationClass: DOMGeolocationClass_Static
export interface DOMHTMLAnchorElementClass {
}
export interface DOMHTMLAnchorElementClass_Static {
}
export declare var DOMHTMLAnchorElementClass: DOMHTMLAnchorElementClass_Static
export interface DOMHTMLAppletElementClass {
}
export interface DOMHTMLAppletElementClass_Static {
}
export declare var DOMHTMLAppletElementClass: DOMHTMLAppletElementClass_Static
export interface DOMHTMLAreaElementClass {
}
export interface DOMHTMLAreaElementClass_Static {
}
export declare var DOMHTMLAreaElementClass: DOMHTMLAreaElementClass_Static
export interface DOMHTMLAudioElementClass {
}
export interface DOMHTMLAudioElementClass_Static {
}
export declare var DOMHTMLAudioElementClass: DOMHTMLAudioElementClass_Static
export interface DOMHTMLBRElementClass {
}
export interface DOMHTMLBRElementClass_Static {
}
export declare var DOMHTMLBRElementClass: DOMHTMLBRElementClass_Static
export interface DOMHTMLBaseElementClass {
}
export interface DOMHTMLBaseElementClass_Static {
}
export declare var DOMHTMLBaseElementClass: DOMHTMLBaseElementClass_Static
export interface DOMHTMLBaseFontElementClass {
}
export interface DOMHTMLBaseFontElementClass_Static {
}
export declare var DOMHTMLBaseFontElementClass: DOMHTMLBaseFontElementClass_Static
export interface DOMHTMLBodyElementClass {
}
export interface DOMHTMLBodyElementClass_Static {
}
export declare var DOMHTMLBodyElementClass: DOMHTMLBodyElementClass_Static
export interface DOMHTMLButtonElementClass {
}
export interface DOMHTMLButtonElementClass_Static {
}
export declare var DOMHTMLButtonElementClass: DOMHTMLButtonElementClass_Static
export interface DOMHTMLCanvasElementClass {
}
export interface DOMHTMLCanvasElementClass_Static {
}
export declare var DOMHTMLCanvasElementClass: DOMHTMLCanvasElementClass_Static
export interface DOMHTMLCollectionClass {
}
export interface DOMHTMLCollectionClass_Static {
}
export declare var DOMHTMLCollectionClass: DOMHTMLCollectionClass_Static
export interface DOMHTMLDListElementClass {
}
export interface DOMHTMLDListElementClass_Static {
}
export declare var DOMHTMLDListElementClass: DOMHTMLDListElementClass_Static
export interface DOMHTMLDetailsElementClass {
}
export interface DOMHTMLDetailsElementClass_Static {
}
export declare var DOMHTMLDetailsElementClass: DOMHTMLDetailsElementClass_Static
export interface DOMHTMLDirectoryElementClass {
}
export interface DOMHTMLDirectoryElementClass_Static {
}
export declare var DOMHTMLDirectoryElementClass: DOMHTMLDirectoryElementClass_Static
export interface DOMHTMLDivElementClass {
}
export interface DOMHTMLDivElementClass_Static {
}
export declare var DOMHTMLDivElementClass: DOMHTMLDivElementClass_Static
export interface DOMHTMLDocumentClass {
}
export interface DOMHTMLDocumentClass_Static {
}
export declare var DOMHTMLDocumentClass: DOMHTMLDocumentClass_Static
export interface DOMHTMLElementClass {
}
export interface DOMHTMLElementClass_Static {
}
export declare var DOMHTMLElementClass: DOMHTMLElementClass_Static
export interface DOMHTMLEmbedElementClass {
}
export interface DOMHTMLEmbedElementClass_Static {
}
export declare var DOMHTMLEmbedElementClass: DOMHTMLEmbedElementClass_Static
export interface DOMHTMLFieldSetElementClass {
}
export interface DOMHTMLFieldSetElementClass_Static {
}
export declare var DOMHTMLFieldSetElementClass: DOMHTMLFieldSetElementClass_Static
export interface DOMHTMLFontElementClass {
}
export interface DOMHTMLFontElementClass_Static {
}
export declare var DOMHTMLFontElementClass: DOMHTMLFontElementClass_Static
export interface DOMHTMLFormElementClass {
}
export interface DOMHTMLFormElementClass_Static {
}
export declare var DOMHTMLFormElementClass: DOMHTMLFormElementClass_Static
export interface DOMHTMLFrameElementClass {
}
export interface DOMHTMLFrameElementClass_Static {
}
export declare var DOMHTMLFrameElementClass: DOMHTMLFrameElementClass_Static
export interface DOMHTMLFrameSetElementClass {
}
export interface DOMHTMLFrameSetElementClass_Static {
}
export declare var DOMHTMLFrameSetElementClass: DOMHTMLFrameSetElementClass_Static
export interface DOMHTMLHRElementClass {
}
export interface DOMHTMLHRElementClass_Static {
}
export declare var DOMHTMLHRElementClass: DOMHTMLHRElementClass_Static
export interface DOMHTMLHeadElementClass {
}
export interface DOMHTMLHeadElementClass_Static {
}
export declare var DOMHTMLHeadElementClass: DOMHTMLHeadElementClass_Static
export interface DOMHTMLHeadingElementClass {
}
export interface DOMHTMLHeadingElementClass_Static {
}
export declare var DOMHTMLHeadingElementClass: DOMHTMLHeadingElementClass_Static
export interface DOMHTMLHtmlElementClass {
}
export interface DOMHTMLHtmlElementClass_Static {
}
export declare var DOMHTMLHtmlElementClass: DOMHTMLHtmlElementClass_Static
export interface DOMHTMLIFrameElementClass {
}
export interface DOMHTMLIFrameElementClass_Static {
}
export declare var DOMHTMLIFrameElementClass: DOMHTMLIFrameElementClass_Static
export interface DOMHTMLImageElementClass {
}
export interface DOMHTMLImageElementClass_Static {
}
export declare var DOMHTMLImageElementClass: DOMHTMLImageElementClass_Static
export interface DOMHTMLInputElementClass {
}
export interface DOMHTMLInputElementClass_Static {
}
export declare var DOMHTMLInputElementClass: DOMHTMLInputElementClass_Static
export interface DOMHTMLKeygenElementClass {
}
export interface DOMHTMLKeygenElementClass_Static {
}
export declare var DOMHTMLKeygenElementClass: DOMHTMLKeygenElementClass_Static
export interface DOMHTMLLIElementClass {
}
export interface DOMHTMLLIElementClass_Static {
}
export declare var DOMHTMLLIElementClass: DOMHTMLLIElementClass_Static
export interface DOMHTMLLabelElementClass {
}
export interface DOMHTMLLabelElementClass_Static {
}
export declare var DOMHTMLLabelElementClass: DOMHTMLLabelElementClass_Static
export interface DOMHTMLLegendElementClass {
}
export interface DOMHTMLLegendElementClass_Static {
}
export declare var DOMHTMLLegendElementClass: DOMHTMLLegendElementClass_Static
export interface DOMHTMLLinkElementClass {
}
export interface DOMHTMLLinkElementClass_Static {
}
export declare var DOMHTMLLinkElementClass: DOMHTMLLinkElementClass_Static
export interface DOMHTMLMapElementClass {
}
export interface DOMHTMLMapElementClass_Static {
}
export declare var DOMHTMLMapElementClass: DOMHTMLMapElementClass_Static
export interface DOMHTMLMarqueeElementClass {
}
export interface DOMHTMLMarqueeElementClass_Static {
}
export declare var DOMHTMLMarqueeElementClass: DOMHTMLMarqueeElementClass_Static
export interface DOMHTMLMediaElementClass {
}
export interface DOMHTMLMediaElementClass_Static {
}
export declare var DOMHTMLMediaElementClass: DOMHTMLMediaElementClass_Static
export interface DOMHTMLMenuElementClass {
}
export interface DOMHTMLMenuElementClass_Static {
}
export declare var DOMHTMLMenuElementClass: DOMHTMLMenuElementClass_Static
export interface DOMHTMLMetaElementClass {
}
export interface DOMHTMLMetaElementClass_Static {
}
export declare var DOMHTMLMetaElementClass: DOMHTMLMetaElementClass_Static
export interface DOMHTMLModElementClass {
}
export interface DOMHTMLModElementClass_Static {
}
export declare var DOMHTMLModElementClass: DOMHTMLModElementClass_Static
export interface DOMHTMLOListElementClass {
}
export interface DOMHTMLOListElementClass_Static {
}
export declare var DOMHTMLOListElementClass: DOMHTMLOListElementClass_Static
export interface DOMHTMLObjectElementClass {
}
export interface DOMHTMLObjectElementClass_Static {
}
export declare var DOMHTMLObjectElementClass: DOMHTMLObjectElementClass_Static
export interface DOMHTMLOptGroupElementClass {
}
export interface DOMHTMLOptGroupElementClass_Static {
}
export declare var DOMHTMLOptGroupElementClass: DOMHTMLOptGroupElementClass_Static
export interface DOMHTMLOptionElementClass {
}
export interface DOMHTMLOptionElementClass_Static {
}
export declare var DOMHTMLOptionElementClass: DOMHTMLOptionElementClass_Static
export interface DOMHTMLOptionsCollectionClass {
}
export interface DOMHTMLOptionsCollectionClass_Static {
}
export declare var DOMHTMLOptionsCollectionClass: DOMHTMLOptionsCollectionClass_Static
export interface DOMHTMLParagraphElementClass {
}
export interface DOMHTMLParagraphElementClass_Static {
}
export declare var DOMHTMLParagraphElementClass: DOMHTMLParagraphElementClass_Static
export interface DOMHTMLParamElementClass {
}
export interface DOMHTMLParamElementClass_Static {
}
export declare var DOMHTMLParamElementClass: DOMHTMLParamElementClass_Static
export interface DOMHTMLPreElementClass {
}
export interface DOMHTMLPreElementClass_Static {
}
export declare var DOMHTMLPreElementClass: DOMHTMLPreElementClass_Static
export interface DOMHTMLQuoteElementClass {
}
export interface DOMHTMLQuoteElementClass_Static {
}
export declare var DOMHTMLQuoteElementClass: DOMHTMLQuoteElementClass_Static
export interface DOMHTMLScriptElementClass {
}
export interface DOMHTMLScriptElementClass_Static {
}
export declare var DOMHTMLScriptElementClass: DOMHTMLScriptElementClass_Static
export interface DOMHTMLSelectElementClass {
}
export interface DOMHTMLSelectElementClass_Static {
}
export declare var DOMHTMLSelectElementClass: DOMHTMLSelectElementClass_Static
export interface DOMHTMLStyleElementClass {
}
export interface DOMHTMLStyleElementClass_Static {
}
export declare var DOMHTMLStyleElementClass: DOMHTMLStyleElementClass_Static
export interface DOMHTMLTableCaptionElementClass {
}
export interface DOMHTMLTableCaptionElementClass_Static {
}
export declare var DOMHTMLTableCaptionElementClass: DOMHTMLTableCaptionElementClass_Static
export interface DOMHTMLTableCellElementClass {
}
export interface DOMHTMLTableCellElementClass_Static {
}
export declare var DOMHTMLTableCellElementClass: DOMHTMLTableCellElementClass_Static
export interface DOMHTMLTableColElementClass {
}
export interface DOMHTMLTableColElementClass_Static {
}
export declare var DOMHTMLTableColElementClass: DOMHTMLTableColElementClass_Static
export interface DOMHTMLTableElementClass {
}
export interface DOMHTMLTableElementClass_Static {
}
export declare var DOMHTMLTableElementClass: DOMHTMLTableElementClass_Static
export interface DOMHTMLTableRowElementClass {
}
export interface DOMHTMLTableRowElementClass_Static {
}
export declare var DOMHTMLTableRowElementClass: DOMHTMLTableRowElementClass_Static
export interface DOMHTMLTableSectionElementClass {
}
export interface DOMHTMLTableSectionElementClass_Static {
}
export declare var DOMHTMLTableSectionElementClass: DOMHTMLTableSectionElementClass_Static
export interface DOMHTMLTextAreaElementClass {
}
export interface DOMHTMLTextAreaElementClass_Static {
}
export declare var DOMHTMLTextAreaElementClass: DOMHTMLTextAreaElementClass_Static
export interface DOMHTMLTitleElementClass {
}
export interface DOMHTMLTitleElementClass_Static {
}
export declare var DOMHTMLTitleElementClass: DOMHTMLTitleElementClass_Static
export interface DOMHTMLUListElementClass {
}
export interface DOMHTMLUListElementClass_Static {
}
export declare var DOMHTMLUListElementClass: DOMHTMLUListElementClass_Static
export interface DOMHTMLVideoElementClass {
}
export interface DOMHTMLVideoElementClass_Static {
}
export declare var DOMHTMLVideoElementClass: DOMHTMLVideoElementClass_Static
export interface DOMHistoryClass {
}
export interface DOMHistoryClass_Static {
}
export declare var DOMHistoryClass: DOMHistoryClass_Static
export interface DOMKeyboardEventClass {
}
export interface DOMKeyboardEventClass_Static {
}
export declare var DOMKeyboardEventClass: DOMKeyboardEventClass_Static
export interface DOMLocationClass {
}
export interface DOMLocationClass_Static {
}
export declare var DOMLocationClass: DOMLocationClass_Static
export interface DOMMediaControllerClass {
}
export interface DOMMediaControllerClass_Static {
}
export declare var DOMMediaControllerClass: DOMMediaControllerClass_Static
export interface DOMMediaErrorClass {
}
export interface DOMMediaErrorClass_Static {
}
export declare var DOMMediaErrorClass: DOMMediaErrorClass_Static
export interface DOMMediaListClass {
}
export interface DOMMediaListClass_Static {
}
export declare var DOMMediaListClass: DOMMediaListClass_Static
export interface DOMMediaQueryListClass {
}
export interface DOMMediaQueryListClass_Static {
}
export declare var DOMMediaQueryListClass: DOMMediaQueryListClass_Static
export interface DOMMessagePortClass {
}
export interface DOMMessagePortClass_Static {
}
export declare var DOMMessagePortClass: DOMMessagePortClass_Static
export interface DOMMouseEventClass {
}
export interface DOMMouseEventClass_Static {
}
export declare var DOMMouseEventClass: DOMMouseEventClass_Static
export interface DOMNamedNodeMapClass {
}
export interface DOMNamedNodeMapClass_Static {
}
export declare var DOMNamedNodeMapClass: DOMNamedNodeMapClass_Static
export interface DOMNavigatorClass {
}
export interface DOMNavigatorClass_Static {
}
export declare var DOMNavigatorClass: DOMNavigatorClass_Static
export interface DOMNodeClass {
}
export interface DOMNodeClass_Static {
}
export declare var DOMNodeClass: DOMNodeClass_Static
export interface DOMNodeFilterClass {
}
export interface DOMNodeFilterClass_Static {
}
export declare var DOMNodeFilterClass: DOMNodeFilterClass_Static
export interface DOMNodeIteratorClass {
}
export interface DOMNodeIteratorClass_Static {
}
export declare var DOMNodeIteratorClass: DOMNodeIteratorClass_Static
export interface DOMNodeListClass {
}
export interface DOMNodeListClass_Static {
}
export declare var DOMNodeListClass: DOMNodeListClass_Static
export interface DOMObjectClass {
}
export interface DOMObjectClass_Static {
}
export declare var DOMObjectClass: DOMObjectClass_Static
export interface DOMObjectPrivate {
}
export interface DOMObjectPrivate_Static {
}
export declare var DOMObjectPrivate: DOMObjectPrivate_Static
export interface DOMPerformanceClass {
}
export interface DOMPerformanceClass_Static {
}
export declare var DOMPerformanceClass: DOMPerformanceClass_Static
export interface DOMPerformanceEntryClass {
}
export interface DOMPerformanceEntryClass_Static {
}
export declare var DOMPerformanceEntryClass: DOMPerformanceEntryClass_Static
export interface DOMPerformanceEntryListClass {
}
export interface DOMPerformanceEntryListClass_Static {
}
export declare var DOMPerformanceEntryListClass: DOMPerformanceEntryListClass_Static
export interface DOMPerformanceNavigationClass {
}
export interface DOMPerformanceNavigationClass_Static {
}
export declare var DOMPerformanceNavigationClass: DOMPerformanceNavigationClass_Static
export interface DOMPerformanceTimingClass {
}
export interface DOMPerformanceTimingClass_Static {
}
export declare var DOMPerformanceTimingClass: DOMPerformanceTimingClass_Static
export interface DOMProcessingInstructionClass {
}
export interface DOMProcessingInstructionClass_Static {
}
export declare var DOMProcessingInstructionClass: DOMProcessingInstructionClass_Static
export interface DOMRangeClass {
}
export interface DOMRangeClass_Static {
}
export declare var DOMRangeClass: DOMRangeClass_Static
export interface DOMScreenClass {
}
export interface DOMScreenClass_Static {
}
export declare var DOMScreenClass: DOMScreenClass_Static
export interface DOMShadowRootClass {
}
export interface DOMShadowRootClass_Static {
}
export declare var DOMShadowRootClass: DOMShadowRootClass_Static
export interface DOMStorageClass {
}
export interface DOMStorageClass_Static {
}
export declare var DOMStorageClass: DOMStorageClass_Static
export interface DOMStorageInfoClass {
}
export interface DOMStorageInfoClass_Static {
}
export declare var DOMStorageInfoClass: DOMStorageInfoClass_Static
export interface DOMStorageQuotaClass {
}
export interface DOMStorageQuotaClass_Static {
}
export declare var DOMStorageQuotaClass: DOMStorageQuotaClass_Static
export interface DOMStyleMediaClass {
}
export interface DOMStyleMediaClass_Static {
}
export declare var DOMStyleMediaClass: DOMStyleMediaClass_Static
export interface DOMStyleSheetClass {
}
export interface DOMStyleSheetClass_Static {
}
export declare var DOMStyleSheetClass: DOMStyleSheetClass_Static
export interface DOMStyleSheetListClass {
}
export interface DOMStyleSheetListClass_Static {
}
export declare var DOMStyleSheetListClass: DOMStyleSheetListClass_Static
export interface DOMTextClass {
}
export interface DOMTextClass_Static {
}
export declare var DOMTextClass: DOMTextClass_Static
export interface DOMTextTrackClass {
}
export interface DOMTextTrackClass_Static {
}
export declare var DOMTextTrackClass: DOMTextTrackClass_Static
export interface DOMTextTrackCueClass {
}
export interface DOMTextTrackCueClass_Static {
}
export declare var DOMTextTrackCueClass: DOMTextTrackCueClass_Static
export interface DOMTextTrackCueListClass {
}
export interface DOMTextTrackCueListClass_Static {
}
export declare var DOMTextTrackCueListClass: DOMTextTrackCueListClass_Static
export interface DOMTextTrackListClass {
}
export interface DOMTextTrackListClass_Static {
}
export declare var DOMTextTrackListClass: DOMTextTrackListClass_Static
export interface DOMTimeRangesClass {
}
export interface DOMTimeRangesClass_Static {
}
export declare var DOMTimeRangesClass: DOMTimeRangesClass_Static
export interface DOMTouchClass {
}
export interface DOMTouchClass_Static {
}
export declare var DOMTouchClass: DOMTouchClass_Static
export interface DOMTrackEventClass {
}
export interface DOMTrackEventClass_Static {
}
export declare var DOMTrackEventClass: DOMTrackEventClass_Static
export interface DOMTreeWalkerClass {
}
export interface DOMTreeWalkerClass_Static {
}
export declare var DOMTreeWalkerClass: DOMTreeWalkerClass_Static
export interface DOMUIEventClass {
}
export interface DOMUIEventClass_Static {
}
export declare var DOMUIEventClass: DOMUIEventClass_Static
export interface DOMValidityStateClass {
}
export interface DOMValidityStateClass_Static {
}
export declare var DOMValidityStateClass: DOMValidityStateClass_Static
export interface DOMVideoPlaybackQualityClass {
}
export interface DOMVideoPlaybackQualityClass_Static {
}
export declare var DOMVideoPlaybackQualityClass: DOMVideoPlaybackQualityClass_Static
export interface DOMVideoTrackClass {
}
export interface DOMVideoTrackClass_Static {
}
export declare var DOMVideoTrackClass: DOMVideoTrackClass_Static
export interface DOMVideoTrackListClass {
}
export interface DOMVideoTrackListClass_Static {
}
export declare var DOMVideoTrackListClass: DOMVideoTrackListClass_Static
export interface DOMWebKitNamedFlowClass {
}
export interface DOMWebKitNamedFlowClass_Static {
}
export declare var DOMWebKitNamedFlowClass: DOMWebKitNamedFlowClass_Static
export interface DOMWebKitPointClass {
}
export interface DOMWebKitPointClass_Static {
}
export declare var DOMWebKitPointClass: DOMWebKitPointClass_Static
export interface DOMWheelEventClass {
}
export interface DOMWheelEventClass_Static {
}
export declare var DOMWheelEventClass: DOMWheelEventClass_Static
export interface DOMXPathExpressionClass {
}
export interface DOMXPathExpressionClass_Static {
}
export declare var DOMXPathExpressionClass: DOMXPathExpressionClass_Static
export interface DOMXPathNSResolverClass {
}
export interface DOMXPathNSResolverClass_Static {
}
export declare var DOMXPathNSResolverClass: DOMXPathNSResolverClass_Static
export interface DOMXPathResultClass {
}
export interface DOMXPathResultClass_Static {
}
export declare var DOMXPathResultClass: DOMXPathResultClass_Static
export interface DownloadClass {
}
export interface DownloadClass_Static {
}
export declare var DownloadClass: DownloadClass_Static
export interface DownloadPrivate {
}
export interface DownloadPrivate_Static {
}
export declare var DownloadPrivate: DownloadPrivate_Static
export interface FaviconDatabaseClass {
}
export interface FaviconDatabaseClass_Static {
}
export declare var FaviconDatabaseClass: FaviconDatabaseClass_Static
export interface FaviconDatabasePrivate {
}
export interface FaviconDatabasePrivate_Static {
}
export declare var FaviconDatabasePrivate: FaviconDatabasePrivate_Static
export interface FileChooserRequestClass {
}
export interface FileChooserRequestClass_Static {
}
export declare var FileChooserRequestClass: FileChooserRequestClass_Static
export interface FileChooserRequestPrivate {
}
export interface FileChooserRequestPrivate_Static {
}
export declare var FileChooserRequestPrivate: FileChooserRequestPrivate_Static
export interface GeolocationPolicyDecisionClass {
}
export interface GeolocationPolicyDecisionClass_Static {
}
export declare var GeolocationPolicyDecisionClass: GeolocationPolicyDecisionClass_Static
export interface GeolocationPolicyDecisionPrivate {
}
export interface GeolocationPolicyDecisionPrivate_Static {
}
export declare var GeolocationPolicyDecisionPrivate: GeolocationPolicyDecisionPrivate_Static
export interface HitTestResultClass {
}
export interface HitTestResultClass_Static {
}
export declare var HitTestResultClass: HitTestResultClass_Static
export interface HitTestResultPrivate {
}
export interface HitTestResultPrivate_Static {
}
export declare var HitTestResultPrivate: HitTestResultPrivate_Static
export interface IconDatabaseClass {
}
export interface IconDatabaseClass_Static {
}
export declare var IconDatabaseClass: IconDatabaseClass_Static
export interface IconDatabasePrivate {
}
export interface IconDatabasePrivate_Static {
}
export declare var IconDatabasePrivate: IconDatabasePrivate_Static
export interface NetworkRequestClass {
}
export interface NetworkRequestClass_Static {
}
export declare var NetworkRequestClass: NetworkRequestClass_Static
export interface NetworkRequestPrivate {
}
export interface NetworkRequestPrivate_Static {
}
export declare var NetworkRequestPrivate: NetworkRequestPrivate_Static
export interface NetworkResponseClass {
}
export interface NetworkResponseClass_Static {
}
export declare var NetworkResponseClass: NetworkResponseClass_Static
export interface NetworkResponsePrivate {
}
export interface NetworkResponsePrivate_Static {
}
export declare var NetworkResponsePrivate: NetworkResponsePrivate_Static
export interface SecurityOriginClass {
}
export interface SecurityOriginClass_Static {
}
export declare var SecurityOriginClass: SecurityOriginClass_Static
export interface SecurityOriginPrivate {
}
export interface SecurityOriginPrivate_Static {
}
export declare var SecurityOriginPrivate: SecurityOriginPrivate_Static
export interface SoupAuthDialogClass {
}
export interface SoupAuthDialogClass_Static {
}
export declare var SoupAuthDialogClass: SoupAuthDialogClass_Static
export interface SpellCheckerInterface {
}
export interface SpellCheckerInterface_Static {
}
export declare var SpellCheckerInterface: SpellCheckerInterface_Static
export interface ViewportAttributesClass {
}
export interface ViewportAttributesClass_Static {
}
export declare var ViewportAttributesClass: ViewportAttributesClass_Static
export interface ViewportAttributesPrivate {
}
export interface ViewportAttributesPrivate_Static {
}
export declare var ViewportAttributesPrivate: ViewportAttributesPrivate_Static
export interface WebBackForwardListClass {
}
export interface WebBackForwardListClass_Static {
}
export declare var WebBackForwardListClass: WebBackForwardListClass_Static
export interface WebBackForwardListPrivate {
}
export interface WebBackForwardListPrivate_Static {
}
export declare var WebBackForwardListPrivate: WebBackForwardListPrivate_Static
export interface WebDataSourceClass {
}
export interface WebDataSourceClass_Static {
}
export declare var WebDataSourceClass: WebDataSourceClass_Static
export interface WebDataSourcePrivate {
}
export interface WebDataSourcePrivate_Static {
}
export declare var WebDataSourcePrivate: WebDataSourcePrivate_Static
export interface WebDatabaseClass {
}
export interface WebDatabaseClass_Static {
}
export declare var WebDatabaseClass: WebDatabaseClass_Static
export interface WebDatabasePrivate {
}
export interface WebDatabasePrivate_Static {
}
export declare var WebDatabasePrivate: WebDatabasePrivate_Static
export interface WebFrameClass {
}
export interface WebFrameClass_Static {
}
export declare var WebFrameClass: WebFrameClass_Static
export interface WebFramePrivate {
}
export interface WebFramePrivate_Static {
}
export declare var WebFramePrivate: WebFramePrivate_Static
export interface WebHistoryItemClass {
}
export interface WebHistoryItemClass_Static {
}
export declare var WebHistoryItemClass: WebHistoryItemClass_Static
export interface WebHistoryItemPrivate {
}
export interface WebHistoryItemPrivate_Static {
}
export declare var WebHistoryItemPrivate: WebHistoryItemPrivate_Static
export interface WebInspectorClass {
}
export interface WebInspectorClass_Static {
}
export declare var WebInspectorClass: WebInspectorClass_Static
export interface WebInspectorPrivate {
}
export interface WebInspectorPrivate_Static {
}
export declare var WebInspectorPrivate: WebInspectorPrivate_Static
export interface WebNavigationActionClass {
}
export interface WebNavigationActionClass_Static {
}
export declare var WebNavigationActionClass: WebNavigationActionClass_Static
export interface WebNavigationActionPrivate {
}
export interface WebNavigationActionPrivate_Static {
}
export declare var WebNavigationActionPrivate: WebNavigationActionPrivate_Static
export interface WebPluginClass {
}
export interface WebPluginClass_Static {
}
export declare var WebPluginClass: WebPluginClass_Static
export interface WebPluginDatabaseClass {
}
export interface WebPluginDatabaseClass_Static {
}
export declare var WebPluginDatabaseClass: WebPluginDatabaseClass_Static
export interface WebPluginDatabasePrivate {
}
export interface WebPluginDatabasePrivate_Static {
}
export declare var WebPluginDatabasePrivate: WebPluginDatabasePrivate_Static
export interface WebPluginMIMEType {
}
export interface WebPluginMIMEType_Static {
}
export declare var WebPluginMIMEType: WebPluginMIMEType_Static
export interface WebPluginPrivate {
}
export interface WebPluginPrivate_Static {
}
export declare var WebPluginPrivate: WebPluginPrivate_Static
export interface WebPolicyDecisionClass {
}
export interface WebPolicyDecisionClass_Static {
}
export declare var WebPolicyDecisionClass: WebPolicyDecisionClass_Static
export interface WebPolicyDecisionPrivate {
}
export interface WebPolicyDecisionPrivate_Static {
}
export declare var WebPolicyDecisionPrivate: WebPolicyDecisionPrivate_Static
export interface WebResourceClass {
}
export interface WebResourceClass_Static {
}
export declare var WebResourceClass: WebResourceClass_Static
export interface WebResourcePrivate {
}
export interface WebResourcePrivate_Static {
}
export declare var WebResourcePrivate: WebResourcePrivate_Static
export interface WebSettingsClass {
}
export interface WebSettingsClass_Static {
}
export declare var WebSettingsClass: WebSettingsClass_Static
export interface WebSettingsPrivate {
}
export interface WebSettingsPrivate_Static {
}
export declare var WebSettingsPrivate: WebSettingsPrivate_Static
export interface WebViewClass {
}
export interface WebViewClass_Static {
}
export declare var WebViewClass: WebViewClass_Static
export interface WebViewPrivate {
}
export interface WebViewPrivate_Static {
}
export declare var WebViewPrivate: WebViewPrivate_Static
export interface WebWindowFeaturesClass {
}
export interface WebWindowFeaturesClass_Static {
}
export declare var WebWindowFeaturesClass: WebWindowFeaturesClass_Static
export interface WebWindowFeaturesPrivate {
}
export interface WebWindowFeaturesPrivate_Static {
}
export declare var WebWindowFeaturesPrivate: WebWindowFeaturesPrivate_Static